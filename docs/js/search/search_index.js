var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionInput.html",[0,0.724,1,1.871]],["body/interfaces/ActionInput.html",[0,1.188,1,3.07,2,1.798,3,0.609,4,0.531,5,0.457,6,2.867,7,0.387,8,0.743,9,3.936,10,3.936,11,3.936,12,1.582,13,0.602,14,0.039,15,1.82,16,2.515,17,3.34,18,3.34,19,0.026,20,0.032,21,0.026]],["title/classes/TcsBenchmark.html",[22,0.145,23,1.871]],["body/classes/TcsBenchmark.html",[3,0.534,4,0.465,5,0.401,7,0.339,8,0.685,13,0.401,14,0.039,15,1.646,19,0.023,20,0.03,21,0.023,22,0.171,23,2.828,24,0.948,25,2.929,26,1.051,27,1.646,28,3.883,29,1.824,30,3.589,31,1.487,32,1.487,33,4.563,34,3.756,35,3.755,36,4.374,37,3.558,38,1.824,39,4.563,40,3.755,41,5.621,42,3.225,43,1.649,44,2.512,45,4.563,46,4.563,47,1.423,48,1.051]],["title/classes/TcsCallbackManager.html",[22,0.145,49,1.871]],["body/classes/TcsCallbackManager.html",[3,0.371,4,0.466,5,0.278,7,0.339,8,0.534,12,1.112,13,0.47,14,0.04,15,1.364,19,0.016,20,0.023,21,0.016,22,0.119,24,0.659,26,0.73,27,1.769,31,1.232,32,1.488,47,1.424,48,1.348,49,2.208,50,2.036,51,4.173,52,4.173,53,5.039,54,4.173,55,4.173,56,3.561,57,1.755,58,2.932,59,1.755,60,2.473,61,1.508,62,1.508,63,2.473,64,2.859,65,5.623,66,2.197,67,1.052,68,1.488,69,1.164,70,5.315,71,3.124,72,4.566,73,3.42,74,5.315,75,1.96,76,2.473,77,2.473,78,5.315,79,3.561,80,3.561,81,2.473,82,2.473,83,2.473,84,2.473,85,2.473,86,2.208,87,2.473,88,2.473,89,3.561,90,2.473,91,2.473,92,2.473,93,2.473,94,1.581,95,2.473,96,2.473,97,3.561,98,1.219,99,1.361,100,2.473]],["title/interfaces/TcsClientEvent.html",[0,0.724,101,1.871]],["body/interfaces/TcsClientEvent.html",[0,1.19,2,1.803,3,0.61,4,0.532,5,0.458,7,0.388,8,0.744,13,0.458,14,0.039,15,1.75,19,0.026,20,0.032,21,0.026,64,2.732,73,3.508,101,3.076,102,2.876,103,4.085,104,2.947,105,4.589,106,3.35,107,4.085,108,4.085,109,2.876,110,2.876,111,2.876,112,2.876,113,2.24]],["title/classes/TcsCore.html",[22,0.145,114,1.871]],["body/classes/TcsCore.html",[3,0.334,4,0.291,5,0.251,7,0.212,8,0.495,12,1.404,13,0.604,14,0.04,19,0.014,20,0.021,21,0.014,22,0.107,24,0.593,26,0.657,29,1.318,31,1.16,32,1.606,43,1.419,49,2.434,57,1.624,58,3.233,64,1.815,67,1.16,68,1.16,69,1.283,94,1.283,98,1.096,99,1.225,114,2.044,115,1.832,116,5.842,117,3.927,118,3.233,119,3.927,120,2.776,121,1.935,122,2.776,123,2.692,124,3.791,125,5.271,126,3.297,127,1.624,128,1.815,129,2.225,130,2.434,131,2.225,132,2.434,133,2.225,134,2.044,135,2.434,136,2.225,137,2.434,138,2.225,139,2.434,140,2.225,141,3.297,142,2.225,143,4.855,144,2.392,145,4.137,146,2.33,147,1.419,148,3.432,149,3.791,150,1.935,151,3.297,152,2.225,153,3.297,154,2.225,155,3.575,156,3.297,157,2.225,158,2.225,159,2.392,160,2.225,161,1.832,162,2.225,163,2.225,164,2.225,165,1.573,166,3.297,167,2.225,168,1.832,169,1.573,170,1.096,171,2.225,172,2.225,173,2.776,174,2.225,175,3.233,176,2.225,177,2.225,178,2.225,179,2.225]],["title/interfaces/TcsEvent.html",[0,0.724,104,1.661]],["body/interfaces/TcsEvent.html",[0,1.164,2,1.739,3,0.589,4,0.513,5,0.442,7,0.374,8,0.728,13,0.593,14,0.039,15,1.282,19,0.025,20,0.031,21,0.025,64,2.672,73,3.431,101,2.433,102,2.774,103,3.231,104,2.901,105,3.231,106,3.231,107,4.532,108,3.996,109,3.891,110,3.725,111,3.891,112,3.891,113,2.901]],["title/classes/TcsEventListener.html",[22,0.145,180,1.871]],["body/classes/TcsEventListener.html",[3,0.413,4,0.36,5,0.31,7,0.262,8,0.577,13,0.615,14,0.04,19,0.018,20,0.025,21,0.018,22,0.132,24,0.734,26,0.813,27,1.706,29,1.537,31,0.813,32,1.488,38,2.088,43,1.6,44,2.116,48,0.813,61,0.996,62,0.996,66,2.22,67,1.135,68,1.415,69,1.256,71,3.605,94,1.447,109,3.69,110,3.69,112,3.69,113,2.437,144,2.361,147,1.389,150,1.357,180,2.383,181,2.268,182,4.629,183,3.844,184,4.792,185,3.844,186,3.844,187,1.894,188,5.465,189,2.383,190,2.97,191,3.945,192,3.165,193,3.844,194,3.844,195,3.844,196,2.755,197,3.844,198,2.755,199,3.165,200,3.165,201,2.755,202,3.844,203,3.844,204,2.755,205,2.755]],["title/classes/TcsEventManager.html",[22,0.145,130,1.871]],["body/classes/TcsEventManager.html",[3,0.388,4,0.339,5,0.291,7,0.351,8,0.552,13,0.414,14,0.04,19,0.017,20,0.024,21,0.017,22,0.124,24,0.69,26,0.764,27,1.672,31,1.264,32,1.454,44,2.025,48,0.764,59,1.813,61,1.33,62,1.33,67,1.086,68,1.086,69,1.202,71,3.613,94,1.202,98,1.275,99,1.425,104,2.566,111,2.601,128,2.025,130,2.281,144,2.297,180,2.654,182,4.333,190,2.281,191,3.838,192,3.838,199,3.029,200,3.838,206,2.131,207,4.281,208,4.281,209,4.281,210,4.281,211,3.679,212,3.029,213,3.679,214,3.679,215,3.679,216,3.029,217,2.589,218,2.89,219,2.589,220,2.589,221,2.589,222,3.679,223,2.589,224,5.117,225,2.589,226,3.524,227,4.281,228,3.679,229,2.589,230,2.131,231,2.589,232,2.589,233,2.589,234,2.589,235,2.589,236,2.589,237,3.679,238,2.589,239,2.589,240,1.605,241,2.589,242,2.589]],["title/interfaces/TcsInput.html",[0,0.724,16,1.871]],["body/interfaces/TcsInput.html",[0,1.194,1,2.538,2,1.814,3,0.614,4,0.535,5,0.461,6,2.894,7,0.39,8,0.747,9,2.894,10,2.894,11,2.894,12,1.585,13,0.561,14,0.039,15,1.825,16,3.088,17,4.599,18,4.599,19,0.026,20,0.032,21,0.026]],["title/classes/TcsInputManager.html",[22,0.145,132,1.871]],["body/classes/TcsInputManager.html",[3,0.326,4,0.284,5,0.245,7,0.207,8,0.486,9,4.061,10,1.537,11,1.537,12,1.223,13,0.365,14,0.04,15,0.71,19,0.014,20,0.021,21,0.014,22,0.104,24,0.579,26,0.642,27,1.573,31,1.144,32,1.422,43,1.74,47,1.549,48,1.268,57,1.597,59,1.597,61,1.4,62,1.4,67,1.144,68,1.547,69,1.712,94,1.573,118,2.668,132,2.009,134,2.009,170,2.372,187,1.597,216,3.534,243,1.79,244,3.874,245,3.874,246,3.874,247,3.874,248,3.874,249,3.24,250,2.009,251,2.174,252,2.174,253,4.313,254,4.814,255,3.24,256,4.591,257,3.24,258,4.293,259,3.24,260,2.174,261,3.534,262,4.293,263,3.24,264,4.293,265,2.291,266,2.291,267,4.293,268,4.293,269,2.174,270,3.24,271,3.24,272,2.174,273,2.174,274,3.24,275,3.874,276,3.874,277,2.174,278,2.174,279,2.174,280,4.591,281,3.24,282,1.197,283,2.174,284,1.79,285,1.537,286,4.293,287,2.174,288,3.24,289,2.174]],["title/classes/TcsLanguageManager.html",[22,0.145,135,1.871]],["body/classes/TcsLanguageManager.html",[3,0.294,4,0.257,5,0.41,7,0.187,8,0.45,12,1.445,13,0.494,14,0.04,19,0.026,20,0.019,21,0.013,22,0.094,24,0.523,26,0.58,27,1.19,29,1.199,31,1.075,32,1.467,38,1.851,43,1.673,47,1.456,48,1.075,57,1.478,59,1.478,61,0.709,62,0.709,67,1.204,68,1.367,69,1.332,94,1.513,98,2.164,99,2.417,113,2.735,120,3.104,135,1.859,144,2.64,147,1.473,150,1.478,161,2.997,218,2.527,285,2.12,290,1.616,291,2.999,292,2.999,293,2.999,294,2.999,295,4.708,296,2.999,297,1.963,298,4.076,299,4.076,300,3.641,301,2.469,302,2.999,303,5.578,304,2.999,305,2.999,306,1.963,307,5.195,308,3.273,309,4.076,310,2.999,311,4.817,312,1.963,313,2.999,314,4.63,315,2.999,316,2.999,317,2.999,318,1.613,319,1.963,320,2.202,321,2.12,322,3.615,323,4.076,324,4.968,325,2.999,326,2.999,327,2.999,328,1.963,329,4.076,330,2.999,331,2.469,332,1.963,333,2.999,334,1.963,335,1.963,336,1.613,337,1.387,338,2.999,339,1.963,340,2.12,341,2.469,342,1.963,343,1.963,344,1.963]],["title/classes/TcsModule.html",[22,0.145,318,1.338]],["body/classes/TcsModule.html",[3,0.194,4,0.169,5,0.146,7,0.123,8,0.323,12,1.303,13,0.515,14,0.04,15,1.166,19,0.008,20,0.014,21,0.008,22,0.062,24,0.345,26,0.383,27,1.648,29,0.861,30,1.334,31,0.383,32,1.468,34,1.772,38,2.159,43,1.823,47,1.632,48,1.137,61,1.162,62,0.778,66,1.828,67,0.95,68,1.054,69,1.051,75,1.185,86,1.994,94,1.494,98,0.638,99,0.713,121,0.638,123,1.334,124,1.952,127,1.061,134,2.387,145,3.764,147,1.162,148,2.274,149,2.722,150,1.759,155,1.067,159,1.585,165,1.522,169,1.522,170,2.184,173,0.916,175,2.648,187,1.061,189,1.994,226,1.067,240,0.803,250,1.334,265,1.522,266,2.274,282,1.771,301,2.938,318,0.954,320,2.549,331,1.067,336,1.425,340,0.916,345,1.067,346,3.851,347,4.272,348,3.851,349,2.762,350,2.762,351,3.217,352,3.217,353,2.648,354,3.217,355,3.217,356,2.762,357,2.762,358,2.153,359,2.153,360,1.965,361,2.153,362,2.153,363,4.081,364,2.153,365,1.522,366,1.296,367,1.296,368,1.296,369,1.296,370,1.296,371,2.153,372,3.168,373,2.153,374,2.153,375,1.772,376,1.296,377,1.296,378,1.994,379,1.296,380,1.296,381,1.296,382,4.081,383,3.851,384,1.296,385,3.217,386,3.217,387,2.153,388,1.522,389,2.153,390,2.153,391,2.153,392,1.296,393,3.569,394,2.762,395,1.296,396,2.153,397,2.153,398,2.153,399,2.274,400,2.153,401,2.153,402,2.153,403,1.296,404,1.772,405,2.938,406,1.067,407,1.067,408,1.296,409,1.296,410,1.296,411,1.067,412,3.569,413,1.296,414,1.296,415,2.153,416,1.296,417,1.296,418,2.762,419,2.762,420,1.296,421,1.296,422,1.296,423,2.153,424,2.274,425,1.296,426,2.762,427,1.296,428,2.153,429,2.648,430,2.153,431,1.296,432,2.153,433,1.296,434,1.296,435,1.296,436,1.296,437,0.713,438,1.296,439,1.296,440,1.296,441,1.296,442,1.296,443,1.296,444,1.296,445,1.296,446,1.296,447,1.296,448,1.296,449,1.296,450,1.296,451,1.296,452,1.067,453,1.296,454,1.296,455,1.296,456,1.296,457,1.296,458,2.153,459,1.296,460,2.153,461,2.153,462,1.296,463,1.067,464,1.296,465,1.296,466,1.296,467,2.762,468,1.296,469,2.762,470,1.296,471,1.296,472,1.296,473,1.296]],["title/interfaces/TcsModuleInfos.html",[0,0.724,360,1.661]],["body/interfaces/TcsModuleInfos.html",[0,0.938,2,1.734,3,0.587,4,0.512,5,0.441,7,0.373,8,0.727,12,1.61,13,0.636,14,0.038,19,0.025,20,0.031,21,0.025,147,1.987,360,2.667,372,3.409,378,3.409,406,4.528,407,4.528,474,3.222,475,4.528,476,5.263]],["title/classes/TcsModuleManager.html",[22,0.145,137,1.871]],["body/classes/TcsModuleManager.html",[3,0.394,4,0.343,5,0.295,7,0.25,8,0.557,12,0.699,13,0.418,14,0.04,19,0.017,20,0.024,21,0.017,22,0.126,24,0.699,26,0.775,27,1.409,28,1.855,29,1.486,31,1.274,32,1.385,38,1.486,43,1.343,47,1.486,48,1.097,57,1.831,59,1.831,61,0.948,62,0.948,67,1.097,68,1.097,69,1.214,75,1.445,94,1.214,128,2.045,137,2.303,147,0.948,150,1.293,168,3.059,170,1.293,189,2.303,218,3.069,230,2.161,250,2.303,284,2.161,285,1.855,308,2.626,318,2.079,320,2.574,322,3.059,336,2.433,337,1.855,341,2.161,353,2.161,365,2.626,399,3.059,424,3.551,477,2.161,478,4.313,479,4.313,480,3.715,481,3.715,482,2.624,483,3.715,484,3.715,485,3.715,486,2.624,487,3.715,488,3.715,489,3.715,490,3.715,491,2.624,492,2.624,493,2.624,494,2.624,495,2.624,496,3.715,497,2.624,498,3.059,499,3.715,500,2.624,501,2.624,502,2.161,503,2.624,504,2.624,505,2.624,506,2.624,507,2.624,508,2.624,509,2.624,510,2.624,511,2.624,512,2.624,513,2.161,514,2.624,515,2.624]],["title/classes/TcsThread.html",[22,0.145,516,1.871]],["body/classes/TcsThread.html",[3,0.225,4,0.196,5,0.169,7,0.143,8,0.364,12,1.206,13,0.541,14,0.04,15,1.636,19,0.01,20,0.016,21,0.01,22,0.072,23,1.505,24,0.4,26,0.443,27,1.636,29,0.971,30,2.178,31,0.443,32,1.503,35,2.919,36,1.999,38,1.81,40,1.06,42,2.484,43,1.775,44,2.802,47,1.651,48,1.284,61,0.877,62,0.877,66,1.87,67,1.284,68,1.284,69,1.421,75,1.336,86,0.93,94,1.479,122,1.716,123,1.505,124,1.06,134,2.806,144,2.23,146,1.716,147,1.395,159,2.035,165,1.06,169,1.06,170,2.304,173,1.06,187,1.196,190,2.178,240,1.896,250,1.505,282,2.574,318,1.83,320,2.006,336,2.256,337,1.716,340,1.06,375,1.235,405,1.999,429,1.235,498,1.235,516,1.505,517,1.235,518,3.058,519,4.354,520,3.058,521,3.058,522,4.13,523,2.517,524,2.428,525,2.428,526,3.514,527,2.428,528,1.999,529,2.428,530,2.428,531,4.133,532,2.893,533,1.5,534,2.574,535,1.5,536,2.428,537,1.5,538,1.5,539,1.5,540,1.5,541,2.428,542,2.919,543,1.5,544,2.428,545,2.428,546,1.999,547,2.428,548,1.5,549,2.428,550,3.514,551,2.428,552,1.5,553,2.428,554,1.5,555,4.13,556,3.514,557,1.999,558,1.5,559,3.058,560,2.428,561,2.428,562,2.428,563,1.5,564,1.5,565,1.5,566,1.5,567,1.5,568,1.5,569,2.428,570,1.5,571,1.5,572,1.5,573,2.428,574,1.5,575,1.505,576,2.428,577,1.5,578,2.428,579,1.5,580,1.5,581,1.5,582,1.5,583,3.058,584,1.5,585,1.5,586,2.428,587,2.428,588,1.5,589,1.5]],["title/interfaces/TcsThreadExec.html",[0,0.724,575,1.871]],["body/interfaces/TcsThreadExec.html",[0,1.033,2,1.908,3,0.646,4,0.563,5,0.485,7,0.41,8,0.77,12,1.462,13,0.578,14,0.038,19,0.028,20,0.033,21,0.028,66,2.194,336,2.518,542,4.016,575,3.183,590,3.545]],["title/classes/TcsThreadsManager.html",[22,0.145,139,1.871]],["body/classes/TcsThreadsManager.html",[3,0.356,4,0.311,5,0.268,7,0.389,8,0.519,12,1.269,13,0.505,14,0.04,15,1.333,19,0.015,20,0.022,21,0.015,22,0.114,24,0.633,26,0.702,27,1.333,29,1.383,30,3.081,31,1.205,32,1.406,35,3.366,42,2.445,43,1.619,47,1.631,48,1.406,57,1.704,59,1.704,66,1.904,67,1.205,68,1.205,69,1.333,94,1.556,122,3.513,128,1.904,139,2.145,144,1.704,147,1.474,150,1.704,159,2.01,170,1.704,187,1.704,189,2.145,190,2.145,212,2.848,240,2.145,282,1.904,318,2.203,320,2.414,336,2.203,513,3.359,516,2.145,519,2.848,528,2.848,531,3.85,532,2.848,534,1.904,542,3.366,546,2.848,557,2.848,591,1.956,592,4.079,593,3.459,594,3.459,595,3.459,596,3.459,597,2.376,598,2.376,599,3.459,600,3.459,601,3.459,602,2.376,603,4.481,604,2.376,605,2.376,606,2.376,607,2.376,608,2.376,609,2.376,610,2.376,611,2.376,612,3.459,613,2.376,614,4.481,615,2.376,616,3.459,617,2.376,618,2.376]],["title/contributing.html",[437,1.394,619,1.79,620,1.79]],["body/contributing.html",[5,0.396,14,0.035,19,0.023,20,0.029,21,0.023,38,1.408,98,1.734,127,2.233,411,2.898,534,1.938,620,2.488,621,4.531,622,2.898,623,3.52,624,3.731,625,2.898,626,4.531,627,3.962,628,5.012,629,5.012,630,3.52,631,5.292,632,5.012,633,4.126,634,3.52,635,3.52,636,3.52,637,2.488,638,3.52,639,3.52,640,3.52,641,3.52,642,2.898,643,4.531,644,4.531,645,2.488,646,3.52,647,3.52,648,3.52,649,3.52,650,3.52,651,3.52,652,3.52,653,4.531,654,3.52,655,2.898,656,4.357,657,4.531,658,3.52,659,3.52,660,3.52,661,3.52,662,3.52,663,3.52,664,3.52,665,3.52,666,2.898,667,2.898,668,4.531,669,3.52,670,3.52,671,3.52,672,2.898,673,2.898,674,2.898,675,3.52,676,2.898,677,3.52,678,3.52,679,2.898,680,2.898,681,2.898,682,2.898]],["title/coverage.html",[637,2.893]],["body/coverage.html",[0,1.27,1,1.789,5,0.325,6,2.806,13,0.325,14,0.04,16,1.789,19,0.019,20,0.026,21,0.019,22,0.275,23,1.789,25,2.376,49,1.789,50,2.376,66,2.05,75,3.281,101,1.789,102,2.806,104,1.589,114,1.789,115,2.376,127,1.422,130,1.789,132,1.789,135,1.789,137,1.789,139,1.789,159,1.422,180,1.789,181,2.376,206,2.376,243,2.376,290,2.376,318,1.279,345,2.376,360,1.589,474,2.376,477,2.376,516,1.789,517,2.376,575,1.789,590,2.376,591,2.376,627,2.04,637,2.04,683,2.886,684,2.886,685,2.376,686,5.426,687,2.376,688,5.779,689,4.539,690,2.886,691,2.886,692,2.886,693,3.97,694,3.97,695,3.97,696,3.97,697,2.886,698,2.886,699,2.886,700,3.97,701,2.886,702,2.886,703,2.886,704,2.886,705,2.886,706,2.886,707,2.886,708,4.22,709,2.376,710,2.376,711,2.376,712,2.376,713,3.269,714,2.376,715,2.376,716,2.376,717,2.376,718,3.269,719,2.376,720,2.376,721,2.376,722,2.376,723,2.886,724,2.886,725,2.886,726,2.886]],["title/dependencies.html",[378,2.246,727,2.533]],["body/dependencies.html",[14,0.035,19,0.031,20,0.035,21,0.031,378,2.956]],["title/miscellaneous/functions.html",[728,1.57,729,2.983]],["body/miscellaneous/functions.html",[7,0.383,14,0.038,19,0.026,20,0.032,21,0.026,67,1.682,68,1.682,147,2.058,320,2.36,336,1.781,713,3.309,714,4.055,715,4.055,716,3.309,717,4.055,718,3.309,719,4.055,720,4.055,728,2.492,729,3.309,730,4.926,731,4.926,732,4.02,733,4.02,734,4.02,735,4.02,736,4.926,737,4.02,738,4.02,739,4.02]],["title/index.html",[7,0.241,437,1.394,619,1.79]],["body/index.html",[4,0.422,14,0.035,19,0.021,20,0.028,21,0.021,28,2.283,64,1.778,121,1.591,127,2.752,128,2.646,159,1.591,187,1.591,218,2.002,265,2.283,295,2.659,308,3.028,320,1.898,321,2.283,365,2.283,372,2.655,388,3.397,437,1.778,452,3.957,463,3.957,475,3.526,534,2.358,620,2.283,622,3.526,624,2.659,625,2.659,633,2.659,642,3.526,645,2.283,655,4.214,656,4.214,666,2.659,667,2.659,672,2.659,673,2.659,674,2.659,676,2.659,682,3.526,740,3.229,741,3.229,742,4.806,743,3.229,744,3.229,745,4.284,746,3.229,747,3.229,748,2.659,749,3.229,750,3.229,751,3.229,752,3.229,753,3.229,754,3.229,755,3.229,756,3.229,757,3.229,758,3.229,759,3.229,760,3.229,761,5.119,762,3.229,763,3.229,764,4.284,765,3.229,766,3.229,767,3.229,768,4.284,769,3.229,770,3.229,771,3.229,772,3.229,773,3.229,774,3.229,775,3.229,776,3.229,777,3.229,778,3.229,779,3.229,780,3.229,781,3.229,782,3.229,783,3.229,784,3.229,785,3.229,786,3.229,787,3.229,788,3.229,789,3.229,790,3.229,791,3.229,792,3.229,793,3.229,794,3.229,795,3.229]],["title/license.html",[437,1.394,619,1.79,796,2.085]],["body/license.html",[14,0.03,19,0.023,20,0.03,21,0.023,71,2.229,253,2.96,261,2.96,627,2.542,645,3.247,679,2.96,680,2.96,681,2.96,748,2.96,796,2.96,797,3.596,798,5.062,799,3.596,800,3.596,801,3.596,802,4.594,803,3.596,804,3.596,805,3.596,806,3.596,807,3.596,808,3.596,809,4.594,810,5.859,811,3.596,812,3.596,813,5.062,814,3.596,815,4.594,816,3.596,817,3.596,818,3.596,819,3.596,820,3.596,821,3.596,822,3.596,823,3.596,824,4.594,825,3.596,826,3.596,827,3.596,828,3.596,829,3.596,830,3.596,831,4.594,832,4.594,833,3.596,834,3.596,835,3.596,836,3.596,837,3.596,838,3.596,839,3.596,840,3.596,841,3.596,842,3.596,843,3.596,844,3.596,845,3.596,846,3.596,847,3.596,848,3.596,849,3.596,850,3.596,851,3.596,852,3.596,853,3.596,854,3.596,855,3.596,856,3.596,857,3.596,858,3.596,859,3.596]],["title/modules.html",[121,2.017]],["body/modules.html",[14,0.035,19,0.031,20,0.035,21,0.031,121,2.349]],["title/overview.html",[860,3.37]],["body/overview.html",[2,2.083,14,0.035,19,0.03,20,0.035,21,0.03,24,1.253,860,3.87,861,4.701,862,4.701]],["title/miscellaneous/variables.html",[728,1.57,863,2.983]],["body/miscellaneous/variables.html",[7,0.295,13,0.591,14,0.04,19,0.02,20,0.027,21,0.02,38,1.237,40,2.187,44,1.703,48,1.229,61,1.954,62,1.954,66,2.012,86,3.119,113,1.703,114,1.918,120,2.943,121,1.525,123,2.916,127,2.479,146,2.943,148,2.943,149,3.325,266,2.187,282,2.891,321,2.187,360,1.703,372,1.918,388,2.187,404,2.547,502,3.427,523,2.547,531,2.187,534,1.703,685,2.547,687,3.427,708,2.547,709,3.427,710,3.427,711,3.427,712,3.427,721,2.547,722,3.427,728,1.918,863,2.547,864,3.094,865,5.251,866,3.094,867,5.032,868,3.094,869,3.094,870,4.163,871,3.094,872,3.094,873,3.094,874,3.094,875,3.094,876,3.094,877,3.094,878,3.094,879,3.094,880,3.094,881,3.094,882,4.163,883,4.163,884,3.094,885,3.094,886,3.094]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":75,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["0/1",{"_index":688,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":695,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":694,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":240,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["10",{"_index":876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["11",{"_index":861,"title":{},"body":{"overview.html":{}}}],["2",{"_index":471,"title":{},"body":{"classes/TcsModule.html":{}}}],["2/4",{"_index":690,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":800,"title":{},"body":{"license.html":{}}}],["3/5",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":693,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":692,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":697,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":691,"title":{},"body":{"coverage.html":{}}}],["443",{"_index":445,"title":{},"body":{"classes/TcsModule.html":{}}}],["5/7",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":689,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":696,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":862,"title":{},"body":{"overview.html":{}}}],["60",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":698,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":457,"title":{},"body":{"classes/TcsModule.html":{}}}],["8/14",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":581,"title":{},"body":{"classes/TcsThread.html":{}}}],["_source",{"_index":89,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["above",{"_index":830,"title":{},"body":{"license.html":{}}}],["action",{"_index":253,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["action's",{"_index":268,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["action.actionname",{"_index":276,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata",{"_index":286,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata.inputcontroller",{"_index":288,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actioninput",{"_index":1,"title":{"interfaces/ActionInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["actioninputs",{"_index":244,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actionname",{"_index":9,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["actions",{"_index":650,"title":{},"body":{"contributing.html":{}}}],["activated",{"_index":883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actually",{"_index":549,"title":{},"body":{"classes/TcsThread.html":{}}}],["add",{"_index":218,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["addconfig",{"_index":291,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addconfig(langtoappend",{"_index":296,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addeventhandler",{"_index":207,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["addmoduletogame",{"_index":480,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["addmoduletogame(newmodule",{"_index":485,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["already",{"_index":284,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModuleManager.html":{}}}],["alreadycreated",{"_index":274,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["amount",{"_index":878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":822,"title":{},"body":{"license.html":{}}}],["appear",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":544,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread",{"_index":524,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread(module",{"_index":541,"title":{},"body":{"classes/TcsThread.html":{}}}],["applyeventhandler",{"_index":183,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["applyeventhandler(data",{"_index":197,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["args",{"_index":78,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arguments",{"_index":79,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arising",{"_index":857,"title":{},"body":{"license.html":{}}}],["array",{"_index":250,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["ask",{"_index":757,"title":{},"body":{"index.html":{}}}],["associated",{"_index":811,"title":{},"body":{"license.html":{}}}],["authors",{"_index":848,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":662,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":565,"title":{},"body":{"classes/TcsThread.html":{}}}],["before",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["benchmark",{"_index":36,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{}}}],["benchmark.stop",{"_index":573,"title":{},"body":{"classes/TcsThread.html":{}}}],["between",{"_index":42,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["bindaction",{"_index":245,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["boolean",{"_index":134,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["brief",{"_index":255,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["buf",{"_index":453,"title":{},"body":{"classes/TcsModule.html":{}}}],["buffer.from(d",{"_index":454,"title":{},"body":{"classes/TcsModule.html":{}}}],["build",{"_index":653,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":799,"title":{},"body":{"license.html":{}}}],["call",{"_index":72,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["callbacks",{"_index":58,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{}}}],["callbacks:serverevent",{"_index":88,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["called",{"_index":189,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["can't",{"_index":499,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["catch",{"_index":169,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["category/name",{"_index":398,"title":{},"body":{"classes/TcsModule.html":{}}}],["cb",{"_index":74,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["changes",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":806,"title":{},"body":{"license.html":{}}}],["check",{"_index":266,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["checkversion",{"_index":351,"title":{},"body":{"classes/TcsModule.html":{}}}],["citizenfx/client",{"_index":673,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["citizenfx/server",{"_index":674,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["claim",{"_index":851,"title":{},"body":{"license.html":{}}}],["class",{"_index":22,"title":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["classes",{"_index":24,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"overview.html":{}}}],["cleartick(this.tick",{"_index":587,"title":{},"body":{"classes/TcsThread.html":{}}}],["clicking",{"_index":773,"title":{},"body":{"index.html":{}}}],["client",{"_index":73,"title":{},"body":{"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["clientcallback",{"_index":51,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["clone",{"_index":762,"title":{},"body":{"index.html":{}}}],["code",{"_index":633,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["color",{"_index":400,"title":{},"body":{"classes/TcsModule.html":{}}}],["come",{"_index":603,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["comes",{"_index":545,"title":{},"body":{"classes/TcsThread.html":{}}}],["command",{"_index":682,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commands",{"_index":786,"title":{},"body":{"index.html":{}}}],["compare",{"_index":382,"title":{},"body":{"classes/TcsModule.html":{}}}],["compared",{"_index":386,"title":{},"body":{"classes/TcsModule.html":{}}}],["comparenumber",{"_index":469,"title":{},"body":{"classes/TcsModule.html":{}}}],["compile",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["compiling",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["compodoc",{"_index":660,"title":{},"body":{"contributing.html":{}}}],["compodoc/compodoc",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["concatened",{"_index":397,"title":{},"body":{"classes/TcsModule.html":{}}}],["conditions",{"_index":829,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":754,"title":{},"body":{"index.html":{}}}],["config",{"_index":323,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configuration",{"_index":309,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configured",{"_index":304,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["connection",{"_index":858,"title":{},"body":{"license.html":{}}}],["console",{"_index":149,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["console.error(error",{"_index":465,"title":{},"body":{"classes/TcsModule.html":{}}}],["console.log",{"_index":155,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["console.log(`${consolecolors.red}[error",{"_index":177,"title":{},"body":{"classes/TcsCore.html":{}}}],["console.log(consolecolors.red",{"_index":432,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors",{"_index":394,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue",{"_index":473,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue}[debug",{"_index":174,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.blue}[tcs",{"_index":156,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.green",{"_index":428,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.green}ready",{"_index":171,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.red",{"_index":424,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.reset",{"_index":175,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["consolecolors.yellow",{"_index":399,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${newmodule.getid",{"_index":510,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${thread.id}${consolecolors.red",{"_index":571,"title":{},"body":{"classes/TcsThread.html":{}}}],["consolecolors.yellow}[warning",{"_index":179,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.yellow}initializing",{"_index":157,"title":{},"body":{"classes/TcsCore.html":{}}}],["const",{"_index":47,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor(eventtype",{"_index":185,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["constructor(moduleinfos",{"_index":359,"title":{},"body":{"classes/TcsModule.html":{}}}],["constructor(timer",{"_index":529,"title":{},"body":{"classes/TcsThread.html":{}}}],["contain",{"_index":785,"title":{},"body":{"index.html":{}}}],["contained",{"_index":550,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid",{"_index":525,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid(id",{"_index":547,"title":{},"body":{"classes/TcsThread.html":{}}}],["contract",{"_index":854,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":749,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":620,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":262,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controller's",{"_index":259,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllerkey",{"_index":258,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllers",{"_index":267,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["copies",{"_index":824,"title":{},"body":{"license.html":{}}}],["copy",{"_index":809,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":798,"title":{},"body":{"license.html":{}}}],["core",{"_index":128,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["correctly",{"_index":427,"title":{},"body":{"classes/TcsModule.html":{}}}],["coverage",{"_index":637,"title":{"coverage.html":{}},"body":{"contributing.html":{},"coverage.html":{}}}],["create",{"_index":187,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["created",{"_index":546,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["creates",{"_index":212,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThreadsManager.html":{}}}],["createthread",{"_index":593,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["createthread(module",{"_index":596,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["current",{"_index":38,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":270,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["currentnumber",{"_index":467,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentstep",{"_index":383,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentthread",{"_index":605,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currentthread.appendthread(module",{"_index":611,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["d",{"_index":452,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["damages",{"_index":852,"title":{},"body":{"license.html":{}}}],["data",{"_index":112,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["date",{"_index":375,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["deal",{"_index":812,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":859,"title":{},"body":{"license.html":{}}}],["deaththreadchecker",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deaththreadchecker(module",{"_index":733,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debug",{"_index":123,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":141,"title":{},"body":{"classes/TcsCore.html":{}}}],["debugexec",{"_index":518,"title":{},"body":{"classes/TcsThread.html":{}}}],["debugmode",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":61,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delay",{"_index":519,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delete",{"_index":600,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["deleted",{"_index":556,"title":{},"body":{"classes/TcsThread.html":{}}}],["deletes",{"_index":599,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["demo",{"_index":795,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":378,"title":{"dependencies.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"dependencies.html":{}}}],["dependency",{"_index":500,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["depends",{"_index":411,"title":{},"body":{"classes/TcsModule.html":{},"contributing.html":{}}}],["description",{"_index":69,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["destroymethod",{"_index":346,"title":{},"body":{"classes/TcsModule.html":{}}}],["destroymodule",{"_index":352,"title":{},"body":{"classes/TcsModule.html":{}}}],["develop",{"_index":784,"title":{},"body":{"index.html":{}}}],["developped",{"_index":744,"title":{},"body":{"index.html":{}}}],["dict",{"_index":338,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["dictionnary",{"_index":299,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["difference",{"_index":41,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["directly",{"_index":756,"title":{},"body":{"index.html":{}}}],["discution",{"_index":758,"title":{},"body":{"index.html":{}}}],["display",{"_index":143,"title":{},"body":{"classes/TcsCore.html":{}}}],["distribute",{"_index":820,"title":{},"body":{"license.html":{}}}],["doc",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["docdependencies",{"_index":671,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":627,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":341,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["don't",{"_index":752,"title":{},"body":{"index.html":{}}}],["dot",{"_index":391,"title":{},"body":{"classes/TcsModule.html":{}}}],["down",{"_index":423,"title":{},"body":{"classes/TcsModule.html":{}}}],["download",{"_index":463,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["drag",{"_index":777,"title":{},"body":{"index.html":{}}}],["drop",{"_index":778,"title":{},"body":{"index.html":{}}}],["due",{"_index":664,"title":{},"body":{"contributing.html":{}}}],["e",{"_index":429,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["each",{"_index":190,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["emitnet('callbacks:clientevent",{"_index":93,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('callbacks:serverevent",{"_index":96,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('tcs:handleevent",{"_index":237,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["en",{"_index":324,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["encountered",{"_index":570,"title":{},"body":{"classes/TcsThread.html":{}}}],["ensure",{"_index":781,"title":{},"body":{"index.html":{}}}],["enum",{"_index":106,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["environment",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":124,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["error(error",{"_index":151,"title":{},"body":{"classes/TcsCore.html":{}}}],["errors",{"_index":881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["especially",{"_index":767,"title":{},"body":{"index.html":{}}}],["even",{"_index":882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":71,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"license.html":{}}}],["event.eventtype",{"_index":234,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.target",{"_index":224,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.targetid",{"_index":238,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["eventmanager",{"_index":117,"title":{},"body":{"classes/TcsCore.html":{}}}],["eventname",{"_index":70,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["events",{"_index":192,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["eventsmodulesinfos",{"_index":722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventtype",{"_index":109,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["example",{"_index":26,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exec",{"_index":542,"title":{},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["execs",{"_index":520,"title":{},"body":{"classes/TcsThread.html":{}}}],["execute",{"_index":534,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["executed",{"_index":194,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["executions",{"_index":532,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exist",{"_index":285,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["exists",{"_index":512,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["expectations",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":766,"title":{},"body":{"index.html":{}}}],["export",{"_index":789,"title":{},"body":{"index.html":{}}}],["express",{"_index":839,"title":{},"body":{"license.html":{}}}],["extends",{"_index":103,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["extra",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":170,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{}}}],["files",{"_index":680,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill",{"_index":313,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filled",{"_index":316,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filter((listener",{"_index":232,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["filter((mod",{"_index":495,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["filter((module",{"_index":491,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["find",{"_index":308,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["findmodulebyid",{"_index":478,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["first",{"_index":768,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":844,"title":{},"body":{"license.html":{}}}],["fivem",{"_index":742,"title":{},"body":{"index.html":{}}}],["fivemtcs",{"_index":801,"title":{},"body":{"license.html":{}}}],["fivemtcs/types",{"_index":788,"title":{},"body":{"index.html":{}}}],["fnc",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":655,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["follow",{"_index":666,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["following",{"_index":681,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["foreach((listener",{"_index":235,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["foreach((module",{"_index":493,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["forget",{"_index":753,"title":{},"body":{"index.html":{}}}],["format",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":513,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["foundmodule",{"_index":496,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["foundmodule.modulelaunched",{"_index":504,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["fr",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":743,"title":{},"body":{"index.html":{}}}],["free",{"_index":805,"title":{},"body":{"license.html":{}}}],["fs",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":66,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":729,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":827,"title":{},"body":{"license.html":{}}}],["g",{"_index":669,"title":{},"body":{"contributing.html":{}}}],["game",{"_index":487,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["gamemodules",{"_index":479,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["get(key",{"_index":305,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace",{"_index":292,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace(key",{"_index":310,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getcurrentresourcename",{"_index":327,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getdependencies",{"_index":353,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["geteventtype",{"_index":184,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["getgametimer",{"_index":46,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["getid",{"_index":354,"title":{},"body":{"classes/TcsModule.html":{}}}],["getplayerbyentityid",{"_index":715,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getplayerbyentityid(id",{"_index":734,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getthreadtimer",{"_index":526,"title":{},"body":{"classes/TcsThread.html":{}}}],["getting",{"_index":619,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":475,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"index.html":{}}}],["github",{"_index":371,"title":{},"body":{"classes/TcsModule.html":{}}}],["go",{"_index":172,"title":{},"body":{"classes/TcsCore.html":{}}}],["going",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":804,"title":{},"body":{"license.html":{}}}],["guide",{"_index":751,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["handler",{"_index":182,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["handles",{"_index":213,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["here",{"_index":622,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["hereby",{"_index":803,"title":{},"body":{"license.html":{}}}],["holders",{"_index":849,"title":{},"body":{"license.html":{}}}],["hostname",{"_index":442,"title":{},"body":{"classes/TcsModule.html":{}}}],["https",{"_index":439,"title":{},"body":{"classes/TcsModule.html":{}}}],["https.request(options",{"_index":449,"title":{},"body":{"classes/TcsModule.html":{}}}],["https://github.com/fivemtcs/core.git",{"_index":763,"title":{},"body":{"index.html":{}}}],["id",{"_index":336,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":683,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":410,"title":{},"body":{"classes/TcsModule.html":{}}}],["ignore",{"_index":99,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["implied",{"_index":840,"title":{},"body":{"license.html":{}}}],["included",{"_index":833,"title":{},"body":{"license.html":{}}}],["including",{"_index":815,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":214,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["informations",{"_index":321,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["init",{"_index":787,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":57,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["initmodule",{"_index":355,"title":{},"body":{"classes/TcsModule.html":{}}}],["input",{"_index":254,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["inputcontroller",{"_index":10,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputkey",{"_index":18,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{}}}],["inputkeyboard",{"_index":11,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputname",{"_index":17,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{}}}],["inputs",{"_index":118,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{}}}],["inside",{"_index":791,"title":{},"body":{"index.html":{}}}],["install",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["installed",{"_index":503,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["instance",{"_index":362,"title":{},"body":{"classes/TcsModule.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"overview.html":{}}}],["iscontroljustpressed(0",{"_index":287,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["iscontrolpressed(0",{"_index":289,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isjustpressed",{"_index":246,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isn't",{"_index":502,"title":{},"body":{"classes/TcsModuleManager.html":{},"miscellaneous/variables.html":{}}}],["ispressed",{"_index":247,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isserversided",{"_index":119,"title":{},"body":{"classes/TcsCore.html":{}}}],["issue",{"_index":772,"title":{},"body":{"index.html":{}}}],["issues",{"_index":764,"title":{},"body":{"index.html":{}}}],["isthreadfull",{"_index":521,"title":{},"body":{"classes/TcsThread.html":{}}}],["isversionsuperior",{"_index":356,"title":{},"body":{"classes/TcsModule.html":{}}}],["isversionsuperior(current",{"_index":381,"title":{},"body":{"classes/TcsModule.html":{}}}],["isweaponinarray",{"_index":719,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isweaponinarray(weaponarray",{"_index":735,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":484,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["json",{"_index":455,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.parse",{"_index":325,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["json.parse(buf.tostring('utf",{"_index":456,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.version",{"_index":458,"title":{},"body":{"classes/TcsModule.html":{}}}],["key",{"_index":307,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["keyboard",{"_index":279,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboard's",{"_index":257,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboardactions",{"_index":248,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboardkey",{"_index":256,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keys",{"_index":302,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["kind",{"_index":838,"title":{},"body":{"license.html":{}}}],["know",{"_index":373,"title":{},"body":{"classes/TcsModule.html":{}}}],["lang",{"_index":120,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["langtoappend",{"_index":300,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["language",{"_index":295,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{}}}],["last",{"_index":265,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"index.html":{}}}],["latest",{"_index":388,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":364,"title":{},"body":{"classes/TcsModule.html":{}}}],["launchmethod",{"_index":347,"title":{},"body":{"classes/TcsModule.html":{}}}],["level",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":853,"title":{},"body":{"license.html":{}}}],["liable",{"_index":850,"title":{},"body":{"license.html":{}}}],["license",{"_index":796,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":816,"title":{},"body":{"license.html":{}}}],["limited",{"_index":841,"title":{},"body":{"license.html":{}}}],["list",{"_index":301,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["listen",{"_index":193,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener",{"_index":188,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener.applyeventhandler(event.data",{"_index":236,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listener.geteventtype",{"_index":233,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listeners",{"_index":208,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["load",{"_index":322,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["loaded",{"_index":483,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadmodulelang",{"_index":293,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadmodulelang(module",{"_index":317,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadresourcefile",{"_index":326,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loads",{"_index":488,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadtcsmoduleinfos",{"_index":709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction.push(fnc",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":108,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["looking",{"_index":794,"title":{},"body":{"index.html":{}}}],["manager",{"_index":59,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["map",{"_index":315,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxexectimeperthread",{"_index":875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":843,"title":{},"body":{"license.html":{}}}],["merge",{"_index":679,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["message",{"_index":145,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["messagecolor",{"_index":393,"title":{},"body":{"classes/TcsModule.html":{}}}],["method",{"_index":363,"title":{},"body":{"classes/TcsModule.html":{}}}],["methods",{"_index":29,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["miscellaneous",{"_index":728,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":797,"title":{},"body":{"license.html":{}}}],["mod",{"_index":501,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mod.getid",{"_index":515,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mode",{"_index":146,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":818,"title":{},"body":{"license.html":{}}}],["module",{"_index":320,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["module.getid",{"_index":337,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["module.initmodule",{"_index":507,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.modulelaunched",{"_index":492,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.shouldlaunch",{"_index":506,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["moduledependencies",{"_index":409,"title":{},"body":{"classes/TcsModule.html":{}}}],["moduleinfos",{"_index":348,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulelaunched",{"_index":349,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulename",{"_index":407,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["modules",{"_index":121,"title":{"modules.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["moduletype",{"_index":406,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["more",{"_index":793,"title":{},"body":{"index.html":{}}}],["ms",{"_index":40,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":462,"title":{},"body":{"classes/TcsModule.html":{}}}],["n${e",{"_index":572,"title":{},"body":{"classes/TcsThread.html":{}}}],["name",{"_index":68,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["needed",{"_index":632,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":159,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":263,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["newmodule",{"_index":489,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["next",{"_index":779,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":847,"title":{},"body":{"license.html":{}}}],["notice",{"_index":831,"title":{},"body":{"license.html":{}}}],["npm",{"_index":656,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":86,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":15,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["object",{"_index":113,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["objkey",{"_index":332,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["obtaining",{"_index":808,"title":{},"body":{"license.html":{}}}],["one",{"_index":387,"title":{},"body":{"classes/TcsModule.html":{}}}],["onnet",{"_index":87,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('callbacks:clientevent",{"_index":83,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('tcs:handleevent",{"_index":223,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["ontcsloaded",{"_index":711,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions",{"_index":712,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions.push(fnc",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":741,"title":{},"body":{"index.html":{}}}],["optional",{"_index":147,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":441,"title":{},"body":{"classes/TcsModule.html":{}}}],["otherwise",{"_index":856,"title":{},"body":{"license.html":{}}}],["out",{"_index":748,"title":{},"body":{"index.html":{},"license.html":{}}}],["outcoming",{"_index":215,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["overview",{"_index":860,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":727,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":747,"title":{},"body":{"index.html":{}}}],["param",{"_index":94,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["parameters",{"_index":67,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["parseint(compare.split('.')[currentstep",{"_index":470,"title":{},"body":{"classes/TcsModule.html":{}}}],["parseint(current.split('.')[currentstep",{"_index":468,"title":{},"body":{"classes/TcsModule.html":{}}}],["particular",{"_index":845,"title":{},"body":{"license.html":{}}}],["path",{"_index":446,"title":{},"body":{"classes/TcsModule.html":{}}}],["permission",{"_index":802,"title":{},"body":{"license.html":{}}}],["permit",{"_index":825,"title":{},"body":{"license.html":{}}}],["person",{"_index":807,"title":{},"body":{"license.html":{}}}],["persons",{"_index":826,"title":{},"body":{"license.html":{}}}],["place",{"_index":790,"title":{},"body":{"index.html":{}}}],["please",{"_index":624,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["port",{"_index":444,"title":{},"body":{"classes/TcsModule.html":{}}}],["portions",{"_index":835,"title":{},"body":{"license.html":{}}}],["possible",{"_index":765,"title":{},"body":{"index.html":{}}}],["precompilerender",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":396,"title":{},"body":{"classes/TcsModule.html":{}}}],["presentation",{"_index":740,"title":{},"body":{"index.html":{}}}],["pressed",{"_index":264,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["prettier",{"_index":643,"title":{},"body":{"contributing.html":{}}}],["print",{"_index":148,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["printdebug",{"_index":357,"title":{},"body":{"classes/TcsModule.html":{}}}],["printdebug(message",{"_index":392,"title":{},"body":{"classes/TcsModule.html":{}}}],["printed",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":27,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["project",{"_index":672,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":578,"title":{},"body":{"classes/TcsThread.html":{}}}],["promise((resolve",{"_index":580,"title":{},"body":{"classes/TcsThread.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["provided",{"_index":836,"title":{},"body":{"license.html":{}}}],["publish",{"_index":819,"title":{},"body":{"license.html":{}}}],["pull",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":846,"title":{},"body":{"license.html":{}}}],["push",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":755,"title":{},"body":{"index.html":{}}}],["raw.githubusercontent.com",{"_index":443,"title":{},"body":{"classes/TcsModule.html":{}}}],["read",{"_index":625,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reading",{"_index":750,"title":{},"body":{"index.html":{}}}],["readme",{"_index":638,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":116,"title":{},"body":{"classes/TcsCore.html":{}}}],["ready",{"_index":365,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["record",{"_index":271,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registercommand",{"_index":281,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerkeymapping",{"_index":278,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerservercallback",{"_index":52,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["release",{"_index":776,"title":{},"body":{"index.html":{}}}],["releases",{"_index":746,"title":{},"body":{"index.html":{}}}],["remainingdependenciestostart",{"_index":494,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remainingdependenciestostart.length",{"_index":505,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remove",{"_index":555,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads",{"_index":527,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads(module",{"_index":553,"title":{},"body":{"classes/TcsThread.html":{}}}],["removethread",{"_index":528,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethread(id",{"_index":557,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule",{"_index":594,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule(module",{"_index":601,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["render",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":311,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replace[objkey",{"_index":334,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replaceto",{"_index":333,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["report",{"_index":771,"title":{},"body":{"index.html":{}}}],["repository",{"_index":760,"title":{},"body":{"index.html":{}}}],["req",{"_index":448,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.end",{"_index":466,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.on('error",{"_index":464,"title":{},"body":{"classes/TcsModule.html":{}}}],["request",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["requestid",{"_index":53,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["requests",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["require('https",{"_index":440,"title":{},"body":{"classes/TcsModule.html":{}}}],["res",{"_index":450,"title":{},"body":{"classes/TcsModule.html":{}}}],["res.on('data",{"_index":451,"title":{},"body":{"classes/TcsModule.html":{}}}],["resolved",{"_index":579,"title":{},"body":{"classes/TcsThread.html":{}}}],["resource",{"_index":792,"title":{},"body":{"index.html":{}}}],["resources",{"_index":745,"title":{},"body":{"index.html":{}}}],["ressource",{"_index":408,"title":{},"body":{"classes/TcsModule.html":{}}}],["restriction",{"_index":814,"title":{},"body":{"license.html":{}}}],["result",{"_index":19,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.replace(`{${objkey",{"_index":335,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":48,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["rights",{"_index":817,"title":{},"body":{"license.html":{}}}],["run",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":511,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["scheduleresourcetick",{"_index":167,"title":{},"body":{"classes/TcsCore.html":{}}}],["scripts",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":551,"title":{},"body":{"classes/TcsThread.html":{}}}],["section",{"_index":759,"title":{},"body":{"index.html":{}}}],["sell",{"_index":823,"title":{},"body":{"license.html":{}}}],["send",{"_index":200,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["sendevent",{"_index":209,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["sending",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":64,"title":{},"body":{"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"index.html":{}}}],["server.cfg",{"_index":780,"title":{},"body":{"index.html":{}}}],["servercallback",{"_index":54,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["set",{"_index":404,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["setdestroymodule",{"_index":358,"title":{},"body":{"classes/TcsModule.html":{}}}],["setdestroymodule(destroymethod",{"_index":402,"title":{},"body":{"classes/TcsModule.html":{}}}],["settick",{"_index":230,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{}}}],["settick(async",{"_index":564,"title":{},"body":{"classes/TcsThread.html":{}}}],["settimeout(resolve",{"_index":582,"title":{},"body":{"classes/TcsThread.html":{}}}],["setup",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":832,"title":{},"body":{"license.html":{}}}],["shoulddeletethread",{"_index":614,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["shouldlaunch",{"_index":350,"title":{},"body":{"classes/TcsModule.html":{}}}],["showerrorsanycase",{"_index":880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showwarningsanycase",{"_index":884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutting",{"_index":431,"title":{},"body":{"classes/TcsModule.html":{}}}],["side",{"_index":65,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["simple",{"_index":775,"title":{},"body":{"index.html":{}}}],["software",{"_index":810,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["sources",{"_index":761,"title":{},"body":{"index.html":{}}}],["specified",{"_index":144,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["splitted",{"_index":390,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/.../cli_death.ts",{"_index":730,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_vehicle.ts",{"_index":732,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_weapon.ts",{"_index":731,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mixed_config.ts",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_main.ts",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_moduleinfos.ts",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/assets/lang/${id}/${language}.json",{"_index":339,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/lang/${tcs_config.lang}.json",{"_index":328,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/mixed_config.ts",{"_index":685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts",{"_index":25,"title":{},"body":{"classes/TcsBenchmark.html":{},"coverage.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:21",{"_index":37,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:8",{"_index":33,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts",{"_index":50,"title":{},"body":{"classes/TcsCallbackManager.html":{},"coverage.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:10",{"_index":56,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:49",{"_index":77,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:60",{"_index":63,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:8",{"_index":60,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:9",{"_index":76,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts",{"_index":181,"title":{},"body":{"classes/TcsEventListener.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:25",{"_index":201,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:33",{"_index":198,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:8",{"_index":196,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:9",{"_index":186,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts",{"_index":206,"title":{},"body":{"classes/TcsEventManager.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:53",{"_index":219,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:61",{"_index":217,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:8",{"_index":220,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:9",{"_index":211,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/inputs/mixed_inputs.ts",{"_index":6,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts",{"_index":243,"title":{},"body":{"classes/TcsInputManager.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:26",{"_index":252,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:74",{"_index":260,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:8",{"_index":251,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:9",{"_index":249,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:90",{"_index":269,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts",{"_index":290,"title":{},"body":{"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:28",{"_index":306,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:44",{"_index":312,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:67",{"_index":319,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:8",{"_index":294,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:98",{"_index":297,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/modules/mixed_module.ts",{"_index":345,"title":{},"body":{"classes/TcsModule.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_module.ts:10",{"_index":367,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:11",{"_index":366,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:115",{"_index":370,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:13",{"_index":369,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:14",{"_index":361,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:160",{"_index":384,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:181",{"_index":395,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:48",{"_index":379,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:56",{"_index":377,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:64",{"_index":403,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:71",{"_index":376,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:9",{"_index":368,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:95",{"_index":380,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts",{"_index":477,"title":{},"body":{"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:50",{"_index":486,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:66",{"_index":482,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:8",{"_index":481,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/threads/mixed_threads.ts",{"_index":517,"title":{},"body":{"classes/TcsThread.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:10",{"_index":540,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:100",{"_index":558,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:11",{"_index":539,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:115",{"_index":554,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:13",{"_index":530,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:132",{"_index":548,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:49",{"_index":552,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:57",{"_index":533,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:74",{"_index":535,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:8",{"_index":538,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:83",{"_index":543,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:9",{"_index":537,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts",{"_index":591,"title":{},"body":{"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:25",{"_index":597,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:46",{"_index":598,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:64",{"_index":602,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:8",{"_index":595,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/mixed_tcs.ts",{"_index":115,"title":{},"body":{"classes/TcsCore.html":{},"coverage.html":{}}}],["src/core/mixed_tcs.ts:10",{"_index":136,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:11",{"_index":140,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:12",{"_index":133,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:13",{"_index":129,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:14",{"_index":126,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:46",{"_index":142,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:59",{"_index":152,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:69",{"_index":154,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:8",{"_index":131,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:9",{"_index":138,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/mixed_main.ts",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/core/events/client/cli_death.ts",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_vehicle.ts",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_weapon.ts",{"_index":718,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/mixed_moduleinfos.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/events/mixed_events.ts",{"_index":102,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["src/types/modules/mixed_moduleinfos.ts",{"_index":474,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"coverage.html":{}}}],["src/types/threads/mixed_threadinterface.ts",{"_index":590,"title":{},"body":{"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["start",{"_index":28,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["started",{"_index":437,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["starting",{"_index":438,"title":{},"body":{"classes/TcsModule.html":{}}}],["starts",{"_index":34,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{}}}],["statements",{"_index":684,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":389,"title":{},"body":{"classes/TcsModule.html":{}}}],["steps",{"_index":667,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["stop",{"_index":30,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["stopped",{"_index":405,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["style",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":828,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":821,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":834,"title":{},"body":{"license.html":{}}}],["superior",{"_index":385,"title":{},"body":{"classes/TcsModule.html":{}}}],["table",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":111,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{}}}],["targetid",{"_index":105,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcs",{"_index":127,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tcs.callbacks.servercallback.indexof(eventname",{"_index":90,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["tcs.error",{"_index":498,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["tcs.error(`${key",{"_index":330,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["tcs.error(`actionname",{"_index":283,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcs.isserversided",{"_index":226,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModule.html":{}}}],["tcs.lang.loadmodulelang(this",{"_index":435,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.threads.removethreadbymodule(this",{"_index":425,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.warning",{"_index":340,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config",{"_index":687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcs_config.debugmode",{"_index":173,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config.lang",{"_index":331,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["tcs_config.maxexectimeperthread",{"_index":574,"title":{},"body":{"classes/TcsThread.html":{}}}],["tcs_config.showerrorsanycase",{"_index":176,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.showwarningsanycase",{"_index":178,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.versionningcheck",{"_index":414,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcsbenchmark",{"_index":23,"title":{"classes/TcsBenchmark.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["tcscallbackmanager",{"_index":49,"title":{"classes/TcsCallbackManager.html":{}},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"coverage.html":{}}}],["tcsclientevent",{"_index":101,"title":{"interfaces/TcsClientEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["tcscore",{"_index":114,"title":{"classes/TcsCore.html":{}},"body":{"classes/TcsCore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsdeveloper",{"_index":782,"title":{},"body":{"index.html":{}}}],["tcsevent",{"_index":104,"title":{"interfaces/TcsEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventlistener",{"_index":180,"title":{"classes/TcsEventListener.html":{}},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventmanager",{"_index":130,"title":{"classes/TcsEventManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventslist",{"_index":110,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["tcseventtarget",{"_index":107,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcseventtarget.client",{"_index":228,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.local",{"_index":227,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.server",{"_index":225,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcsinput",{"_index":16,"title":{"interfaces/TcsInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["tcsinputmanager",{"_index":132,"title":{"classes/TcsInputManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"coverage.html":{}}}],["tcslanguagemanager",{"_index":135,"title":{"classes/TcsLanguageManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["tcsmodule",{"_index":318,"title":{"classes/TcsModule.html":{}},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsmoduleinfos",{"_index":360,"title":{"interfaces/TcsModuleInfos.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsmodulemanager",{"_index":137,"title":{"classes/TcsModuleManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["tcsmoduletypes",{"_index":476,"title":{},"body":{"interfaces/TcsModuleInfos.html":{}}}],["tcsthread",{"_index":516,"title":{"classes/TcsThread.html":{}},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsthread(timer",{"_index":609,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["tcsthreadexec",{"_index":575,"title":{"interfaces/TcsThreadExec.html":{}},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["tcsthreadsmanager",{"_index":139,"title":{"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tells",{"_index":39,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.actioninputs",{"_index":272,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.find",{"_index":275,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.push",{"_index":277,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.addconfig(dict",{"_index":344,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.callbacks",{"_index":164,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.checkversion",{"_index":416,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.clientcallback",{"_index":81,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid",{"_index":85,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid](args",{"_index":84,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[this.requestid",{"_index":95,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.debugexec(thread",{"_index":568,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.delay(this.timer",{"_index":566,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.destroymethod",{"_index":418,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.eventmanager",{"_index":158,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.eventtype",{"_index":203,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.execs",{"_index":559,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter",{"_index":588,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter((thread",{"_index":585,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.find((thread",{"_index":589,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.foreach((thread",{"_index":567,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.length",{"_index":583,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.push(thread",{"_index":584,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.findmodulebyid(mod",{"_index":497,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.findmodulebyid(newmodule.getid",{"_index":508,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules",{"_index":490,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.find((mod",{"_index":514,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.push(newmodule",{"_index":509,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.getid",{"_index":461,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.handler",{"_index":204,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.handler(data",{"_index":205,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.inputs",{"_index":163,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isserversided",{"_index":166,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isthreadfull",{"_index":561,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.isversionsuperior(current",{"_index":472,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.isversionsuperior(json.version",{"_index":459,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.keyboardactions",{"_index":273,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.keyboardactions[actionname",{"_index":280,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.lang",{"_index":161,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{}}}],["this.lang[key",{"_index":329,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.launchmethod",{"_index":417,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.launchmethod(this",{"_index":434,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.listeners",{"_index":222,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.listeners.push(handler",{"_index":242,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.loadmodulelang(module",{"_index":343,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.moduleinfos",{"_index":413,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.dependencies",{"_index":421,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git",{"_index":415,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git}/main/.tcs.json",{"_index":447,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.moduletype}/${this.moduleinfos.modulename",{"_index":420,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.version",{"_index":460,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modulelaunched",{"_index":419,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modules",{"_index":160,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.printdebug",{"_index":426,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('module",{"_index":436,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('shutting",{"_index":422,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('starting",{"_index":433,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.removethreadbymodule(module",{"_index":618,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.requestid",{"_index":97,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.sendevent(event",{"_index":229,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.servercallback",{"_index":82,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[eventname",{"_index":100,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index",{"_index":91,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index](_source",{"_index":92,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.shouldlaunch",{"_index":412,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.start",{"_index":45,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.threadid",{"_index":562,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.threads",{"_index":162,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.threadslist",{"_index":604,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.find((thread",{"_index":606,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.foreach((thread",{"_index":612,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.push(currentthread",{"_index":610,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.splice(index",{"_index":616,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.tick",{"_index":563,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.timer",{"_index":560,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.waitingevents",{"_index":221,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.foreach((event",{"_index":231,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.push(event",{"_index":241,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.splice(index",{"_index":239,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["thread",{"_index":531,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["thread.containsthreadbyid(id",{"_index":613,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.exec",{"_index":569,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.getthreadtimer",{"_index":607,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.id",{"_index":586,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.id.split",{"_index":576,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.isthreadfull",{"_index":608,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removemodulethreads(module",{"_index":617,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removethread(id",{"_index":615,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["threadid",{"_index":522,"title":{},"body":{"classes/TcsThread.html":{}}}],["threads",{"_index":122,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["threadslist",{"_index":592,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thrown",{"_index":430,"title":{},"body":{"classes/TcsModule.html":{}}}],["tick",{"_index":523,"title":{},"body":{"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":44,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":35,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["times",{"_index":195,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["took",{"_index":577,"title":{},"body":{"classes/TcsThread.html":{}}}],["tools",{"_index":783,"title":{},"body":{"index.html":{}}}],["tort",{"_index":855,"title":{},"body":{"license.html":{}}}],["translation",{"_index":303,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["translations",{"_index":298,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["transmitted",{"_index":80,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["triggered",{"_index":191,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggers",{"_index":199,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggerservercallback",{"_index":55,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["true",{"_index":282,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":165,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["trying",{"_index":342,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["ts",{"_index":98,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"contributing.html":{}}}],["tslint",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":676,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["undefined",{"_index":168,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{}}}],["up",{"_index":374,"title":{},"body":{"classes/TcsModule.html":{}}}],["update",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["use",{"_index":645,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":216,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{}}}],["uses",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["using",{"_index":642,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["value",{"_index":62,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":314,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["variable",{"_index":686,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":863,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehiclethreadchecker",{"_index":717,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["vehiclethreadchecker(module",{"_index":739,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verify",{"_index":770,"title":{},"body":{"index.html":{}}}],["version",{"_index":372,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versionningcheck",{"_index":886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":769,"title":{},"body":{"index.html":{}}}],["very",{"_index":774,"title":{},"body":{"index.html":{}}}],["void",{"_index":150,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["wait",{"_index":536,"title":{},"body":{"classes/TcsThread.html":{}}}],["waiting",{"_index":202,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["waitingevents",{"_index":210,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["warning",{"_index":125,"title":{},"body":{"classes/TcsCore.html":{}}}],["warning(warning",{"_index":153,"title":{},"body":{"classes/TcsCore.html":{}}}],["warnings",{"_index":885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":842,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":837,"title":{},"body":{"license.html":{}}}],["weaponarray",{"_index":737,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponhash",{"_index":736,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponthreadchecker",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["weaponthreadchecker(module",{"_index":738,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whether",{"_index":261,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["without",{"_index":813,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":401,"title":{},"body":{"classes/TcsModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionInput.html":{"url":"interfaces/ActionInput.html","title":"interface - ActionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionName\n                                \n                                \n                                        inputController\n                                \n                                \n                                        inputKeyboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionName\n                                    \n                                \n                                \n                                    \n                                        actionName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputController\n                                    \n                                \n                                \n                                    \n                                        inputController:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputKeyboard\n                                    \n                                \n                                \n                                    \n                                        inputKeyboard:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsBenchmark.html":{"url":"classes/TcsBenchmark.html","title":"class - TcsBenchmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsBenchmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/benchmark/mixed_benchmark.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n                \n                    \n                            Starts the timer for the benchmark\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:21\n                \n            \n\n\n            \n                \n                    Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time difference in ms\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsBenchmark {\n\tprivate start: number;\n\n\t/**\n\t * Starts the timer for the benchmark\n\t */\n\tconstructor() {\n\t\tthis.start = GetGameTimer();\n\t}\n\n\t/**\n\t * Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\t * @returns The time difference in ms\n\t */\n\tstop() {\n\t\tconst difference = GetGameTimer() - this.start;\n\t\treturn difference;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCallbackManager.html":{"url":"classes/TcsCallbackManager.html","title":"class - TcsCallbackManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCallbackManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/callbacks/mixed_callbackManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ClientCallBack\n                            \n                            \n                                RegisterServerCallback\n                            \n                            \n                                    Private\n                                requestId\n                            \n                            \n                                    Private\n                                ServerCallBack\n                            \n                            \n                                TriggerServerCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize the callbacks manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ClientCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RegisterServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:60\n                            \n                        \n\n                \n                    \n                        Server side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the client side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ServerCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TriggerServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:49\n                            \n                        \n\n                \n                    \n                        Client side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the server side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                arguments to be transmitted on the server side\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsCallbackManager {\n\tprivate ClientCallBack: any[];\n\tprivate ServerCallBack: any[];\n\tprivate requestId = 0;\n\n\t/**\n\t * Initialize the callbacks manager\n\t */\n\tconstructor() {\n\t\tthis.ClientCallBack = [];\n\t\tthis.ServerCallBack = [];\n\n\t\t/**\n\t\t * Client side event\n\t\t */\n\t\tonNet('callbacks:clientEvent', (requestId: number, args: any[]) => {\n\t\t\tthis.ClientCallBack[requestId](args);\n\t\t\tthis.ClientCallBack[requestId] = null;\n\t\t});\n\n\t\t/**\n\t\t * Server side event\n\t\t */\n\t\tonNet(\n\t\t\t'callbacks:serverEvent',\n\t\t\t(eventName: string, requestId: number, args: any) => {\n\t\t\t\tconst _source = source;\n\t\t\t\tconst index = TCS.callbacks.ServerCallBack.indexOf(eventName);\n\t\t\t\tif (this.ServerCallBack[index] != null) {\n\t\t\t\t\tthis.ServerCallBack[index](_source, args);\n\t\t\t\t}\n\t\t\t\temitNet('callbacks:clientEvent', _source, requestId, args);\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Client side function\n\t * @param eventName The name of the event to call on the server side\n\t * @param cb return function\n\t * @param args arguments to be transmitted on the server side\n\t */\n\tTriggerServerCallback = (eventName: string, cb: Function, args: any) => {\n\t\tthis.ClientCallBack[this.requestId] = cb;\n\t\temitNet('callbacks:serverEvent', eventName, this.requestId, args);\n\t\tthis.requestId++;\n\t};\n\n\t/**\n\t * Server side function\n\t * @param eventName The name of the event to call on the client side\n\t * @param cb return function\n\t */\n\tRegisterServerCallback = (eventName: string, cb: Function) => {\n\t\t//@ts-ignore\n\t\tthis.ServerCallBack[eventName] = cb;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsClientEvent.html":{"url":"interfaces/TcsClientEvent.html","title":"interface - TcsClientEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsClientEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TcsEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCore.html":{"url":"classes/TcsCore.html","title":"class - TcsCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mixed_tcs.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                callbacks\n                            \n                            \n                                    Readonly\n                                eventManager\n                            \n                            \n                                    Readonly\n                                inputs\n                            \n                            \n                                    Readonly\n                                isServerSided\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Readonly\n                                modules\n                            \n                            \n                                    Readonly\n                                threads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/mixed_tcs.ts:14\n                            \n                        \n\n                \n                    \n                            Initialize the TCS core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            callbacks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCallbackManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            eventManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsInputManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isServerSided\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsLanguageManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            threads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThreadsManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:46\n                \n            \n\n\n            \n                \n                    Display the specified message if the server is in debug mode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(error: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:59\n                \n            \n\n\n            \n                \n                    Display the specified error in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \nwarning(warning: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:69\n                \n            \n\n\n            \n                \n                    Display the specified warning in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    warning\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Warning to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsCore {\n\treadonly eventManager: TcsEventManager;\n\treadonly modules: TcsModuleManager;\n\treadonly lang: TcsLanguageManager;\n\treadonly threads: TcsThreadsManager;\n\treadonly inputs: TcsInputManager;\n\treadonly callbacks: TcsCallbackManager;\n\treadonly isServerSided: boolean;\n\n\t/**\n\t * Initialize the TCS core\n\t */\n\tconstructor() {\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.YELLOW}Initializing...`,\n\t\t);\n\t\tthis.eventManager = new TcsEventManager();\n\t\tthis.modules = new TcsModuleManager();\n\t\tthis.lang = new TcsLanguageManager();\n\t\tthis.threads = new TcsThreadsManager();\n\t\tthis.inputs = new TcsInputManager();\n\t\tthis.callbacks = new TcsCallbackManager();\n\n\t\ttry {\n\t\t\t//@ts-ignore\n\t\t\tthis.isServerSided = ScheduleResourceTick != undefined;\n\t\t} catch (error) {\n\t\t\tthis.isServerSided = false;\n\t\t}\n\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.GREEN}Ready to go !`,\n\t\t);\n\t}\n\n\t/**\n\t * Display the specified message if the server is in debug mode\n\t * @param message Message to print in the console\n\t */\n\tdebug(message: String) {\n\t\tif (TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE}[debug] ${message}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified error in the console\n\t * @param error Error to print in the console\n\t */\n\terror(error: String) {\n\t\tif (TCS_CONFIG.showErrorsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(`${ConsoleColors.RED}[ERROR] ${error}`, ConsoleColors.RESET);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified warning in the console\n\t * @param warning Warning to print in the console\n\t */\n\twarning(warning: String) {\n\t\tif (TCS_CONFIG.showWarningsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.YELLOW}[WARNING] ${warning}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsEvent.html":{"url":"interfaces/TcsEvent.html","title":"interface - TcsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:         TcsEventsList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventsList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         TcsEventTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventListener.html":{"url":"classes/TcsEventListener.html","title":"class - TcsEventListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventListenerClass.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventType\n                            \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEventHandler\n                            \n                            \n                                getEventType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventType: TcsEventsList, handler: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n                \n                    \n                            Create a listener that will be called each time the specified event is triggered\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        TcsEventsList\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Type of events to listen to\n\n                                                        \n                                                \n                                                \n                                                        handler\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current event handler, that will be executed each times the event is triggered\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventsList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyEventHandler\n                        \n                        \n                    \n                \n            \n            \n                \napplyEventHandler(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:33\n                \n            \n\n\n            \n                \n                    Triggers the event listener function with the specified data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Data to send to the event listener function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventType\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventType()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:25\n                \n            \n\n\n            \n                \n                    Get the current listener event it is waiting for\n\n\n                    \n                    \n                    \n                        Returns :         TcsEventsList\n\n                    \n                    \n                        Current event type name\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventListener {\n\tprivate eventType: TcsEventsList;\n\tprivate handler: Function;\n\n\t/**\n\t * Create a listener that will be called each time the specified event is triggered\n\t * @param eventType Type of events to listen to\n\t * @param handler Current event handler, that will be executed each times the event is triggered\n\t */\n\tconstructor(eventType: TcsEventsList, handler: Function) {\n\t\tthis.eventType = eventType;\n\t\tthis.handler = handler;\n\t}\n\n\t/**\n\t *\tGet the current listener event it is waiting for\n\t * @returns Current event type name\n\t */\n\tgetEventType() {\n\t\treturn this.eventType;\n\t}\n\n\t/**\n\t * Triggers the event listener function with the specified data\n\t * @param data Data to send to the event listener function\n\t */\n\tapplyEventHandler(data: Object = {}) {\n\t\tthis.handler(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventManager.html":{"url":"classes/TcsEventManager.html","title":"class - TcsEventManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEventHandler\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                sendEvent\n                            \n                            \n                                    Private\n                                waitingEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an event manager. It handles all the incoming events and outcoming events.\nShould only be used by the core.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEventHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:61\n                            \n                        \n\n                \n                    \n                        Add an event handler that will be triggered each time the specified event will be triggered\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        handler\n                                                        \n                                                                Handler to add\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventListener[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:53\n                            \n                        \n\n                \n                    \n                        Send the specified event and triggers it for the target\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        event\n                                                        \n                                                                Event to send\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            waitingEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventManager {\n\tprivate waitingEvents: TcsEvent[];\n\tprivate listeners: TcsEventListener[];\n\n\t/**\n\t * Creates an event manager. It handles all the incoming events and outcoming events.\n\t * Should only be used by the core.\n\t */\n\tconstructor() {\n\t\tthis.waitingEvents = [];\n\t\tthis.listeners = [];\n\n\t\tonNet('tcs:handleEvent', (event: TcsEvent) => {\n\t\t\tif (event.target === TcsEventTarget.SERVER) {\n\t\t\t\tif (TCS.isServerSided) event.target = TcsEventTarget.LOCAL;\n\t\t\t\telse event.target = TcsEventTarget.CLIENT;\n\t\t\t}\n\t\t\tif (event.target === TcsEventTarget.CLIENT && !TCS.isServerSided) {\n\t\t\t\tevent.target = TcsEventTarget.LOCAL;\n\t\t\t}\n\t\t\tthis.sendEvent(event);\n\t\t});\n\n\t\tsetTick(() => {\n\t\t\tthis.waitingEvents.forEach((event, index) => {\n\t\t\t\tif (event.target == TcsEventTarget.LOCAL) {\n\t\t\t\t\tthis.listeners\n\t\t\t\t\t\t.filter((listener) => listener.getEventType() == event.eventType)\n\t\t\t\t\t\t.forEach((listener) => listener.applyEventHandler(event.data));\n\t\t\t\t} else {\n\t\t\t\t\tif (!TCS.isServerSided) emitNet('tcs:handleEvent', event);\n\t\t\t\t\telse {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\temitNet('tcs:handleEvent', event.targetId, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.waitingEvents.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send the specified event and triggers it for the target\n\t * @param event Event to send\n\t */\n\tsendEvent = (event: TcsEvent) => {\n\t\tthis.waitingEvents.push(event);\n\t};\n\n\t/**\n\t * Add an event handler that will be triggered each time the specified event will be triggered\n\t * @param handler Handler to add\n\t */\n\taddEventHandler = (handler: TcsEventListener) => {\n\t\tthis.listeners.push(handler);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsInput.html":{"url":"interfaces/TcsInput.html","title":"interface - TcsInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        inputKey\n                                \n                                \n                                        inputName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputKey\n                                    \n                                \n                                \n                                    \n                                        inputKey:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputName\n                                    \n                                \n                                \n                                    \n                                        inputName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsInputManager.html":{"url":"classes/TcsInputManager.html","title":"class - TcsInputManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsInputManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionInputs\n                            \n                            \n                                bindAction\n                            \n                            \n                                isJustPressed\n                            \n                            \n                                isPressed\n                            \n                            \n                                    Private\n                                keyboardActions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/inputs/mixed_inputsManager.ts:9\n                            \n                        \n\n                \n                    \n                            Initialize the inputs manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actionInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bindAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:26\n                            \n                        \n\n                \n                    \n                        Create an action from an input\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                name of the action\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                        \n                                                                brief description of the action\n\n                                                        \n                                                \n                                                \n                                                        keyboardKey\n                                                        \n                                                                keyboard's input\n\n                                                        \n                                                \n                                                \n                                                        controllerKey\n                                                        \n                                                                controller's input\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isJustPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:74\n                            \n                        \n\n                \n                    \n                        Returns whether a control was newly pressed since the last check, used only for Controllers\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:90\n                            \n                        \n\n                \n                    \n                        Returns whether a control is currently pressed, used only for Controllers\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyboardActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsInputManager {\n\tprivate actionInputs: Array;\n\tprivate keyboardActions: Record;\n\n\t/**\n\t * Initialize the inputs manager\n\t */\n\tconstructor() {\n\t\tthis.actionInputs = [];\n\t\tthis.keyboardActions = {};\n\t}\n\n\t/**\n\t * Create an action from an input\n\t * @param actionName name of the action\n\t * @param description brief description of the action\n\t * @param keyboardKey keyboard's input\n\t * @param controllerKey controller's input\n\t */\n\tbindAction = (\n\t\tactionName: string,\n\t\tdescription: string,\n\t\tkeyboardKey: string,\n\t\tcontrollerKey: number,\n\t) => {\n\t\tconst alreadyCreated = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\t\tif (!alreadyCreated) {\n\t\t\tthis.actionInputs.push({\n\t\t\t\tactionName: actionName,\n\t\t\t\tinputKeyboard: keyboardKey,\n\t\t\t\tinputController: controllerKey,\n\t\t\t});\n\t\t\tRegisterKeyMapping(\n\t\t\t\t`+${actionName}`,\n\t\t\t\tdescription,\n\t\t\t\t'keyboard',\n\t\t\t\tkeyboardKey,\n\t\t\t);\n\n\t\t\tthis.keyboardActions[actionName] = false;\n\t\t\tRegisterCommand(\n\t\t\t\t`+${actionName}`,\n\t\t\t\t() => {\n\t\t\t\t\tthis.keyboardActions[actionName] = true;\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t);\n\n\t\t\tRegisterCommand(\n\t\t\t\t`-${actionName}`,\n\t\t\t\t() => {\n\t\t\t\t\tthis.keyboardActions[actionName] = false;\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t);\n\t\t} else {\n\t\t\tTCS.error(`actionName: ${actionName} already exist !`);\n\t\t}\n\t};\n\n\t/**\n\t * Returns whether a control was newly pressed since the last check, used only for Controllers\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisJustPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\t\tif (!actionData) return false;\n\t\treturn (\n\t\t\tthis.keyboardActions[actionName] ||\n\t\t\tIsControlJustPressed(0, actionData.inputController)\n\t\t);\n\t};\n\n\t/**\n\t * Returns whether a control is currently pressed, used only for Controllers\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\n\t\tif (!actionData) return false;\n\n\t\treturn (\n\t\t\tthis.keyboardActions[actionName] ||\n\t\t\tIsControlPressed(0, actionData.inputController)\n\t\t);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsLanguageManager.html":{"url":"classes/TcsLanguageManager.html","title":"class - TcsLanguageManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsLanguageManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/language/mixed_languageManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                get\n                            \n                            \n                                getAndReplace\n                            \n                            \n                                loadModuleLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the language manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig(langToAppend: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:98\n                \n            \n\n\n            \n                \n                    Add translations to the current dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    langToAppend\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of keys and their translation in the current configured language\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:28\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Translation in the specified language in the configuration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAndReplace\n                        \n                        \n                    \n                \n            \n            \n                \ngetAndReplace(key: string, replace: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:44\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key and fill it with values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                                \n                                    replace\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Map of key and their values to find and replace in the translation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Translation in the specified language in the configuration, filled with specified values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadModuleLang\n                        \n                        \n                    \n                \n            \n            \n                \nloadModuleLang(module: TcsModule, language: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:67\n                \n            \n\n\n            \n                \n                    Get the translations of the specified module and add it to the dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Module informations to load the lang config from\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en-EN'\n                                    \n\n                                    \n                                        Name of the current language to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsLanguageManager {\n\tprivate lang: object;\n\n\t/**\n\t * Initialize the language manager\n\t */\n\tconstructor() {\n\t\tthis.lang =\n\t\t\tJSON.parse(\n\t\t\t\tLoadResourceFile(\n\t\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t\t`src/assets/lang/${TCS_CONFIG.lang}.json`,\n\t\t\t\t),\n\t\t\t) || {};\n\t}\n\n\t/**\n\t * Get the translation of the specified key\n\t * @param key Translation to find\n\t * @returns Translation in the specified language in the configuration\n\t */\n\tget(key: string): String {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\treturn this.lang[key] || '';\n\t}\n\n\t/**\n\t * Get the translation of the specified key and fill it with values\n\t * @param key Translation to find\n\t * @param replace Map of key and their values to find and replace in the translation\n\t * @returns Translation in the specified language in the configuration, filled with specified values\n\t */\n\tgetAndReplace(key: string, replace: Object): string {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\tlet result = this.lang[key] || '';\n\n\t\tfor (let objKey in replace) {\n\t\t\t//@ts-ignore\n\t\t\tconst replaceTo = replace[objKey];\n\t\t\tresult = result.replace(`{${objKey}}`, replaceTo);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get the translations of the specified module and add it to the dictionnary\n\t * @param module Module informations to load the lang config from\n\t * @param language Name of the current language to load\n\t */\n\tloadModuleLang(module: TcsModule, language: String = 'en-EN') {\n\t\tconst id = module.getId();\n\n\t\tconst dict = JSON.parse(\n\t\t\tLoadResourceFile(\n\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t`src/assets/lang/${id}/${language}.json`,\n\t\t\t),\n\t\t);\n\n\t\tif (!dict) {\n\t\t\tif (language !== 'en-EN') {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}. Trying to load language 'en-EN'...`,\n\t\t\t\t);\n\t\t\t\tthis.loadModuleLang(module);\n\t\t\t} else {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addConfig(dict);\n\t}\n\n\t/**\n\t * Add translations to the current dictionnary\n\t * @param langToAppend List of keys and their translation in the current configured language\n\t */\n\taddConfig(langToAppend: Object) {\n\t\tthis.lang = { ...this.lang, ...langToAppend };\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModule.html":{"url":"classes/TcsModule.html","title":"class - TcsModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_module.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyMethod\n                            \n                            \n                                    Private\n                                launchMethod\n                            \n                            \n                                    Private\n                                moduleInfos\n                            \n                            \n                                moduleLaunched\n                            \n                            \n                                shouldLaunch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkVersion\n                            \n                            \n                                destroyModule\n                            \n                            \n                                getDependencies\n                            \n                            \n                                getId\n                            \n                            \n                                initModule\n                            \n                            \n                                    Private\n                                isVersionSuperior\n                            \n                            \n                                printDebug\n                            \n                            \n                                setDestroyModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n                \n                    \n                            Create a new Tcs module instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleInfos\n                                                  \n                                                        \n                                                                        TcsModuleInfos | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        launchMethod\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Method to launch when the module is ready\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            launchMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleLaunched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldLaunch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:115\n                \n            \n\n\n            \n                \n                    Check with github the last version of the module to know if the current module is up to date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyModule\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:71\n                \n            \n\n\n            \n                \n                    Stop the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ngetDependencies()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:56\n                \n            \n\n\n            \n                \n                    Get the list of the current module dependencies\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        list of current module dependencies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:48\n                \n            \n\n\n            \n                \n                    Get the id of the current module\n\n\n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        id of the current module\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initModule\n                        \n                        \n                    \n                \n            \n            \n                \ninitModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:95\n                \n            \n\n\n            \n                \n                    Starts the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVersionSuperior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVersionSuperior(current: String, compare: String, currentStep: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:160\n                \n            \n\n\n            \n                \n                    Check if the current version is superior at the compared one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    current\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Latest version number of the module\n\n                                    \n                                \n                                \n                                    compare\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Version to compare to\n\n                                    \n                                \n                                \n                                    currentStep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Step on the string version of the module (splitted by dot)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns true if the current version is superior to the compared version. Returns false if not.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printDebug\n                        \n                        \n                    \n                \n            \n            \n                \nprintDebug(message: String, messageColor: ConsoleColors)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:181\n                \n            \n\n\n            \n                \n                    Print a debug message to the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to print in the console, a prefix is concatened to it (category/name)\n\n                                    \n                                \n                                \n                                    messageColor\n                                    \n                                                ConsoleColors\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ConsoleColors.YELLOW\n                                    \n\n                                    \n                                        Color of the current message in the console, yellow by default\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDestroyModule\n                        \n                        \n                    \n                \n            \n            \n                \nsetDestroyModule(destroyMethod: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:64\n                \n            \n\n\n            \n                \n                    Set the method that will be called when the module has to be stopped\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    destroyMethod\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method that will be called when the module is stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModule {\n\t//@ts-ignore\n\tprivate moduleInfos: TcsModuleInfos;\n\tprivate launchMethod: Function;\n\tprivate destroyMethod: Function;\n\n\tmoduleLaunched: Boolean;\n\tshouldLaunch: Boolean;\n\n\t/**\n\t * Create a new Tcs module instance\n\t * @param moduleType Type of the current module\n\t * @param moduleName Name of the current module, as if it was a ressource\n\t * @param launchMethod Method to launch when the module is ready\n\t * @param moduleDependencies List of modules ids this module depends on\n\t */\n\tconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function) {\n\t\tthis.shouldLaunch = true;\n\n\t\tif (moduleInfos != null) {\n\t\t\tthis.moduleInfos = moduleInfos;\n\n\t\t\tif (\n\t\t\t\tTCS_CONFIG.versionningCheck &&\n\t\t\t\tTCS.isServerSided &&\n\t\t\t\tthis.moduleInfos.git\n\t\t\t) {\n\t\t\t\tthis.checkVersion();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t\tthis.launchMethod = launchMethod;\n\t\tthis.destroyMethod = () => {};\n\t\tthis.moduleLaunched = false;\n\t}\n\n\t/**\n\t * Get the id of the current module\n\t * @returns id of the current module\n\t */\n\tgetId(): String {\n\t\treturn `${this.moduleInfos.moduleType}/${this.moduleInfos.moduleName}`;\n\t}\n\n\t/**\n\t * Get the list of the current module dependencies\n\t * @returns list of current module dependencies\n\t */\n\tgetDependencies(): Array {\n\t\treturn this.moduleInfos.dependencies || [];\n\t}\n\n\t/**\n\t * Set the method that will be called when the module has to be stopped\n\t * @param destroyMethod Method that will be called when the module is stopped\n\t */\n\tsetDestroyModule(destroyMethod: Function) {\n\t\tthis.destroyMethod = destroyMethod;\n\t}\n\n\t/**\n\t * Stop the module\n\t */\n\tdestroyModule() {\n\t\tthis.printDebug('Shutting down module !', ConsoleColors.RED);\n\t\ttry {\n\t\t\tTCS.threads.removeThreadByModule(this);\n\t\t\tthis.moduleLaunched = false;\n\t\t\tthis.shouldLaunch = false;\n\t\t\tthis.destroyMethod();\n\t\t\tthis.printDebug(\n\t\t\t\t'Module has been stopped correctly !',\n\t\t\t\tConsoleColors.GREEN,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while shutting down the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Starts the module\n\t */\n\tinitModule() {\n\t\tthis.printDebug('Starting module !');\n\t\ttry {\n\t\t\tthis.launchMethod(this);\n\t\t\tTCS.lang.loadModuleLang(this, TCS_CONFIG.lang);\n\t\t\tthis.moduleLaunched = true;\n\t\t\tthis.printDebug('Module has been started !', ConsoleColors.GREEN);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while starting the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Check with github the last version of the module to know if the current module is up to date.\n\t */\n\tprivate checkVersion() {\n\t\tconst https = require('https');\n\t\tconst options = {\n\t\t\thostname: 'raw.githubusercontent.com',\n\t\t\tport: 443,\n\t\t\tpath: `/${this.moduleInfos.git}/main/.tcs.json`,\n\t\t\tmethod: 'GET',\n\t\t};\n\n\t\tconst req = https.request(options, (res: any) => {\n\t\t\tres.on('data', (d: any) => {\n\t\t\t\tconst buf = Buffer.from(d);\n\t\t\t\tconst json = JSON.parse(buf.toString('utf-8'));\n\n\t\t\t\tif (!json.version) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isVersionSuperior(json.version, this.moduleInfos.version)) {\n\t\t\t\t\tTCS.warning(\n\t\t\t\t\t\t`Module ${this.getId()} has a new version (current: ${\n\t\t\t\t\t\t\tthis.moduleInfos.version\n\t\t\t\t\t\t} | new version : ${json.version}) ! \\n${\n\t\t\t\t\t\t\tConsoleColors.YELLOW\n\t\t\t\t\t\t}You can download it at : ${this.moduleInfos.git}${\n\t\t\t\t\t\t\tConsoleColors.RESET\n\t\t\t\t\t\t}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treq.on('error', (error: any) => {\n\t\t\tconsole.error(error);\n\t\t});\n\n\t\treq.end();\n\t}\n\n\t/**\n\t * Check if the current version is superior at the compared one\n\t * @param current Latest version number of the module\n\t * @param compare Version to compare to\n\t * @param currentStep Step on the string version of the module (splitted by dot)\n\t * @returns Returns true if the current version is superior to the compared version. Returns false if not.\n\t */\n\tprivate isVersionSuperior(\n\t\tcurrent: String,\n\t\tcompare: String,\n\t\tcurrentStep: number = 0,\n\t): boolean {\n\t\tconst currentNumber = parseInt(current.split('.')[currentStep]);\n\t\tconst compareNumber = parseInt(compare.split('.')[currentStep]);\n\n\t\tif (currentNumber == compareNumber) {\n\t\t\tif (currentStep == 2) return false;\n\t\t\treturn this.isVersionSuperior(current, compare, currentStep + 1);\n\t\t} else {\n\t\t\treturn currentNumber > compareNumber;\n\t\t}\n\t}\n\n\t/**\n\t * Print a debug message to the console\n\t * @param message Message to print in the console, a prefix is concatened to it (category/name)\n\t * @param messageColor Color of the current message in the console, yellow by default\n\t */\n\tprintDebug(\n\t\tmessage: String,\n\t\tmessageColor: ConsoleColors = ConsoleColors.YELLOW,\n\t) {\n\t\tif (TCS_CONFIG.debugMode)\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE} [${this.getId()}] ${messageColor}`,\n\t\t\t\tmessage,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsModuleInfos.html":{"url":"interfaces/TcsModuleInfos.html","title":"interface - TcsModuleInfos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsModuleInfos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/modules/mixed_moduleInfos.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dependencies\n                                \n                                \n                                            Optional\n                                        git\n                                \n                                \n                                        moduleName\n                                \n                                \n                                        moduleType\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dependencies\n                                    \n                                \n                                \n                                    \n                                        dependencies:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git\n                                    \n                                \n                                \n                                    \n                                        git:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleName\n                                    \n                                \n                                \n                                    \n                                        moduleName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleType\n                                    \n                                \n                                \n                                    \n                                        moduleType:         TcsModuleTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsModuleTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsModuleInfos {\n\tmoduleType: TcsModuleTypes;\n\tmoduleName: String;\n\tversion: String;\n\n\tgit?: String;\n\tdependencies?: String[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModuleManager.html":{"url":"classes/TcsModuleManager.html","title":"class - TcsModuleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModuleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_modulesManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findModuleById\n                            \n                            \n                                    Private\n                                gameModules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addModuleToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the module manager.\nShould only be called by the core !\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findModuleById\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:66\n                            \n                        \n\n                \n                    \n                        Get a loaded module by it's id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        id\n                                                        \n                                                                Id of the module to find\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToGame\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToGame(newModule: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:50\n                \n            \n\n\n            \n                \n                    Add a module to the current game and loads it when it is ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newModule\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module to add and load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModuleManager {\n\tprivate gameModules: Array;\n\n\t/**\n\t * Initialize the module manager.\n\t * Should only be called by the core !\n\t */\n\tconstructor() {\n\t\tthis.gameModules = [];\n\t\tsetTick(() =>\n\t\t\tthis.gameModules\n\t\t\t\t.filter((module) => !module.moduleLaunched)\n\t\t\t\t.forEach((module) => {\n\t\t\t\t\tconst remainingDependenciesToStart = module\n\t\t\t\t\t\t.getDependencies()\n\t\t\t\t\t\t.filter((mod) => {\n\t\t\t\t\t\t\tconst foundModule = this.findModuleById(mod);\n\n\t\t\t\t\t\t\tif (!foundModule) {\n\t\t\t\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t\t\t\t`Can't start module ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + module.getId() + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} because dependency ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + mod + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} isn't installed.`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn !foundModule.moduleLaunched;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (remainingDependenciesToStart.length == 0 && module.shouldLaunch)\n\t\t\t\t\t\tmodule.initModule();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Add a module to the current game and loads it when it is ready\n\t * @param newModule Module to add and load\n\t */\n\taddModuleToGame(newModule: TcsModule) {\n\t\tif (!this.findModuleById(newModule.getId()))\n\t\t\tthis.gameModules.push(newModule);\n\t\telse\n\t\t\tTCS.error(\n\t\t\t\t`Can't add module ${ConsoleColors.YELLOW}${newModule.getId()}${\n\t\t\t\t\tConsoleColors.RED\n\t\t\t\t} because a module with the same id already exists !`,\n\t\t\t);\n\t}\n\n\t/**\n\t * Get a loaded module by it's id\n\t * @param id Id of the module to find\n\t * @returns The module if found, undefined if it doesn't exist\n\t */\n\tfindModuleById = (id: String): TcsModule | undefined =>\n\t\tthis.gameModules.find((mod) => mod.getId() === id);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThread.html":{"url":"classes/TcsThread.html","title":"class - TcsThread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threads.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugExec\n                            \n                            \n                                delay\n                            \n                            \n                                    Private\n                                execs\n                            \n                            \n                                isThreadFull\n                            \n                            \n                                    Private\n                                threadId\n                            \n                            \n                                    Private\n                                tick\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendThread\n                            \n                            \n                                containsThreadById\n                            \n                            \n                                getThreadTimer\n                            \n                            \n                                removeModuleThreads\n                            \n                            \n                                removeThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timer: number)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n                \n                    \n                            Create a new thread with the specified delay\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timer\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Delay between each executions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debugExec\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:57\n                            \n                        \n\n                \n                    \n                        Execute a thread function in debug mode\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        thread\n                                                        \n                                                                Thread to execute\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:74\n                            \n                        \n\n                \n                    \n                        Wait the specified time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        time\n                                                        \n                                                                Time of the delay\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isThreadFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendThread\n                        \n                        \n                    \n                \n            \n            \n                \nappendThread(module: TcsModule, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:83\n                \n            \n\n\n            \n                \n                    Append a function to execute after the delay in the current thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module the thread comes from\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsThreadById\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsThreadById(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:132\n                \n            \n\n\n            \n                \n                    Get if a thread is actually contained in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the thread is contained, false else\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThreadTimer\n                        \n                        \n                    \n                \n            \n            \n                \ngetThreadTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:49\n                \n            \n\n\n            \n                \n                    Get current thread delay between each executions\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Thread delay\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeModuleThreads\n                        \n                        \n                    \n                \n            \n            \n                \nremoveModuleThreads(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:115\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads have to be stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:100\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThread {\n\tprivate threadId: number;\n\tprivate execs: Array;\n\tprivate timer: number;\n\tprivate tick: number;\n\n\tisThreadFull: boolean;\n\n\t/**\n\t * Create a new thread with the specified delay\n\t * @param timer Delay between each executions\n\t */\n\tconstructor(timer: number) {\n\t\tthis.execs = [];\n\t\tthis.timer = timer;\n\t\tthis.isThreadFull = false;\n\t\tthis.threadId = +new Date();\n\n\t\tthis.tick = setTick(async () => {\n\t\t\tawait this.delay(this.timer);\n\n\t\t\tconst benchmark = new TcsBenchmark();\n\t\t\tthis.execs.forEach((thread) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (TCS_CONFIG.debugMode) this.debugExec(thread);\n\t\t\t\t\telse thread.exec();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t`Error encountered in thread ${ConsoleColors.YELLOW}${thread.id}${ConsoleColors.RED}: \\n${e}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst time = benchmark.stop();\n\n\t\t\tif (time > TCS_CONFIG.maxExecTimePerThread) this.isThreadFull = true;\n\t\t});\n\t}\n\n\t/**\n\t * Get current thread delay between each executions\n\t * @returns Thread delay\n\t */\n\tgetThreadTimer(): number {\n\t\treturn this.timer;\n\t}\n\n\t/**\n\t * Execute a thread function in debug mode\n\t * @param thread Thread to execute\n\t */\n\tdebugExec = (thread: TcsThreadExec) => {\n\t\tconst benchmark = new TcsBenchmark();\n\t\tthread.exec();\n\t\tconst time = benchmark.stop();\n\n\t\tif (time >= 1) {\n\t\t\tTCS.warning(\n\t\t\t\t`Thread ${thread.id.split('-')[1]} took ${time} ms to execute !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Wait the specified time\n\t * @param time Time of the delay\n\t * @returns Promise that is resolved after the delay\n\t */\n\tdelay = (time: number): Promise =>\n\t\tnew Promise((resolve, _) => setTimeout(resolve, time));\n\n\t/**\n\t * Append a function to execute after the delay in the current thread\n\t * @param module Module the thread comes from\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tappendThread(module: TcsModule, exec: Function): String {\n\t\tconst threadId = `${this.threadId}-${module.getId()}-${this.execs.length}`;\n\t\tconst thread: TcsThreadExec = {\n\t\t\tid: threadId,\n\t\t\texec: exec,\n\t\t};\n\n\t\tthis.execs.push(thread);\n\n\t\treturn threadId;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param id Id of the thread to remove\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveThread(id: String): boolean {\n\t\tthis.execs = this.execs.filter((thread) => thread.id !== id);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param module Module from which the threads have to be stopped\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveModuleThreads(module: TcsModule): boolean {\n\t\tthis.execs = this.execs.filter(\n\t\t\t(thread) => thread.id.split('-')[1] !== module.getId(),\n\t\t);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get if a thread is actually contained in\n\t * @param id Id to search for\n\t * @returns True if the thread is contained, false else\n\t */\n\tcontainsThreadById(id: String): boolean {\n\t\treturn this.execs.find((thread) => thread.id === id) != null;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsThreadExec.html":{"url":"interfaces/TcsThreadExec.html","title":"interface - TcsThreadExec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsThreadExec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/threads/mixed_threadInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exec\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsThreadExec {\n\tid: String;\n\texec: Function;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThreadsManager.html":{"url":"classes/TcsThreadsManager.html","title":"class - TcsThreadsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThreadsManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threadsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                threadsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createThread\n                            \n                            \n                                removeThread\n                            \n                            \n                                removeThreadByModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the threads manager\nShould only be called by the core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThread[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createThread\n                        \n                        \n                    \n                \n            \n            \n                \ncreateThread(module: TcsModule, timer: number, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:25\n                \n            \n\n\n            \n                \n                    Create a new thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module that creates the thread\n\n                                    \n                                \n                                \n                                    timer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Delay between each executions\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:46\n                \n            \n\n\n            \n                \n                    Stop and deletes a thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThreadByModule\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThreadByModule(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:64\n                \n            \n\n\n            \n                \n                    Stop all the threads that come from the specified module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads to stop come from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThreadsManager {\n\tprivate threadsList: TcsThread[];\n\n\t/**\n\t * Initialize the threads manager\n\t * Should only be called by the core\n\t */\n\tconstructor() {\n\t\tthis.threadsList = [];\n\t}\n\n\t/**\n\t * Create a new thread\n\t * @param module Module that creates the thread\n\t * @param timer Delay between each executions\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tcreateThread(module: TcsModule, timer: number, exec: Function): String {\n\t\tlet found = false;\n\t\tconst currentThread =\n\t\t\tthis.threadsList.find((thread) => {\n\t\t\t\tif (thread.getThreadTimer() == timer && !thread.isThreadFull) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}) || new TcsThread(timer);\n\t\tif (!found) {\n\t\t\tthis.threadsList.push(currentThread);\n\t\t}\n\n\t\treturn currentThread.appendThread(module, exec);\n\t}\n\n\t/**\n\t * Stop and deletes a thread\n\t * @param id Id of the thread to delete\n\t */\n\tremoveThread(id: String) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tif (thread.containsThreadById(id)) {\n\t\t\t\tconst shouldDeleteThread = thread.removeThread(id);\n\n\t\t\t\tif (shouldDeleteThread) {\n\t\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stop all the threads that come from the specified module\n\t * @param module Module from which the threads to stop come from\n\t */\n\tremoveThreadByModule(module: TcsModule) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tconst shouldDeleteThread = thread.removeModuleThreads(module);\n\n\t\t\tif (shouldDeleteThread) {\n\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\treturn this.removeThreadByModule(module);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContribution\nHere are the contribution guidelines. Please, read it before contributing.\nDocumentation\n\nPull requests for docs update, if needed\nCode-level documentation expectations\n100% documentation coverage for pull requests\nUpdate readme if needed\nUpdate doc if needed\n\n\n\nEnvironment setup\nTCS is using Prettier to format the code. You must use our format style in your push requests.\nCompiling\nYou must compile your TS file with these actions before sending a pull request. The build will appear in the build folder.\nnpm run precompileRender the documentation\nTCS uses compodoc to render the documentation automatically. If you need to update the documentation due to code changes, please follow these steps :\nnpm install -g @compodoc/compodoc\n\nnpm run docDependencies\nThe current project depends on :\n\n@citizenfx/client\n@citizenfx/server\nprettier\ntslint\ntypescript\nfs-extra\nmerge-files\n\nExecute the following command to install them :\nnpm i\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/assets/mixed_config.ts\n            \n            variable\n            TCS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/librairies/benchmark/mixed_benchmark.ts\n            \n            class\n            TcsBenchmark\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/core/librairies/callbacks/mixed_callbackManager.ts\n            \n            class\n            TcsCallbackManager\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventListenerClass.ts\n            \n            class\n            TcsEventListener\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventManager.ts\n            \n            class\n            TcsEventManager\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            ActionInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            TcsInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputsManager.ts\n            \n            class\n            TcsInputManager\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/core/librairies/language/mixed_languageManager.ts\n            \n            class\n            TcsLanguageManager\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_module.ts\n            \n            class\n            TcsModule\n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_modulesManager.ts\n            \n            class\n            TcsModuleManager\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threads.ts\n            \n            class\n            TcsThread\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threadsManager.ts\n            \n            class\n            TcsThreadsManager\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/core/mixed_tcs.ts\n            \n            class\n            TcsCore\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfosFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoadedFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            TCS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            deathThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            GetPlayerByEntityID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_vehicle.ts\n            \n            function\n            vehicleThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            isWeaponInArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            weaponThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/mixed_moduleInfos.ts\n            \n            variable\n            eventsModulesInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsClientEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/modules/mixed_moduleInfos.ts\n            \n            interface\n            TcsModuleInfos\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/threads/mixed_threadInterface.ts\n            \n            interface\n            TcsThreadExec\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deathThreadChecker   (src/.../cli_death.ts)\n                        \n                        \n                            GetPlayerByEntityID   (src/.../cli_death.ts)\n                        \n                        \n                            isWeaponInArray   (src/.../cli_weapon.ts)\n                        \n                        \n                            vehicleThreadChecker   (src/.../cli_vehicle.ts)\n                        \n                        \n                            weaponThreadChecker   (src/.../cli_weapon.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/core/events/client/cli_death.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            deathThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \ndeathThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetPlayerByEntityID\n                        \n                        \n                    \n                \n            \n            \n                \nGetPlayerByEntityID(id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_weapon.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isWeaponInArray\n                        \n                        \n                    \n                \n            \n            \n                \nisWeaponInArray(weaponArray, weaponHash)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weaponArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weaponHash\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            weaponThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nweaponThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_vehicle.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            vehicleThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nvehicleThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTCS Core\n\n    \nPresentation\nTCS is an open source FiveM framework developped with TypeScript language.\nYou can download the last version, ready to start on FiveM resources at the releases page.\nFind out how to contribute by reading the contributing guide.\nDon't forget to read the Code of Conduct.\n\nFor any question about the core, you can directly ask it into the \"discution\" section of this repository\n\nGit sources\nTo download the latest sources of TCS, execute this command :\ngit clone https://github.com/FiveMTCS/Core.git\nIssues\nIt is possible that you experience some issues while using TCS, especially with the first versions of it. Please, first verify that you are using the latest version and then report the issue by clicking here.\nGet started\nIt is very simple to use TCS :\n\nDownload the latest release here\nDrag and drop the folder to your FiveM server resources folder\nAdd the next command to your server.cfg\n\nensure tcsDeveloper tools\nTo develop a new TCS module, follow these steps :\n\nCreate a folder that will contain the sources of your module\n\nExecute these commands :\nnpm init\nnpm i -D @citizenfx/client\nnpm i -D @citizenfx/server\nnpm i -D @fivemtcs/types\n\nExport the sources and place them into the modules/ folder inside the TCS Core resource.\n\nYou can find more informations by looking at the Demo project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 FiveMTCS\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            eventsModulesInfos   (src/.../mixed_moduleInfos.ts)\n                        \n                        \n                            loadTcsModuleInfos   (src/.../mixed_main.ts)\n                        \n                        \n                            loadTcsModuleInfosFunction   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoaded   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoadedFunctions   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS_CONFIG   (src/.../mixed_config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/core/events/mixed_moduleInfos.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventsModulesInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    src/mixed_main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tloadTcsModuleInfosFunction.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfosFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tonTcsLoadedFunctions.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoadedFunctions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TCS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCore\n\n                        \n                    \n\n\n            \n        \n\n    src/assets/mixed_config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TCS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tlang: 'fr-FR', // Current lang the scripts should be on\n\n\tdebugMode: true, // If set to true, debug informations are going to be printed in the console\n\n\tmaxExecTimePerThread: 10, // Maximum amount of time (in ms) a thread should take to execute in a tick\n\n\tshowErrorsAnyCase: true, // Should print errors in console even if debug mode isn't activated ?\n\n\tshowWarningsAnyCase: true, // Should print warnings in console even if debug mode isn't activated ?\n\n\tversionningCheck: true, // Check if modules are at their latest version\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
