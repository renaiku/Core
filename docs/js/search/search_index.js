var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionInput.html",[0,0.717,1,2.122]],["body/interfaces/ActionInput.html",[0,1.223,1,3.62,2,1.921,3,0.466,4,0.41,5,0.355,6,3.392,7,0.303,8,0.629,9,4.509,10,4.509,11,4.509,12,1.212,13,0.456,14,0.03,15,1.866,16,2.726,17,3.392,18,3.392,19,0.021,20,0.025,21,0.021]],["title/classes/MakeRequest.html",[22,0.014,23,1.464]],["body/classes/MakeRequest.html",[3,0.226,4,0.198,5,0.172,7,0.146,8,0.384,12,1.065,13,0.409,14,0.031,15,1.479,19,0.027,20,0.015,21,0.026,22,0.018,23,2.47,24,0.454,25,1.462,26,4.315,27,2.988,28,2.988,29,3.337,30,3.348,31,0.877,32,3.903,33,2.374,34,3.759,35,3.759,36,2.479,37,0.494,38,2.479,39,3.155,40,1.139,41,3.392,42,0.827,43,0.827,44,0.976,45,2.245,46,1.942,47,2.245,48,2.245,49,2.245,50,1.491,51,2.515,52,2.245,53,2.966,54,2.479,55,2.245,56,3.329,57,3.903,58,1.538,59,3.007,60,0.81,61,2.479,62,2.245,63,2.966,64,2.479,65,2.479,66,2.227,67,2.479,68,1.296,69,1.404,70,1.641,71,1.641,72,1.087,73,3.329,74,1.209,75,2.479,76,1.319,77,1.993,78,1.057,79,2.479,80,1.641,81,1.641,82,1.641,83,1.462,84,3.184,85,2.966,86,1.813,87,1.057,88,1.462,89,2.209,90,1.462,91,1.098,92,1.009,93,1.462,94,1.462,95,1.555,96,1.462,97,1.462,98,1.462,99,1.462,100,1.462,101,1.993,102,2.209,103,2.479,104,2.479,105,1.692,106,1.813,107,1.993,108,2.479,109,1.098,110,1.641,111,0.93,112,1.641,113,1.319,114,1.993,115,1.641,116,2.209,117,1.641,118,1.462,119,1.462,120,1.143,121,1.462,122,1.462,123,1.462,124,2.209,125,1.813,126,1.993,127,2.988,128,1.641,129,1.641,130,1.641,131,1.641,132,1.659,133,2.662,134,2.209,135,2.479,136,1.641,137,1.641]],["title/classes/MakeRequestMongo.html",[22,0.014,113,1.914]],["body/classes/MakeRequestMongo.html",[3,0.215,4,0.189,5,0.164,7,0.14,8,0.37,12,1.051,13,0.415,14,0.031,15,1.448,19,0.026,20,0.015,21,0.025,22,0.018,23,2.731,24,0.433,25,1.394,26,4.269,27,2.901,28,2.901,29,3.313,30,3.117,31,0.846,32,3.838,33,2.447,34,4.057,35,3.689,36,2.39,37,0.471,38,1.564,39,3.122,40,1.182,42,0.803,43,0.803,44,0.947,46,1.913,50,1.495,51,2.648,53,2.894,54,2.39,56,3.248,57,3.838,58,1.515,59,2.966,60,0.781,61,2.39,63,2.894,64,2.39,65,2.39,66,2.173,67,2.39,68,1.25,69,1.354,70,1.564,71,1.564,72,1.061,73,3.248,74,1.192,75,2.39,76,1.257,77,2.332,78,1.238,79,2.39,80,1.564,81,1.564,82,1.564,83,1.394,84,3.117,85,2.894,86,1.748,87,1.026,88,1.394,89,2.129,90,1.394,91,1.046,92,0.961,93,1.394,94,1.394,95,1.526,96,1.394,97,1.394,98,1.394,99,1.394,100,1.394,101,1.921,102,2.129,103,2.39,104,2.39,105,1.643,106,1.748,107,1.921,108,2.39,109,1.046,110,1.564,111,0.886,112,1.564,113,1.921,114,2.812,115,2.39,116,2.894,117,1.564,118,1.394,119,1.394,120,1.11,121,1.394,122,1.394,123,1.394,124,2.129,125,1.748,126,1.921,127,2.901,128,1.564,129,1.564,130,1.564,131,1.564,132,1.599,133,2.584,134,2.129,135,2.39,136,1.564,137,1.564,138,3.27,139,4.537,140,1.793,141,1.793,142,1.793,143,1.793,144,2.14,145,2.14,146,1.793,147,1.793,148,1.793,149,1.793]],["title/classes/MakeRequestSQL.html",[22,0.014,76,1.914]],["body/classes/MakeRequestSQL.html",[3,0.204,4,0.179,5,0.156,7,0.132,8,0.356,12,1.086,13,0.418,14,0.031,15,1.414,19,0.026,20,0.014,21,0.025,22,0.017,23,2.706,24,0.411,25,1.323,26,4.218,27,2.808,28,2.808,29,3.287,30,3.357,31,0.812,32,3.768,33,2.42,34,3.995,35,3.614,36,2.297,37,0.447,38,1.485,39,3.244,40,1.183,42,0.875,43,0.875,44,1.032,46,1.882,50,1.491,51,2.417,53,2.816,54,2.297,56,3.161,57,3.768,58,1.49,59,2.921,60,0.917,61,2.297,63,2.816,64,2.297,65,2.297,66,2.286,67,2.297,68,1.201,69,1.301,70,1.485,71,1.485,72,1.032,73,3.161,74,1.172,75,2.297,76,1.846,77,2.257,78,1.333,79,3.418,80,2.297,81,1.485,82,1.485,83,2.046,84,3.468,85,3.468,86,2.053,87,1.209,88,2.046,89,2.816,90,2.046,91,1.537,92,1.412,93,2.046,94,2.046,95,1.495,96,1.323,97,1.323,98,1.323,99,1.323,100,1.323,101,2.904,102,2.046,103,2.297,104,2.297,105,1.591,106,1.679,107,1.846,108,2.297,109,0.993,110,1.485,111,0.841,112,1.485,113,1.194,114,1.846,115,1.485,116,2.046,117,1.485,118,1.323,119,1.323,120,1.075,121,1.323,122,1.323,123,1.323,124,2.046,125,1.679,126,1.846,127,2.808,128,1.485,129,1.485,130,1.485,131,1.485,132,1.537,133,2.502,134,2.046,135,2.297,136,1.485,137,1.485,139,4.461,140,1.702,141,1.702,142,1.702,143,1.702,146,1.702,147,1.702,148,1.702,149,1.702,150,2.632,151,3.142,152,2.031,153,2.031,154,2.031,155,0.664]],["title/classes/MongoDatabase.html",[22,0.014,156,2.122]],["body/classes/MongoDatabase.html",[3,0.234,4,0.206,5,0.178,7,0.152,8,0.395,12,1.137,13,0.414,14,0.031,19,0.011,20,0.016,21,0.011,22,0.01,23,1.568,24,0.472,29,3.094,31,0.902,37,0.513,39,3.273,40,1.125,42,1.056,43,1.229,44,1.245,46,1.233,50,1.357,51,2.911,58,1.555,59,3.355,60,1.108,72,1.357,74,1.148,78,1.349,95,1.055,101,2.456,105,0.965,106,2.235,114,2.92,116,4.183,118,1.518,119,1.518,120,1.619,121,1.518,122,1.518,123,1.518,124,2.723,125,2.235,126,2.456,132,2.27,133,3.521,134,2.723,156,2.272,157,1.953,158,2.923,159,1.444,160,2.456,161,3.396,162,2.55,163,4.064,164,3.769,165,2.923,166,1.477,167,3.489,168,2.923,169,2.331,170,3.489,171,2.331,172,2.159,173,3.812,174,3.62,175,2.55,176,3.056,177,2.235,178,2.331,179,1.518,180,3.489,181,4.762,182,2.331,183,1.444,184,2.923,185,1.706,186,2.923,187,2.923,188,3.489,189,3.889,190,2.331,191,3.812,192,2.331,193,3.633,194,2.331,195,2.272,196,2.331,197,2.331,198,2.331,199,1.953,200,1.953,201,1.953,202,1.953,203,1.953,204,1.953,205,2.331,206,2.331,207,1.14,208,2.331,209,2.331,210,2.331,211,2.331,212,3.489,213,2.331,214,1.37,215,4.181,216,2.331,217,2.331]],["title/classes/MysqlDatabase.html",[22,0.014,218,2.122]],["body/classes/MysqlDatabase.html",[3,0.169,4,0.149,5,0.129,7,0.11,8,0.307,12,1.166,13,0.421,14,0.031,19,0.023,20,0.012,21,0.008,22,0.007,23,1.217,24,0.341,29,3.067,31,0.701,33,1.613,37,0.37,39,3.293,40,1.069,42,1.042,43,1.221,44,1.229,46,0.957,50,1.385,51,2.772,58,1.395,59,3.205,60,1.191,66,1.905,72,1.37,74,1.097,78,1.423,83,1.764,84,3.64,85,3.248,86,2.282,87,1.24,88,1.764,89,2.537,90,1.764,91,1.325,92,1.217,93,1.764,94,1.764,95,1.735,96,1.096,97,1.764,98,1.096,99,1.096,100,1.096,101,3.104,106,0.9,107,2.508,111,0.697,114,1.592,120,1.395,125,1.817,126,1.997,150,2.27,155,0.55,158,2.27,159,1.407,160,1.997,161,3.123,162,1.98,163,3.763,164,3.441,165,2.27,166,1.201,168,2.27,172,2.278,173,3.334,174,3.583,175,1.98,176,3.862,177,1.817,179,4.214,181,4.313,183,2.236,184,2.27,185,1.325,186,2.27,187,2.27,189,3.577,191,3.334,193,3.121,195,1.764,200,1.411,201,1.411,202,1.411,203,1.411,204,1.411,207,0.823,214,0.989,218,1.764,219,1.411,220,2.709,221,2.709,222,2.709,223,2.709,224,1.684,225,2.27,226,2.709,227,2.709,228,2.27,229,1.684,230,1.684,231,1.98,232,2.68,233,2.709,234,1.684,235,2.847,236,2.709,237,1.684,238,2.27,239,1.684,240,1.684,241,1.411,242,1.684,243,1.684,244,1.684,245,1.684,246,1.684,247,1.231,248,1.684,249,1.411,250,1.684,251,1.684,252,1.684,253,1.684,254,2.709,255,1.684,256,1.684,257,1.684,258,1.684,259,2.27,260,1.217,261,1.684,262,1.684,263,1.684,264,2.709,265,1.684,266,1.684,267,1.684,268,2.27,269,1.684,270,1.684,271,1.684,272,0.989,273,1.684,274,1.684,275,2.709,276,1.684,277,3.399,278,1.231,279,1.684,280,1.684,281,1.684,282,1.684,283,1.684,284,1.684]],["title/classes/TcsBenchmark.html",[22,0.014,285,2.122]],["body/classes/TcsBenchmark.html",[3,0.422,4,0.37,5,0.321,7,0.274,8,0.592,13,0.321,14,0.031,15,1.721,19,0.019,20,0.024,21,0.019,22,0.019,24,0.849,31,1.351,37,1.253,40,1.152,50,1.247,58,1.462,74,0.923,78,1.472,91,2.555,95,1.268,285,3.403,286,3.514,287,1.482,288,4.481,289,4.173,290,5.225,291,4.378,292,4.355,293,4.992,294,4.194,295,5.225,296,4.355,297,6.25,298,3.07,299,5.225,300,5.225]],["title/classes/TcsCallbackManager.html",[22,0.014,301,2.122]],["body/classes/TcsCallbackManager.html",[3,0.314,4,0.38,5,0.239,7,0.281,8,0.488,12,0.915,13,0.377,14,0.031,15,1.49,19,0.014,20,0.02,21,0.014,22,0.014,24,0.632,37,1.084,40,1.166,42,0.871,43,1.166,60,1.028,68,1.194,69,1.293,72,1.33,74,1.169,87,1.274,95,1.302,105,1.782,111,1.782,155,1.611,160,3.273,166,2.183,287,1.103,301,2.804,302,2.616,303,6.103,304,4.927,305,4.927,306,5.76,307,4.927,308,4.927,309,4.305,310,2.301,311,3.607,312,2.301,313,3.123,314,3.123,315,3.467,316,6.291,317,6.013,318,3.751,319,5.311,320,6.013,321,3.123,322,3.123,323,6.013,324,4.305,325,4.305,326,3.123,327,3.123,328,3.123,329,3.123,330,3.123,331,3.123,332,3.123,333,4.305,334,3.123,335,3.123,336,3.123,337,3.123,338,3.123,339,3.123,340,4.305,341,3.123]],["title/interfaces/TcsClientEvent.html",[0,0.717,342,2.122]],["body/interfaces/TcsClientEvent.html",[0,1.218,2,1.908,3,0.463,4,0.407,5,0.353,7,0.301,8,0.627,13,0.353,14,0.031,15,1.794,19,0.021,20,0.025,21,0.021,46,1.628,77,3.252,160,3.252,185,2.254,315,3.252,342,3.605,343,3.368,344,3.486,345,5.156,346,3.368,347,4.971,348,4.638,349,3.368,350,3.368,351,3.368,352,3.861]],["title/classes/TcsCore.html",[22,0.014,353,2.122]],["body/classes/TcsCore.html",[3,0.276,4,0.242,5,0.21,7,0.179,8,0.445,12,1.1,13,0.466,14,0.031,19,0.013,20,0.018,21,0.013,22,0.012,24,0.555,31,1.016,37,1.011,40,1.244,42,0.93,43,0.93,44,1.096,50,1.096,60,1.096,68,1.048,69,1.135,72,1.096,87,0.709,111,2.076,120,1.592,132,2.94,155,0.897,159,1.901,172,2.287,287,0.969,301,2.991,310,2.1,311,3.848,315,2.309,353,2.559,354,2.298,355,6.515,356,4.593,357,3.848,358,4.593,359,3.357,360,2.455,361,3.357,362,3.266,363,5.925,364,3.93,365,2.1,366,2.309,367,2.743,368,2.991,369,2.743,370,2.991,371,2.743,372,2.991,373,2.743,374,2.309,375,2.991,376,2.743,377,2.991,378,2.743,379,2.991,380,2.743,381,3.93,382,2.743,383,5.524,384,4.766,385,2.873,386,4.038,387,4.395,388,2.064,389,3.93,390,2.743,391,3.93,392,2.743,393,3.666,394,3.93,395,2.743,396,2.743,397,2.743,398,2.298,399,2.743,400,2.743,401,2.743,402,2.005,403,4.593,404,2.743,405,2.298,406,2.743,407,2.005,408,1.341,409,2.743,410,2.743,411,3.357,412,2.743,413,3.848,414,2.743,415,2.743,416,2.743,417,2.743]],["title/classes/TcsDatabaseManager.html",[22,0.014,368,2.122]],["body/classes/TcsDatabaseManager.html",[3,0.384,4,0.337,5,0.292,7,0.249,8,0.558,13,0.441,14,0.031,19,0.017,20,0.022,21,0.017,22,0.017,24,0.773,31,1.273,37,1.199,40,1.256,42,0.773,43,0.773,44,0.912,50,1.301,74,1.083,78,1.643,120,1.377,156,2.487,159,2.57,166,2.105,207,1.867,218,2.487,368,3.206,374,2.893,388,2.212,408,1.867,418,3.199,419,5.45,420,5.45,421,5.45,422,5.757,423,4.924,424,4.924,425,3.818,426,3.818,427,3.818,428,3.818,429,4.924,430,3.818,431,4.566,432,3.818,433,5.45,434,3.818,435,5.757,436,4.924,437,3.818,438,3.818]],["title/interfaces/TcsEvent.html",[0,0.717,344,1.914]],["body/interfaces/TcsEvent.html",[0,1.198,2,1.857,3,0.451,4,0.396,5,0.343,7,0.292,8,0.617,13,0.449,14,0.031,15,1.356,19,0.02,20,0.025,21,0.02,46,2.072,77,2.635,160,3.199,185,2.982,315,3.199,342,2.92,343,3.278,344,3.445,345,3.757,346,3.278,347,5.235,348,4.562,349,4.458,350,4.287,351,4.458,352,3.757]],["title/classes/TcsEventListener.html",[22,0.014,439,2.122]],["body/classes/TcsEventListener.html",[3,0.343,4,0.302,5,0.261,7,0.223,8,0.518,13,0.47,14,0.031,19,0.016,20,0.021,21,0.016,22,0.015,24,0.691,31,1.183,37,0.752,40,1.163,42,0.926,43,1.116,44,1.092,46,1.823,50,1.232,58,1.655,60,1.092,72,1.232,74,0.752,78,1.53,87,0.883,92,2.477,155,1.116,166,2.197,172,2.282,183,1.894,185,2.893,287,1.207,298,2.688,318,4.204,349,4.324,350,4.324,388,1.535,439,2.98,440,2.861,441,5.264,442,4.575,443,5.512,444,4.575,445,4.575,446,6.14,447,2.98,448,4.618,449,3.833,450,4.575,451,4.575,452,4.575,453,3.415,454,4.575,455,3.415,456,3.833,457,3.833,458,3.415,459,4.575,460,4.575,461,3.415,462,3.415]],["title/classes/TcsEventManager.html",[22,0.014,370,2.122]],["body/classes/TcsEventManager.html",[3,0.326,4,0.287,5,0.248,7,0.288,8,0.5,13,0.338,14,0.031,19,0.015,20,0.02,21,0.015,22,0.014,24,0.657,37,1.106,40,1.143,42,0.895,43,0.895,60,1.055,68,1.24,69,1.343,72,1.055,74,0.714,78,1.507,87,1.143,92,1.986,109,1.586,155,1.445,172,2.234,272,3.171,287,1.146,298,2.596,312,2.362,318,4.214,344,3.171,351,3.23,366,2.596,370,2.878,439,3.273,441,4.995,448,4.522,449,4.522,456,3.703,457,4.522,463,2.718,464,5.026,465,5.026,466,5.026,467,5.026,468,4.419,469,3.703,470,4.419,471,4.419,472,4.419,473,3.703,474,3.244,475,3.244,476,3.244,477,3.244,478,4.419,479,3.244,480,5.826,481,3.244,482,4.211,483,5.026,484,4.419,485,3.244,486,2.718,487,3.244,488,3.244,489,3.244,490,3.244,491,3.244,492,3.244,493,4.419,494,3.244,495,3.244,496,3.244,497,3.244]],["title/interfaces/TcsInput.html",[0,0.717,16,1.914]],["body/interfaces/TcsInput.html",[0,1.228,1,3.043,2,1.934,3,0.47,4,0.413,5,0.358,6,3.416,7,0.305,8,0.632,9,3.416,10,3.416,11,3.416,12,1.214,13,0.427,14,0.03,15,1.87,16,3.279,17,4.52,18,4.52,19,0.021,20,0.025,21,0.021]],["title/classes/TcsInputManager.html",[22,0.014,372,2.122]],["body/classes/TcsInputManager.html",[3,0.209,4,0.184,5,0.159,7,0.136,8,0.362,9,4.383,10,1.519,11,1.519,12,0.996,13,0.245,14,0.031,15,0.967,16,1.878,17,4.342,18,4.022,19,0.009,20,0.015,21,0.009,22,0.009,24,0.421,37,0.857,40,1.137,42,1.01,43,1.202,50,1.314,60,1.365,68,1.222,69,1.324,72,1.341,74,1.18,78,1.29,86,3.055,87,1.344,95,1.699,120,1.224,155,1.869,159,1.324,183,1.324,185,2.14,232,1.221,278,2.337,287,0.734,310,1.709,312,1.709,357,2.679,372,2.082,374,2.289,393,1.519,408,2.44,473,3.958,498,1.741,499,3.897,500,3.897,501,3.897,502,3.897,503,3.897,504,3.897,505,3.897,506,3.897,507,3.897,508,3.197,509,2.849,510,2.078,511,4.61,512,5.875,513,3.197,514,4.724,515,3.197,516,4.375,517,3.197,518,2.078,519,4.375,520,3.197,521,3.197,522,2.078,523,4.375,524,3.197,525,3.197,526,2.078,527,3.666,528,4.375,529,3.197,530,4.375,531,2.337,532,2.337,533,4.375,534,4.375,535,2.078,536,3.197,537,2.078,538,2.078,539,3.197,540,2.078,541,3.897,542,3.197,543,2.078,544,2.078,545,3.197,546,3.897,547,3.897,548,2.078,549,2.078,550,2.078,551,2.078,552,2.679,553,4.375,554,3.197,555,3.197,556,3.197,557,4.375,558,3.197,559,3.197,560,4.988,561,3.197,562,3.197,563,3.197,564,2.078,565,2.078,566,3.197,567,3.197,568,3.197,569,2.078]],["title/classes/TcsLanguageManager.html",[22,0.014,375,2.122]],["body/classes/TcsLanguageManager.html",[3,0.258,4,0.226,5,0.338,7,0.167,8,0.424,12,1.138,13,0.396,14,0.031,19,0.022,20,0.017,21,0.012,22,0.011,24,0.519,31,0.968,37,0.973,40,1.157,42,0.984,43,1.093,44,1.16,46,2.019,50,1.289,58,1.51,60,1.16,66,1.83,68,1.976,69,2.14,72,1.289,74,0.973,78,1.143,86,3.165,87,0.663,95,1.337,155,0.838,172,2.512,174,3.515,232,2.199,235,2.736,260,1.986,272,2.856,278,2.736,287,0.906,310,2.001,312,2.001,359,3.779,375,2.437,388,1.682,398,3.704,570,2.148,571,3.743,572,3.743,573,3.743,574,3.743,575,5.35,576,3.743,577,2.564,578,4.861,579,4.861,580,4.421,581,6.263,582,3.743,583,3.743,584,2.564,585,3.946,586,4.861,587,3.743,588,5.574,589,2.564,590,3.743,591,3.743,592,3.743,593,3.743,594,2.162,595,2.564,596,2.794,597,2.736,598,4.331,599,4.861,600,5.714,601,3.743,602,3.743,603,3.743,604,2.564,605,4.861,606,3.743,607,3.136,608,2.564,609,3.743,610,2.564,611,2.564,612,1.874,613,3.743,614,2.564,615,2.736,616,2.564,617,2.564,618,2.564]],["title/classes/TcsModule.html",[22,0.014,594,1.593]],["body/classes/TcsModule.html",[3,0.178,4,0.157,5,0.136,7,0.116,8,0.32,12,1.052,13,0.411,14,0.031,15,1.325,19,0.008,20,0.013,21,0.008,22,0.008,24,0.359,31,0.73,37,0.39,40,1.161,42,0.812,43,0.887,44,0.958,50,1.386,53,1.839,58,1.712,60,0.958,66,2.143,68,0.678,69,0.734,72,1.282,74,1.027,78,1.501,87,0.73,95,1.481,105,1.169,109,0.867,111,1.661,120,1.122,132,1.721,155,1.311,166,1.897,183,1.169,207,1.962,214,1.659,247,1.296,260,1.803,287,0.626,289,1.839,291,2.366,360,0.948,362,1.839,365,1.509,374,2.742,384,4.498,386,2.933,387,3.412,388,1.968,393,1.296,402,2.064,407,2.064,408,2.561,411,1.296,413,3.361,447,2.613,482,1.485,509,1.839,531,2.064,532,2.933,594,1.381,596,3.142,607,1.485,615,1.296,619,1.485,620,4.667,621,5.082,622,4.667,623,3.518,624,3.518,625,4.012,626,4.012,627,3.361,628,4.012,629,4.012,630,3.518,631,3.518,632,2.823,633,2.823,634,2.574,635,2.823,636,2.823,637,4.895,638,2.823,639,2.064,640,1.773,641,1.773,642,1.773,643,1.773,644,1.773,645,2.823,646,3.819,647,2.823,648,2.823,649,2.064,650,1.773,651,1.773,652,2.613,653,1.773,654,1.773,655,1.773,656,4.895,657,4.667,658,1.773,659,4.012,660,4.012,661,2.064,662,2.823,663,2.823,664,2.823,665,1.773,666,4.381,667,3.518,668,1.773,669,2.823,670,2.823,671,2.823,672,2.948,673,2.823,674,2.823,675,2.823,676,1.773,677,3.671,678,1.485,679,1.485,680,1.773,681,1.773,682,1.773,683,1.485,684,4.381,685,1.773,686,1.773,687,2.823,688,1.773,689,1.773,690,3.518,691,3.518,692,1.773,693,1.773,694,1.773,695,2.823,696,2.948,697,1.773,698,3.518,699,1.773,700,2.823,701,3.361,702,2.823,703,1.773,704,2.823,705,1.773,706,1.773,707,1.773,708,1.773,709,1.042,710,1.773,711,1.773,712,1.773,713,1.773,714,1.773,715,1.773,716,1.773,717,1.773,718,1.773,719,1.773,720,1.773,721,1.773,722,1.773,723,1.485,724,1.773,725,1.773,726,1.773,727,1.773,728,1.485,729,2.823,730,1.773,731,2.823,732,2.823,733,1.773,734,1.485,735,1.773,736,1.773,737,1.773,738,3.518,739,1.773,740,3.518,741,1.773,742,1.773,743,1.773,744,1.773]],["title/interfaces/TcsModuleInfos.html",[0,0.717,634,1.914]],["body/interfaces/TcsModuleInfos.html",[0,0.993,2,1.869,3,0.454,4,0.399,5,0.346,7,0.294,8,0.619,12,1.232,13,0.479,14,0.03,19,0.021,20,0.025,21,0.021,44,1.459,634,3.212,646,3.98,652,3.98,678,5.121,679,5.121,745,3.782,746,5.121,747,5.881]],["title/classes/TcsModuleManager.html",[22,0.014,377,2.122]],["body/classes/TcsModuleManager.html",[3,0.33,4,0.29,5,0.251,7,0.214,8,0.504,12,0.609,13,0.341,14,0.031,19,0.015,20,0.02,21,0.015,22,0.015,24,0.664,31,1.152,37,1.113,40,1.098,42,0.901,43,0.901,44,0.783,50,1.063,58,1.246,60,1.063,72,1.063,74,0.98,78,1.307,87,0.848,95,1.347,105,1.358,155,1.073,195,2.137,225,3.731,232,1.928,235,2.399,259,2.749,260,2.771,272,3.331,287,1.159,288,2.399,310,2.38,312,2.38,366,2.617,377,2.9,388,1.474,405,3.731,408,1.605,447,2.9,486,2.749,509,2.9,552,2.749,585,3.256,594,2.652,596,3.155,598,3.731,612,2.399,627,2.749,639,3.256,672,3.731,696,4.236,748,2.749,749,5.056,750,5.056,751,4.454,752,4.454,753,3.281,754,4.454,755,4.454,756,3.281,757,4.454,758,4.454,759,4.454,760,4.454,761,3.281,762,3.281,763,3.281,764,3.281,765,3.281,766,4.454,767,3.281,768,3.731,769,4.454,770,3.281,771,3.281,772,2.749,773,3.281,774,3.281,775,3.281,776,3.281,777,3.281,778,3.281,779,3.281,780,3.281,781,3.281,782,3.281,783,3.281]],["title/classes/TcsThread.html",[22,0.014,784,2.122]],["body/classes/TcsThread.html",[3,0.203,4,0.179,5,0.155,7,0.132,8,0.355,12,0.988,13,0.427,14,0.031,15,1.744,19,0.009,20,0.014,21,0.009,22,0.009,24,0.41,31,0.81,33,2.26,37,0.445,40,1.182,42,1.042,43,1.042,44,1.114,50,1.356,51,1.532,58,1.488,60,1.229,72,1.27,74,1.133,78,1.491,87,0.81,91,2.11,92,1.938,95,1.493,105,1.297,106,1.081,107,1.189,109,1.874,111,0.838,120,1.381,125,1.081,132,0.989,155,1.024,166,1.929,172,2.202,183,1.297,207,2.67,260,2.624,285,2.04,287,0.715,289,2.81,292,3.608,293,2.624,296,1.479,298,3.431,361,2.29,362,2.04,374,3.124,385,2.29,402,1.479,407,1.479,408,2.67,411,1.479,509,2.04,594,2.414,596,2.601,612,2.29,615,1.479,649,1.479,677,2.624,701,1.695,768,1.695,784,2.04,785,1.695,786,3.832,787,5.042,788,3.832,789,3.832,790,4.935,791,3.211,792,3.132,793,3.132,794,4.314,795,3.132,796,2.624,797,3.132,798,3.132,799,4.754,800,3.615,801,2.023,802,2.023,803,3.132,804,2.023,805,2.023,806,2.023,807,2.023,808,3.132,809,3.608,810,2.023,811,3.132,812,3.132,813,2.624,814,3.132,815,2.023,816,3.132,817,4.314,818,3.132,819,2.023,820,3.132,821,2.023,822,4.935,823,4.314,824,2.624,825,2.023,826,3.832,827,3.132,828,3.132,829,3.132,830,2.023,831,2.023,832,2.023,833,2.023,834,2.023,835,3.132,836,2.023,837,2.023,838,2.023,839,3.132,840,2.023,841,2.04,842,3.132,843,2.023,844,2.023,845,2.023,846,3.832,847,2.023,848,2.023,849,3.132,850,3.132,851,2.023,852,2.023]],["title/interfaces/TcsThreadExec.html",[0,0.717,841,2.122]],["body/interfaces/TcsThreadExec.html",[0,1.068,2,2.009,3,0.488,4,0.429,5,0.372,7,0.317,8,0.646,12,1.126,13,0.437,14,0.03,19,0.022,20,0.026,21,0.022,166,2.143,260,2.813,809,4.576,841,3.718,853,4.066]],["title/classes/TcsThreadsManager.html",[22,0.014,379,2.122]],["body/classes/TcsThreadsManager.html",[3,0.304,4,0.267,5,0.231,7,0.316,8,0.476,12,1.022,13,0.401,14,0.031,15,1.464,19,0.014,20,0.019,21,0.014,22,0.013,24,0.611,31,1.088,33,1.741,37,1.065,40,1.114,42,0.98,43,0.98,44,1.156,50,1.25,60,1.156,72,1.314,74,1.211,78,1.252,91,2.057,92,1.89,95,1.464,109,2.057,120,1.354,161,2.739,166,1.945,172,1.741,183,1.741,195,3.152,207,2.057,260,2.561,287,1.067,289,3.712,292,4.024,310,2.248,312,2.248,361,4.166,366,2.471,379,2.739,388,1.89,408,2.057,447,2.739,469,3.524,594,2.787,596,3,784,2.739,787,3.524,796,3.524,799,4.485,800,3.524,809,4.024,813,3.524,824,3.524,854,2.53,855,4.84,856,4.206,857,4.206,858,4.206,859,4.206,860,3.019,861,3.019,862,4.206,863,4.206,864,3.019,865,5.235,866,3.019,867,3.019,868,3.019,869,3.019,870,3.019,871,3.019,872,3.019,873,3.019,874,4.206,875,3.019,876,5.235,877,3.019,878,4.206,879,3.019,880,3.019]],["title/contributing.html",[709,1.603,881,1.994,882,1.994]],["body/contributing.html",[5,0.318,14,0.028,19,0.019,20,0.024,21,0.019,33,1.722,58,1.163,59,2.223,68,1.59,164,3.868,365,2.778,683,3.484,882,3.04,883,5.198,884,3.484,885,4.159,886,4.355,887,3.484,888,5.198,889,4.559,890,5.67,891,5.67,892,4.159,893,5.67,894,4.751,895,4.159,896,4.159,897,4.159,898,3.04,899,4.159,900,4.159,901,4.159,902,4.159,903,3.484,904,5.198,905,5.198,906,3.04,907,4.159,908,4.159,909,4.159,910,4.159,911,4.159,912,4.159,913,5.198,914,4.159,915,3.484,916,4.977,917,5.198,918,4.159,919,4.159,920,4.159,921,4.159,922,4.159,923,4.159,924,4.159,925,4.159,926,3.484,927,3.484,928,5.198,929,4.159,930,4.159,931,4.159,932,3.484,933,3.484,934,3.484,935,4.159,936,3.484,937,4.159,938,4.159,939,3.484,940,3.484,941,3.484,942,3.484]],["title/coverage.html",[898,3.24]],["body/coverage.html",[0,1.335,1,2.109,5,0.248,6,3.227,13,0.248,14,0.031,16,1.903,19,0.015,20,0.02,21,0.015,22,0.029,23,1.455,25,3.27,76,1.903,105,2.721,113,1.903,120,0.906,156,2.109,157,2.714,159,1.341,166,1.994,177,1.731,179,2.109,218,2.109,219,2.714,285,2.109,286,2.714,301,2.109,302,2.714,342,2.109,343,3.227,344,1.903,353,2.109,354,2.714,365,1.731,368,2.109,370,2.109,372,2.109,375,2.109,377,2.109,379,2.109,418,2.714,439,2.109,440,2.714,463,2.714,498,2.714,570,2.714,594,1.584,619,2.714,634,1.903,745,2.714,748,2.714,784,2.109,785,2.714,841,2.109,853,2.714,854,2.714,889,2.368,898,2.368,943,3.239,944,3.239,945,2.714,946,6.066,947,2.714,948,6.371,949,2.714,950,2.714,951,5.022,952,3.239,953,3.239,954,3.239,955,3.239,956,3.239,957,4.414,958,4.414,959,3.239,960,3.239,961,4.414,962,4.414,963,3.239,964,3.239,965,3.239,966,4.414,967,4.414,968,5.022,969,3.239,970,3.239,971,4.414,972,3.239,973,3.239,974,3.239,975,3.239,976,3.239,977,3.239,978,4.728,979,2.714,980,2.714,981,2.714,982,2.714,983,3.698,984,2.714,985,2.714,986,2.714,987,2.714,988,3.698,989,2.714,990,2.714,991,2.714,992,2.714,993,2.714,994,3.239,995,3.239,996,2.714,997,3.239,998,3.239,999,3.239]],["title/interfaces/database.html",[0,0.717,159,1.349]],["body/interfaces/database.html",[0,0.609,2,1.145,3,0.278,4,0.244,5,0.212,7,0.18,12,1.169,13,0.437,14,0.031,19,0.013,20,0.018,21,0.013,23,1.776,29,3.444,30,3.607,31,1.022,39,3.366,40,1.078,42,1.078,43,1.154,44,1.271,46,1.957,50,1.271,51,2.709,58,1.55,60,1.271,66,1.933,72,1.455,87,1.302,102,3.279,120,1.106,159,2.293,161,3.798,162,2.89,163,4.263,164,3.866,172,2.493,173,4.403,174,4.01,175,2.89,176,4.403,177,2.466,179,4.235,183,2.084,191,2.89,193,3.68,214,2.323,228,3.312,231,2.89,232,2.323,238,3.312,241,2.317,388,1.776,993,2.317,1000,2.765,1001,6.023,1002,2.765,1003,3.953,1004,2.765,1005,3.953,1006,2.765,1007,2.765,1008,3.953]],["title/dependencies.html",[652,2.549,1009,2.728]],["body/dependencies.html",[14,0.029,19,0.024,20,0.027,21,0.024,199,4.317,652,3.355,1010,5.153,1011,5.153,1012,5.153]],["title/miscellaneous/functions.html",[1013,1.776,1014,3.28]],["body/miscellaneous/functions.html",[7,0.301,14,0.03,19,0.021,20,0.025,21,0.021,42,1.274,43,1.274,44,1.503,260,2.07,596,2.902,983,3.861,984,4.638,985,4.638,986,3.861,987,4.638,988,3.861,989,4.638,990,4.638,1013,3.001,1014,3.861,1015,5.535,1016,5.535,1017,4.608,1018,4.608,1019,4.608,1020,4.608,1021,5.535,1022,4.608,1023,4.608,1024,4.608]],["title/index.html",[7,0.178,709,1.603,881,1.994]],["body/index.html",[4,0.336,14,0.028,19,0.017,20,0.022,21,0.017,33,2.033,120,1.064,159,1.575,183,1.575,231,2.781,272,2.235,288,2.781,315,2.235,360,2.907,365,3.359,366,3.196,531,2.781,575,3.187,585,3.59,596,2.402,597,2.781,639,2.781,646,3.199,661,3.976,709,2.235,723,4.558,734,4.558,746,4.115,882,2.781,884,4.558,886,3.187,887,3.187,894,3.187,903,4.115,906,2.781,915,4.816,916,4.816,926,3.187,927,3.187,932,3.187,933,3.187,934,3.187,936,3.187,942,4.115,1025,3.804,1026,3.804,1027,5.44,1028,3.804,1029,3.804,1030,4.912,1031,3.804,1032,3.804,1033,3.187,1034,3.804,1035,3.804,1036,3.804,1037,3.804,1038,3.804,1039,3.804,1040,3.804,1041,3.804,1042,3.804,1043,3.804,1044,3.804,1045,4.912,1046,3.804,1047,4.912,1048,3.804,1049,3.804,1050,5.749,1051,3.804,1052,3.804,1053,4.912,1054,3.804,1055,3.804,1056,3.804,1057,4.912,1058,3.804,1059,3.804,1060,3.804,1061,3.804,1062,3.804,1063,3.804,1064,3.804,1065,3.804,1066,3.804,1067,3.804,1068,3.804,1069,3.804,1070,3.804,1071,3.804,1072,3.804,1073,3.804,1074,3.804,1075,3.804,1076,3.804,1077,3.804,1078,3.804,1079,3.804,1080,3.804,1081,3.804,1082,3.804,1083,3.804]],["title/license.html",[709,1.603,881,1.994,1084,2.285]],["body/license.html",[14,0.024,19,0.019,20,0.024,21,0.019,318,2.754,511,3.543,527,3.543,889,3.091,906,3.84,939,3.543,940,3.543,941,3.543,1033,3.543,1084,3.543,1085,4.229,1086,5.713,1087,4.229,1088,4.229,1089,4.229,1090,5.253,1091,4.229,1092,4.229,1093,4.229,1094,4.229,1095,4.229,1096,4.229,1097,5.253,1098,6.471,1099,4.229,1100,4.229,1101,5.713,1102,4.229,1103,5.253,1104,4.229,1105,4.229,1106,4.229,1107,4.229,1108,4.229,1109,4.229,1110,4.229,1111,4.229,1112,5.253,1113,4.229,1114,4.229,1115,4.229,1116,4.229,1117,4.229,1118,4.229,1119,5.253,1120,5.253,1121,4.229,1122,4.229,1123,4.229,1124,4.229,1125,4.229,1126,4.229,1127,4.229,1128,4.229,1129,4.229,1130,4.229,1131,4.229,1132,4.229,1133,4.229,1134,4.229,1135,4.229,1136,4.229,1137,4.229,1138,4.229,1139,4.229,1140,4.229,1141,4.229,1142,4.229,1143,4.229,1144,4.229,1145,4.229,1146,4.229,1147,4.229]],["title/modules.html",[360,2.369]],["body/modules.html",[14,0.027,19,0.024,20,0.027,21,0.024,360,2.797]],["title/overview.html",[1148,3.713]],["body/overview.html",[2,2.144,14,0.027,19,0.024,20,0.027,21,0.024,24,1.048,728,4.339,1148,4.339,1149,5.179]],["title/interfaces/sqlColumn.html",[0,0.717,177,1.741]],["body/interfaces/sqlColumn.html",[0,0.955,2,1.796,3,0.436,4,0.383,5,0.332,7,0.283,8,0.604,12,1.12,13,0.483,14,0.031,19,0.02,20,0.024,21,0.02,177,2.852,185,2.122,268,5.052,346,3.172,649,3.901,996,3.635,1150,6.03,1151,4.339,1152,4.339,1153,4.339,1154,4.339,1155,4.339,1156,4.339,1157,4.339,1158,4.339,1159,4.339,1160,4.339,1161,4.339,1162,4.339,1163,4.339,1164,4.339,1165,4.339,1166,4.339,1167,4.339,1168,5.336,1169,4.339,1170,4.339,1171,4.339,1172,5.336,1173,5.336]],["title/miscellaneous/variables.html",[1013,1.776,1174,3.28]],["body/miscellaneous/variables.html",[7,0.232,13,0.458,14,0.031,19,0.016,20,0.021,21,0.016,33,1.472,46,1.66,58,0.994,63,2.315,74,1.034,87,1.578,111,2.319,155,1.995,166,1.979,207,2.926,214,2.088,247,2.598,249,2.978,296,2.598,298,2.088,353,2.315,359,3.435,360,1.9,362,3.428,365,3.113,385,3.435,386,3.435,387,3.848,431,4.692,532,2.598,597,2.598,634,2.088,646,2.315,661,2.598,772,3.937,791,2.978,799,2.598,945,2.978,947,3.937,949,2.978,950,3.937,978,2.978,979,3.937,980,3.937,981,3.937,982,3.937,991,2.978,992,3.937,1013,2.315,1174,2.978,1175,3.554,1176,3.554,1177,5.824,1178,3.554,1179,3.554,1180,3.554,1181,3.554,1182,4.699,1183,3.554,1184,3.554,1185,3.554,1186,3.554,1187,3.554,1188,3.554,1189,3.554,1190,4.699,1191,3.554,1192,3.554,1193,3.554,1194,3.554,1195,3.554,1196,3.554,1197,3.554,1198,3.554,1199,3.554,1200,3.554,1201,3.554,1202,4.699,1203,4.699,1204,3.554,1205,3.554,1206,3.554]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":105,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["0/1",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":968,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":967,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":965,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":109,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsEventManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["10",{"_index":1196,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":897,"title":{},"body":{"contributing.html":{}}}],["17",{"_index":1149,"title":{},"body":{"overview.html":{}}}],["2",{"_index":742,"title":{},"body":{"classes/TcsModule.html":{}}}],["2.2.5",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":253,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["2021",{"_index":1088,"title":{},"body":{"license.html":{}}}],["27707",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1171,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["3.6.6",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["3307",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":962,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["443",{"_index":716,"title":{},"body":{"classes/TcsModule.html":{}}}],["5/14",{"_index":964,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":728,"title":{},"body":{"classes/TcsModule.html":{},"overview.html":{}}}],["8/11",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":994,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":106,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{}}}],["_source",{"_index":333,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["above",{"_index":1118,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":32,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["action",{"_index":511,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["action's",{"_index":534,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["action.actionname",{"_index":547,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata",{"_index":553,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata.inputcontroller",{"_index":556,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actioninput",{"_index":1,"title":{"interfaces/ActionInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["actioninputs",{"_index":499,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actionname",{"_index":9,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["actions",{"_index":911,"title":{},"body":{"contributing.html":{}}}],["activated",{"_index":1203,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actually",{"_index":816,"title":{},"body":{"classes/TcsThread.html":{}}}],["add",{"_index":272,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["addconfig",{"_index":571,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addconfig(langtoappend",{"_index":576,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addeventhandler",{"_index":464,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["addmoduletogame",{"_index":751,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["addmoduletogame(newmodule",{"_index":755,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["address",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":552,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModuleManager.html":{}}}],["alreadycreated",{"_index":545,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["alter",{"_index":271,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["amount",{"_index":1198,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1110,"title":{},"body":{"license.html":{}}}],["appear",{"_index":914,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":811,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread",{"_index":792,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread(module",{"_index":808,"title":{},"body":{"classes/TcsThread.html":{}}}],["applyeventhandler",{"_index":442,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["applyeventhandler(data",{"_index":454,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["args",{"_index":323,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arguments",{"_index":324,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arising",{"_index":1145,"title":{},"body":{"license.html":{}}}],["array",{"_index":509,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["ask",{"_index":1041,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1099,"title":{},"body":{"license.html":{}}}],["async",{"_index":101,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["asyncquery",{"_index":220,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["asyncquery(sql",{"_index":223,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["authors",{"_index":1136,"title":{},"body":{"license.html":{}}}],["auto_increment",{"_index":262,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["automatically",{"_index":922,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":107,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{}}}],["basic",{"_index":1045,"title":{},"body":{"index.html":{}}}],["before",{"_index":888,"title":{},"body":{"contributing.html":{}}}],["benchmark",{"_index":293,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{}}}],["benchmark.stop",{"_index":839,"title":{},"body":{"classes/TcsThread.html":{}}}],["between",{"_index":91,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["binary",{"_index":1164,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["binary(255",{"_index":1165,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["bindaction",{"_index":500,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["boolean",{"_index":374,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["brief",{"_index":513,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["buf",{"_index":724,"title":{},"body":{"classes/TcsModule.html":{}}}],["buffer.from(d",{"_index":725,"title":{},"body":{"classes/TcsModule.html":{}}}],["build",{"_index":913,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":1087,"title":{},"body":{"license.html":{}}}],["call",{"_index":319,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["callbacks",{"_index":311,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{}}}],["callbacks:serverevent",{"_index":332,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["called",{"_index":447,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["can't",{"_index":769,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["case",{"_index":524,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["catch",{"_index":407,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["category/name",{"_index":671,"title":{},"body":{"classes/TcsModule.html":{}}}],["cb",{"_index":320,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["change",{"_index":541,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["changes",{"_index":925,"title":{},"body":{"contributing.html":{}}}],["char",{"_index":1152,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["char(255",{"_index":1153,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["charge",{"_index":1094,"title":{},"body":{"license.html":{}}}],["check",{"_index":532,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["checkversion",{"_index":625,"title":{},"body":{"classes/TcsModule.html":{}}}],["citizenfx/client",{"_index":933,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["citizenfx/server",{"_index":934,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["claim",{"_index":1139,"title":{},"body":{"license.html":{}}}],["class",{"_index":22,"title":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["classes",{"_index":24,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"overview.html":{}}}],["cleartick(this.tick",{"_index":850,"title":{},"body":{"classes/TcsThread.html":{}}}],["clicking",{"_index":1062,"title":{},"body":{"index.html":{}}}],["client",{"_index":160,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["clientcallback",{"_index":304,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["clone",{"_index":1051,"title":{},"body":{"index.html":{}}}],["code",{"_index":894,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["collection",{"_index":116,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["collection(collection",{"_index":212,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["collection(this.tables[0",{"_index":136,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["collection.length",{"_index":118,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["color",{"_index":673,"title":{},"body":{"classes/TcsModule.html":{}}}],["column",{"_index":268,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/sqlColumn.html":{}}}],["column.column",{"_index":269,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["column.type",{"_index":270,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["columns",{"_index":176,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["columns.map",{"_index":267,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["come",{"_index":865,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["comes",{"_index":812,"title":{},"body":{"classes/TcsThread.html":{}}}],["command",{"_index":942,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commands",{"_index":1075,"title":{},"body":{"index.html":{}}}],["compare",{"_index":656,"title":{},"body":{"classes/TcsModule.html":{}}}],["compared",{"_index":660,"title":{},"body":{"classes/TcsModule.html":{}}}],["comparenumber",{"_index":740,"title":{},"body":{"classes/TcsModule.html":{}}}],["compile",{"_index":910,"title":{},"body":{"contributing.html":{}}}],["compiling",{"_index":909,"title":{},"body":{"contributing.html":{}}}],["compodoc",{"_index":920,"title":{},"body":{"contributing.html":{}}}],["compodoc/compodoc",{"_index":930,"title":{},"body":{"contributing.html":{}}}],["con",{"_index":79,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["concatened",{"_index":670,"title":{},"body":{"classes/TcsModule.html":{}}}],["concatinputs",{"_index":557,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["concatinputs[key",{"_index":561,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["conditions",{"_index":1117,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1038,"title":{},"body":{"index.html":{}}}],["config",{"_index":599,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configuration",{"_index":586,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configured",{"_index":582,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["connected",{"_index":419,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["connection",{"_index":1146,"title":{},"body":{"license.html":{}}}],["connectionlimit",{"_index":252,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["connectionparameters",{"_index":245,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["connectionurl",{"_index":198,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["connecttodb",{"_index":254,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["console",{"_index":387,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["console.error(err.message",{"_index":209,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["console.error(error",{"_index":736,"title":{},"body":{"classes/TcsModule.html":{}}}],["console.log",{"_index":393,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{}}}],["console.log(`${consolecolors.red}[error",{"_index":415,"title":{},"body":{"classes/TcsCore.html":{}}}],["console.log(consolecolors.red",{"_index":704,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors",{"_index":667,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue",{"_index":744,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue}[debug",{"_index":412,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.blue}[tcs",{"_index":394,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.green",{"_index":700,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.green}ready",{"_index":409,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.red",{"_index":696,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.red}[tcsinputmanager",{"_index":569,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["consolecolors.reset",{"_index":413,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["consolecolors.yellow",{"_index":672,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${newmodule.getid",{"_index":780,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${thread.id}${consolecolors.red",{"_index":837,"title":{},"body":{"classes/TcsThread.html":{}}}],["consolecolors.yellow}[warning",{"_index":417,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.yellow}initializing",{"_index":395,"title":{},"body":{"classes/TcsCore.html":{}}}],["const",{"_index":95,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor(con",{"_index":80,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["constructor(db",{"_index":115,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["constructor(eventtype",{"_index":444,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["constructor(moduleinfos",{"_index":633,"title":{},"body":{"classes/TcsModule.html":{}}}],["constructor(onconnectiondone",{"_index":165,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["constructor(tables",{"_index":38,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["constructor(timer",{"_index":797,"title":{},"body":{"classes/TcsThread.html":{}}}],["contain",{"_index":1074,"title":{},"body":{"index.html":{}}}],["contained",{"_index":817,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid",{"_index":793,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid(id",{"_index":814,"title":{},"body":{"classes/TcsThread.html":{}}}],["contract",{"_index":1142,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1034,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":882,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":883,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":528,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controller's",{"_index":517,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllerkey",{"_index":516,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllers",{"_index":533,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["converts",{"_index":83,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["copies",{"_index":1112,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1097,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1086,"title":{},"body":{"license.html":{}}}],["core",{"_index":366,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["correctly",{"_index":699,"title":{},"body":{"classes/TcsModule.html":{}}}],["corresponding",{"_index":187,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["count",{"_index":57,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["coverage",{"_index":898,"title":{"coverage.html":{}},"body":{"contributing.html":{},"coverage.html":{}}}],["create",{"_index":183,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"index.html":{}}}],["created",{"_index":813,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["creates",{"_index":469,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThreadsManager.html":{}}}],["createthread",{"_index":856,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["createthread(module",{"_index":859,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["current",{"_index":58,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"contributing.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["currentdb",{"_index":420,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["currently",{"_index":536,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["currentnumber",{"_index":738,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentrequest",{"_index":127,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentrequest.limit(this.limitcount",{"_index":129,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentrequest.sort(this.orderbylist",{"_index":130,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentrequest.toarray((err",{"_index":131,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentstep",{"_index":657,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentthread",{"_index":867,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currentthread.appendthread(module",{"_index":873,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currinput",{"_index":560,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["currinput.inputkey",{"_index":568,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["d",{"_index":723,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["damages",{"_index":1140,"title":{},"body":{"license.html":{}}}],["data",{"_index":185,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"interfaces/sqlColumn.html":{}}}],["database",{"_index":159,"title":{"interfaces/database.html":{}},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsInputManager.html":{},"coverage.html":{},"interfaces/database.html":{},"index.html":{}}}],["database_config",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_config.address",{"_index":202,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["database_config.databasename",{"_index":250,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["database_config.nosql",{"_index":434,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["database_config.port",{"_index":203,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["database_config.username",{"_index":200,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["databasename",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":649,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/sqlColumn.html":{}}}],["datetime",{"_index":1172,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["db",{"_index":114,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["deal",{"_index":1100,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1147,"title":{},"body":{"license.html":{}}}],["deaththreadchecker",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deaththreadchecker(module",{"_index":1018,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debug",{"_index":362,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":381,"title":{},"body":{"classes/TcsCore.html":{}}}],["debugexec",{"_index":786,"title":{},"body":{"classes/TcsThread.html":{}}}],["debugmode",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decimal",{"_index":1169,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["decimal(10",{"_index":1170,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["default",{"_index":155,"title":{},"body":{"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":40,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["delay",{"_index":787,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delete",{"_index":161,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["delete(collection",{"_index":170,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["delete(table",{"_index":228,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["deleted",{"_index":823,"title":{},"body":{"classes/TcsThread.html":{}}}],["deletes",{"_index":862,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["demo",{"_index":1083,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":652,"title":{"dependencies.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"dependencies.html":{}}}],["dependency",{"_index":770,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["depends",{"_index":683,"title":{},"body":{"classes/TcsModule.html":{},"contributing.html":{}}}],["description",{"_index":60,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["designed",{"_index":122,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["destroymethod",{"_index":620,"title":{},"body":{"classes/TcsModule.html":{}}}],["destroymodule",{"_index":626,"title":{},"body":{"classes/TcsModule.html":{}}}],["develop",{"_index":1073,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1071,"title":{},"body":{"index.html":{}}}],["developped",{"_index":1029,"title":{},"body":{"index.html":{}}}],["dict",{"_index":613,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["dictionnary",{"_index":579,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["difference",{"_index":297,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["directly",{"_index":1040,"title":{},"body":{"index.html":{}}}],["discution",{"_index":1042,"title":{},"body":{"index.html":{}}}],["display",{"_index":383,"title":{},"body":{"classes/TcsCore.html":{}}}],["distribute",{"_index":1108,"title":{},"body":{"license.html":{}}}],["doc",{"_index":900,"title":{},"body":{"contributing.html":{}}}],["docdependencies",{"_index":931,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":892,"title":{},"body":{"contributing.html":{}}}],["document",{"_index":191,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["documentation",{"_index":889,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["documents",{"_index":173,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["doesn't",{"_index":235,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["don't",{"_index":231,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{},"index.html":{}}}],["dot",{"_index":664,"title":{},"body":{"classes/TcsModule.html":{}}}],["down",{"_index":695,"title":{},"body":{"classes/TcsModule.html":{}}}],["download",{"_index":734,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["drag",{"_index":1066,"title":{},"body":{"index.html":{}}}],["drop",{"_index":1067,"title":{},"body":{"index.html":{}}}],["due",{"_index":924,"title":{},"body":{"contributing.html":{}}}],["during",{"_index":123,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["e",{"_index":701,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["each",{"_index":92,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["emitnet('callbacks:clientevent",{"_index":337,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('callbacks:serverevent",{"_index":339,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('tcs:handleevent",{"_index":493,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["en",{"_index":600,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["encodeuricomponent(database_config.password",{"_index":201,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["encountered",{"_index":836,"title":{},"body":{"classes/TcsThread.html":{}}}],["ensure",{"_index":1070,"title":{},"body":{"index.html":{}}}],["ensurecolumns",{"_index":162,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["ensurecolumns(table",{"_index":175,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["ensuretables",{"_index":221,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["ensuretables(table",{"_index":233,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["enum",{"_index":346,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/sqlColumn.html":{}}}],["environment",{"_index":901,"title":{},"body":{"contributing.html":{}}}],["equation",{"_index":85,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["err",{"_index":133,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["error",{"_index":132,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["error('no",{"_index":121,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["error(error",{"_index":389,"title":{},"body":{"classes/TcsCore.html":{}}}],["errors",{"_index":1201,"title":{},"body":{"miscellaneous/variables.html":{}}}],["especially",{"_index":1056,"title":{},"body":{"index.html":{}}}],["even",{"_index":1202,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":318,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"license.html":{}}}],["event.eventtype",{"_index":490,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.target",{"_index":480,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.targetid",{"_index":494,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["eventmanager",{"_index":356,"title":{},"body":{"classes/TcsCore.html":{}}}],["eventname",{"_index":317,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["events",{"_index":449,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["eventsmodulesinfos",{"_index":992,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventtype",{"_index":349,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["example",{"_index":287,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exec",{"_index":809,"title":{},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["execs",{"_index":788,"title":{},"body":{"classes/TcsThread.html":{}}}],["execute",{"_index":33,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["executed",{"_index":451,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["executeone",{"_index":34,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["executions",{"_index":800,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exist",{"_index":232,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"interfaces/database.html":{}}}],["exists",{"_index":259,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsModuleManager.html":{}}}],["expectations",{"_index":896,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1055,"title":{},"body":{"index.html":{}}}],["export",{"_index":1078,"title":{},"body":{"index.html":{}}}],["exports('tcseventtarget",{"_index":352,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["express",{"_index":1127,"title":{},"body":{"license.html":{}}}],["extends",{"_index":77,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["extra",{"_index":938,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":408,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["fetch",{"_index":1005,"title":{},"body":{"interfaces/database.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["files",{"_index":940,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill",{"_index":590,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filled",{"_index":592,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filter((listener",{"_index":488,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["filter((mod",{"_index":765,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["filter((module",{"_index":761,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["find",{"_index":585,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["findmodulebyid",{"_index":749,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["findone(this.query",{"_index":137,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["first",{"_index":1057,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1132,"title":{},"body":{"license.html":{}}}],["fivem",{"_index":1027,"title":{},"body":{"index.html":{}}}],["fivemtcs",{"_index":1089,"title":{},"body":{"license.html":{}}}],["fivemtcs/types",{"_index":1077,"title":{},"body":{"index.html":{}}}],["fnc",{"_index":431,"title":{},"body":{"classes/TcsDatabaseManager.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":915,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["follow",{"_index":926,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["following",{"_index":941,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["foreach((listener",{"_index":491,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["foreach((module",{"_index":763,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["forget",{"_index":1037,"title":{},"body":{"index.html":{}}}],["format",{"_index":905,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":195,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["foundmodule",{"_index":766,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["foundmodule.modulelaunched",{"_index":774,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["fr",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":1028,"title":{},"body":{"index.html":{}}}],["free",{"_index":1093,"title":{},"body":{"license.html":{}}}],["fs",{"_index":937,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":166,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1014,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1115,"title":{},"body":{"license.html":{}}}],["g",{"_index":929,"title":{},"body":{"contributing.html":{}}}],["game",{"_index":757,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["gamemodules",{"_index":750,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["get(collection",{"_index":180,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["get(key",{"_index":583,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["get(table",{"_index":236,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["get(tables",{"_index":1003,"title":{},"body":{"interfaces/database.html":{}}}],["getandreplace",{"_index":572,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace(key",{"_index":587,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getcurrentresourcename",{"_index":603,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getdependencies",{"_index":627,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["geteventtype",{"_index":443,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["getgametimer",{"_index":300,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["getid",{"_index":628,"title":{},"body":{"classes/TcsModule.html":{}}}],["getinput",{"_index":501,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["getpersonnalinputs",{"_index":502,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["getplayerbyentityid",{"_index":985,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getplayerbyentityid(id",{"_index":1019,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":184,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["getthreadtimer",{"_index":794,"title":{},"body":{"classes/TcsThread.html":{}}}],["getting",{"_index":881,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":746,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"index.html":{}}}],["github",{"_index":645,"title":{},"body":{"classes/TcsModule.html":{}}}],["give",{"_index":65,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["go",{"_index":410,"title":{},"body":{"classes/TcsCore.html":{}}}],["going",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1092,"title":{},"body":{"license.html":{}}}],["guide",{"_index":1036,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":885,"title":{},"body":{"contributing.html":{}}}],["handler",{"_index":441,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["handles",{"_index":470,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["here",{"_index":884,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["hereby",{"_index":1091,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1137,"title":{},"body":{"license.html":{}}}],["host",{"_index":246,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["hostname",{"_index":714,"title":{},"body":{"classes/TcsModule.html":{}}}],["https",{"_index":711,"title":{},"body":{"classes/TcsModule.html":{}}}],["https.request(options",{"_index":720,"title":{},"body":{"classes/TcsModule.html":{}}}],["https://github.com/fivemtcs/core.git",{"_index":1052,"title":{},"body":{"index.html":{}}}],["id",{"_index":260,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":682,"title":{},"body":{"classes/TcsModule.html":{}}}],["ignore",{"_index":69,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["implements",{"_index":158,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["implied",{"_index":1128,"title":{},"body":{"license.html":{}}}],["included",{"_index":1121,"title":{},"body":{"license.html":{}}}],["including",{"_index":1103,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":471,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["informations",{"_index":597,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":139,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["init",{"_index":1076,"title":{},"body":{"index.html":{}}}],["initialization",{"_index":525,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["initialize",{"_index":310,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["initmodule",{"_index":629,"title":{},"body":{"classes/TcsModule.html":{}}}],["input",{"_index":512,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["input.inputkey",{"_index":565,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["input.inputname",{"_index":567,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["inputalreadyused",{"_index":563,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["inputcontroller",{"_index":10,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputkey",{"_index":18,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputkeyboard",{"_index":11,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputname",{"_index":17,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputs",{"_index":357,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{}}}],["insert",{"_index":163,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["insert(collection",{"_index":188,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["insert(table",{"_index":238,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["insertone(newdocument",{"_index":217,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["inside",{"_index":1080,"title":{},"body":{"index.html":{}}}],["install",{"_index":928,"title":{},"body":{"contributing.html":{}}}],["installed",{"_index":773,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["instance",{"_index":636,"title":{},"body":{"classes/TcsModule.html":{}}}],["int",{"_index":1168,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["int(11",{"_index":261,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"interfaces/database.html":{},"overview.html":{},"interfaces/sqlColumn.html":{}}}],["iscontroljustpressed(0",{"_index":555,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isinputdisabled(2",{"_index":554,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isjustpressed",{"_index":503,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isn't",{"_index":772,"title":{},"body":{"classes/TcsModuleManager.html":{},"miscellaneous/variables.html":{}}}],["ispressed",{"_index":504,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isserversided",{"_index":358,"title":{},"body":{"classes/TcsCore.html":{}}}],["issue",{"_index":1061,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1053,"title":{},"body":{"index.html":{}}}],["isthreadfull",{"_index":789,"title":{},"body":{"classes/TcsThread.html":{}}}],["isversionsuperior",{"_index":630,"title":{},"body":{"classes/TcsModule.html":{}}}],["isversionsuperior(current",{"_index":655,"title":{},"body":{"classes/TcsModule.html":{}}}],["isweaponinarray",{"_index":989,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isweaponinarray(weaponarray",{"_index":1020,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":225,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsModuleManager.html":{}}}],["json",{"_index":726,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.parse",{"_index":601,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["json.parse(buf.tostring('utf",{"_index":727,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.version",{"_index":729,"title":{},"body":{"classes/TcsModule.html":{}}}],["key",{"_index":86,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{}}}],["keyboard",{"_index":550,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboard's",{"_index":515,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboardkey",{"_index":514,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keys",{"_index":278,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{}}}],["keys.join",{"_index":283,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["keys.push(key",{"_index":280,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["kind",{"_index":1126,"title":{},"body":{"license.html":{}}}],["know",{"_index":647,"title":{},"body":{"classes/TcsModule.html":{}}}],["lang",{"_index":359,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["langtoappend",{"_index":580,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["language",{"_index":575,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{}}}],["last",{"_index":531,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"index.html":{}}}],["latest",{"_index":661,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":638,"title":{},"body":{"classes/TcsModule.html":{}}}],["launchmethod",{"_index":621,"title":{},"body":{"classes/TcsModule.html":{}}}],["learn",{"_index":1046,"title":{},"body":{"index.html":{}}}],["level",{"_index":895,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":1141,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1138,"title":{},"body":{"license.html":{}}}],["license",{"_index":1084,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":35,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["limit(count",{"_index":54,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["limitation",{"_index":1104,"title":{},"body":{"license.html":{}}}],["limitcount",{"_index":27,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["limited",{"_index":1129,"title":{},"body":{"license.html":{}}}],["list",{"_index":66,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/database.html":{}}}],["listen",{"_index":450,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener",{"_index":446,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener.applyeventhandler(event.data",{"_index":492,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listener.geteventtype",{"_index":489,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listeners",{"_index":465,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["load",{"_index":598,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["loaded",{"_index":754,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadmodulelang",{"_index":573,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadmodulelang(module",{"_index":593,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadreadylist",{"_index":422,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["loadresourcefile",{"_index":602,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loads",{"_index":758,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadtcsmoduleinfos",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction.push(fnc",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":348,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["localhost",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longtext",{"_index":1162,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["longtext(4294967295",{"_index":1163,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["looking",{"_index":1082,"title":{},"body":{"index.html":{}}}],["make",{"_index":186,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["makerequest",{"_index":23,"title":{"classes/MakeRequest.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"coverage.html":{},"interfaces/database.html":{}}}],["makerequest:19",{"_index":148,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:2",{"_index":143,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:29",{"_index":149,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:3",{"_index":142,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:38",{"_index":146,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:44",{"_index":147,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:5",{"_index":140,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:7",{"_index":141,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequestmongo",{"_index":113,"title":{"classes/MakeRequestMongo.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"coverage.html":{}}}],["makerequestmongo(this.db",{"_index":211,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["makerequestsql",{"_index":76,"title":{"classes/MakeRequestSQL.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"coverage.html":{}}}],["makerequestsql(this.client",{"_index":274,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["management",{"_index":1049,"title":{},"body":{"index.html":{}}}],["manager",{"_index":312,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["map",{"_index":591,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["mariadb",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["maxexectimeperthread",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":1197,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediumtext",{"_index":1160,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["mediumtext(16777215",{"_index":1161,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["merchantability",{"_index":1131,"title":{},"body":{"license.html":{}}}],["merge",{"_index":939,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["message",{"_index":384,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["messagecolor",{"_index":666,"title":{},"body":{"classes/TcsModule.html":{}}}],["method",{"_index":637,"title":{},"body":{"classes/TcsModule.html":{}}}],["methods",{"_index":31,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["miscellaneous",{"_index":1013,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1085,"title":{},"body":{"license.html":{}}}],["mod",{"_index":771,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mod.getid",{"_index":783,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mode",{"_index":385,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1106,"title":{},"body":{"license.html":{}}}],["module",{"_index":596,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["module.getid",{"_index":612,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["module.initmodule",{"_index":777,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.modulelaunched",{"_index":762,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.shouldlaunch",{"_index":776,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["moduledependencies",{"_index":681,"title":{},"body":{"classes/TcsModule.html":{}}}],["moduleinfos",{"_index":622,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulelaunched",{"_index":623,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulename",{"_index":679,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["modules",{"_index":360,"title":{"modules.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["moduletype",{"_index":678,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["mongo",{"_index":63,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"miscellaneous/variables.html":{}}}],["mongoclient",{"_index":196,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["mongoclient(connectionurl",{"_index":205,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["mongodatabase",{"_index":156,"title":{"classes/MongoDatabase.html":{}},"body":{"classes/MongoDatabase.html":{},"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["mongodb",{"_index":199,"title":{},"body":{"classes/MongoDatabase.html":{},"dependencies.html":{}}}],["more",{"_index":1047,"title":{},"body":{"index.html":{}}}],["ms",{"_index":296,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["mysql",{"_index":243,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["mysql.createpool(connectionparameters",{"_index":256,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["mysql2",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["mysqldatabase",{"_index":218,"title":{"classes/MysqlDatabase.html":{}},"body":{"classes/MysqlDatabase.html":{},"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["n",{"_index":733,"title":{},"body":{"classes/TcsModule.html":{}}}],["n${e",{"_index":838,"title":{},"body":{"classes/TcsThread.html":{}}}],["name",{"_index":43,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":923,"title":{},"body":{"contributing.html":{}}}],["needed",{"_index":893,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":120,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"interfaces/database.html":{},"index.html":{}}}],["newdocument",{"_index":189,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["newdocument[key",{"_index":279,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["newly",{"_index":529,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["newmodule",{"_index":759,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["newvalues",{"_index":193,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["next",{"_index":1068,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1135,"title":{},"body":{"license.html":{}}}],["nosql",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notice",{"_index":1119,"title":{},"body":{"license.html":{}}}],["npm",{"_index":916,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":111,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":15,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["objkey",{"_index":608,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["obtaining",{"_index":1096,"title":{},"body":{"license.html":{}}}],["onconnectiondone",{"_index":168,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["ondatabaseready",{"_index":423,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["ondatabaseready(fnc",{"_index":429,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["ondatabasereadylist",{"_index":421,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["one",{"_index":53,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsModule.html":{}}}],["onnet",{"_index":331,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('callbacks:clientevent",{"_index":328,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('tcs:handleevent",{"_index":479,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["ontcsloaded",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions",{"_index":982,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions.push(fnc",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":1026,"title":{},"body":{"index.html":{}}}],["optional",{"_index":44,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":713,"title":{},"body":{"classes/TcsModule.html":{}}}],["order",{"_index":64,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["orderby",{"_index":36,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["orderby(list",{"_index":61,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["orderbylist",{"_index":28,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["otherwise",{"_index":1144,"title":{},"body":{"license.html":{}}}],["out",{"_index":1033,"title":{},"body":{"index.html":{},"license.html":{}}}],["outcoming",{"_index":472,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["overview",{"_index":1148,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":1009,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1032,"title":{},"body":{"index.html":{}}}],["param",{"_index":72,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{}}}],["parseint(compare.split('.')[currentstep",{"_index":741,"title":{},"body":{"classes/TcsModule.html":{}}}],["parseint(current.split('.')[currentstep",{"_index":739,"title":{},"body":{"classes/TcsModule.html":{}}}],["particular",{"_index":1133,"title":{},"body":{"license.html":{}}}],["password",{"_index":249,"title":{},"body":{"classes/MysqlDatabase.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":717,"title":{},"body":{"classes/TcsModule.html":{}}}],["permission",{"_index":1090,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1113,"title":{},"body":{"license.html":{}}}],["person",{"_index":1095,"title":{},"body":{"license.html":{}}}],["personalinputs",{"_index":505,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["personalized",{"_index":521,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["persons",{"_index":1114,"title":{},"body":{"license.html":{}}}],["place",{"_index":1079,"title":{},"body":{"index.html":{}}}],["player",{"_index":523,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["player's",{"_index":520,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["please",{"_index":886,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["pool",{"_index":255,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["pool.promise",{"_index":257,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["port",{"_index":247,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1123,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1054,"title":{},"body":{"index.html":{}}}],["precompilerender",{"_index":918,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":669,"title":{},"body":{"classes/TcsModule.html":{}}}],["presentation",{"_index":1025,"title":{},"body":{"index.html":{}}}],["pressed",{"_index":530,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["prettier",{"_index":904,"title":{},"body":{"contributing.html":{}}}],["primary",{"_index":263,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["print",{"_index":386,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["printdebug",{"_index":631,"title":{},"body":{"classes/TcsModule.html":{}}}],["printdebug(message",{"_index":665,"title":{},"body":{"classes/TcsModule.html":{}}}],["printed",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":78,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["project",{"_index":932,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":51,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{},"interfaces/database.html":{}}}],["promise((resolve",{"_index":125,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/sqlColumn.html":{}}}],["protected",{"_index":26,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["provided",{"_index":1124,"title":{},"body":{"license.html":{}}}],["public",{"_index":303,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["publish",{"_index":1107,"title":{},"body":{"license.html":{}}}],["pull",{"_index":890,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1134,"title":{},"body":{"license.html":{}}}],["push",{"_index":908,"title":{},"body":{"contributing.html":{}}}],["query",{"_index":29,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["query's",{"_index":227,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["question",{"_index":1039,"title":{},"body":{"index.html":{}}}],["raw.githubusercontent.com",{"_index":715,"title":{},"body":{"classes/TcsModule.html":{}}}],["read",{"_index":887,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reading",{"_index":1035,"title":{},"body":{"index.html":{}}}],["readme",{"_index":899,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":355,"title":{},"body":{"classes/TcsCore.html":{}}}],["ready",{"_index":639,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["record",{"_index":39,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["record[key",{"_index":96,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["recordtosqlstring",{"_index":150,"title":{},"body":{"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["recordtosqlstring(record",{"_index":94,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["recovery",{"_index":519,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerkeymapping(actionname",{"_index":549,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerservercallback",{"_index":305,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["reject",{"_index":126,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["reject(err",{"_index":134,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["release",{"_index":1065,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1031,"title":{},"body":{"index.html":{}}}],["remainingdependenciestostart",{"_index":764,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remainingdependenciestostart.length",{"_index":775,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remove",{"_index":822,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads",{"_index":795,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads(module",{"_index":820,"title":{},"body":{"classes/TcsThread.html":{}}}],["removethread",{"_index":796,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethread(id",{"_index":824,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule",{"_index":857,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule(module",{"_index":863,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["render",{"_index":921,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":588,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replace[objkey",{"_index":610,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replaceto",{"_index":609,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["report",{"_index":1060,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1044,"title":{},"body":{"index.html":{}}}],["req",{"_index":719,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.end",{"_index":737,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.on('error",{"_index":735,"title":{},"body":{"classes/TcsModule.html":{}}}],["request",{"_index":59,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"contributing.html":{}}}],["requestid",{"_index":306,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["requests",{"_index":891,"title":{},"body":{"contributing.html":{}}}],["require('https",{"_index":712,"title":{},"body":{"classes/TcsModule.html":{}}}],["require('mongodb').mongoclient",{"_index":197,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["require('mysql2",{"_index":244,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["res",{"_index":721,"title":{},"body":{"classes/TcsModule.html":{}}}],["res.on('data",{"_index":722,"title":{},"body":{"classes/TcsModule.html":{}}}],["reset",{"_index":539,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["resetinputsdefault",{"_index":506,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["resolve",{"_index":215,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["resolve(result",{"_index":135,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["resolved",{"_index":844,"title":{},"body":{"classes/TcsThread.html":{}}}],["resolving",{"_index":226,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["resource",{"_index":1081,"title":{},"body":{"index.html":{}}}],["resources",{"_index":1030,"title":{},"body":{"index.html":{}}}],["ressource",{"_index":680,"title":{},"body":{"classes/TcsModule.html":{}}}],["restriction",{"_index":1102,"title":{},"body":{"license.html":{}}}],["result",{"_index":19,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["result.join(sep",{"_index":100,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["result.length",{"_index":110,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["result.push(`${key}=${value",{"_index":99,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["result.push(`${key}='${value",{"_index":98,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["result.replace(`{${objkey",{"_index":611,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["result[0",{"_index":112,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":74,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":50,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["rights",{"_index":1105,"title":{},"body":{"license.html":{}}}],["root",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rows",{"_index":1001,"title":{},"body":{"interfaces/database.html":{}}}],["run",{"_index":917,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":781,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["scheduleresourcetick",{"_index":404,"title":{},"body":{"classes/TcsCore.html":{}}}],["scripts",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":818,"title":{},"body":{"classes/TcsThread.html":{}}}],["section",{"_index":1043,"title":{},"body":{"index.html":{}}}],["select",{"_index":102,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"interfaces/database.html":{}}}],["selected",{"_index":1008,"title":{},"body":{"interfaces/database.html":{}}}],["selector",{"_index":181,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["sell",{"_index":1111,"title":{},"body":{"license.html":{}}}],["send",{"_index":457,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["sendevent",{"_index":466,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["sending",{"_index":912,"title":{},"body":{"contributing.html":{}}}],["sep",{"_index":89,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["separator",{"_index":90,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["server",{"_index":315,"title":{},"body":{"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"index.html":{}}}],["server.cfg",{"_index":1069,"title":{},"body":{"index.html":{}}}],["servercallback",{"_index":307,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["set",{"_index":214,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsModule.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["setdestroymodule",{"_index":632,"title":{},"body":{"classes/TcsModule.html":{}}}],["setdestroymodule(destroymethod",{"_index":675,"title":{},"body":{"classes/TcsModule.html":{}}}],["setinput",{"_index":507,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["sets",{"_index":56,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["settick",{"_index":486,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{}}}],["settick(async",{"_index":831,"title":{},"body":{"classes/TcsThread.html":{}}}],["settimeout(resolve",{"_index":845,"title":{},"body":{"classes/TcsThread.html":{}}}],["setup",{"_index":902,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1120,"title":{},"body":{"license.html":{}}}],["shoulddeletethread",{"_index":876,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["shouldlaunch",{"_index":624,"title":{},"body":{"classes/TcsModule.html":{}}}],["showerrorsanycase",{"_index":1200,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showwarningsanycase",{"_index":1204,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutting",{"_index":703,"title":{},"body":{"classes/TcsModule.html":{}}}],["side",{"_index":316,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["simple",{"_index":1064,"title":{},"body":{"index.html":{}}}],["software",{"_index":1098,"title":{},"body":{"license.html":{}}}],["sort",{"_index":67,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"index.html":{},"interfaces/sqlColumn.html":{}}}],["sources",{"_index":1050,"title":{},"body":{"index.html":{}}}],["specified",{"_index":172,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["splitted",{"_index":663,"title":{},"body":{"classes/TcsModule.html":{}}}],["sql",{"_index":84,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["sqlcolumn",{"_index":177,"title":{"interfaces/sqlColumn.html":{}},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["sqlcolumns",{"_index":266,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["sqlcolumns.join",{"_index":273,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["sqltypes",{"_index":1150,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["src/.../cli_death.ts",{"_index":1015,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_vehicle.ts",{"_index":1017,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_weapon.ts",{"_index":1016,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mixed_config.ts",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_main.ts",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_moduleinfos.ts",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../srv_databaseconfig.ts",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/assets/lang/${id}/${language}.json",{"_index":614,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/lang/${tcs_config.lang}.json",{"_index":604,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/mixed_config.ts",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/srv_databaseconfig.ts",{"_index":949,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts",{"_index":286,"title":{},"body":{"classes/TcsBenchmark.html":{},"coverage.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:21",{"_index":294,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:8",{"_index":290,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts",{"_index":302,"title":{},"body":{"classes/TcsCallbackManager.html":{},"coverage.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:10",{"_index":309,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:49",{"_index":322,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:60",{"_index":314,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:8",{"_index":313,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:9",{"_index":321,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts",{"_index":157,"title":{},"body":{"classes/MongoDatabase.html":{},"coverage.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:2",{"_index":169,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:25",{"_index":178,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:3",{"_index":167,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:35",{"_index":182,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:46",{"_index":194,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:70",{"_index":171,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:85",{"_index":190,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts",{"_index":219,"title":{},"body":{"classes/MysqlDatabase.html":{},"coverage.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:107",{"_index":242,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:128",{"_index":229,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:145",{"_index":239,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:2",{"_index":222,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:31",{"_index":224,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:42",{"_index":240,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:62",{"_index":234,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:76",{"_index":230,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:96",{"_index":237,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/srv_database.ts",{"_index":418,"title":{},"body":{"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["src/core/librairies/database/srv_database.ts:2",{"_index":426,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:20",{"_index":428,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:25",{"_index":430,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:3",{"_index":425,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:34",{"_index":427,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:4",{"_index":424,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_makerequest.ts",{"_index":25,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"coverage.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:101",{"_index":138,"title":{},"body":{"classes/MakeRequestMongo.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:111",{"_index":144,"title":{},"body":{"classes/MakeRequestMongo.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:131",{"_index":145,"title":{},"body":{"classes/MakeRequestMongo.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:19",{"_index":55,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:2",{"_index":48,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:29",{"_index":62,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:3",{"_index":47,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:38",{"_index":49,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:44",{"_index":52,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:48",{"_index":151,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:5",{"_index":45,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:61",{"_index":154,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:7",{"_index":41,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:77",{"_index":152,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:88",{"_index":153,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts",{"_index":440,"title":{},"body":{"classes/TcsEventListener.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:25",{"_index":458,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:33",{"_index":455,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:8",{"_index":453,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:9",{"_index":445,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts",{"_index":463,"title":{},"body":{"classes/TcsEventManager.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:53",{"_index":475,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:61",{"_index":474,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:8",{"_index":476,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:9",{"_index":468,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/inputs/mixed_inputs.ts",{"_index":6,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts",{"_index":498,"title":{},"body":{"classes/TcsInputManager.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:104",{"_index":540,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:128",{"_index":538,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:146",{"_index":518,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:27",{"_index":510,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:53",{"_index":526,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:70",{"_index":535,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:8",{"_index":537,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:86",{"_index":522,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:9",{"_index":508,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts",{"_index":570,"title":{},"body":{"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:28",{"_index":584,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:44",{"_index":589,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:67",{"_index":595,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:8",{"_index":574,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:98",{"_index":577,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/modules/mixed_module.ts",{"_index":619,"title":{},"body":{"classes/TcsModule.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_module.ts:10",{"_index":641,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:11",{"_index":640,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:115",{"_index":644,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:13",{"_index":643,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:14",{"_index":635,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:160",{"_index":658,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:181",{"_index":668,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:48",{"_index":653,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:56",{"_index":651,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:64",{"_index":676,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:71",{"_index":650,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:9",{"_index":642,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:95",{"_index":654,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts",{"_index":748,"title":{},"body":{"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:50",{"_index":756,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:66",{"_index":753,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:8",{"_index":752,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/threads/mixed_threads.ts",{"_index":785,"title":{},"body":{"classes/TcsThread.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:10",{"_index":807,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:100",{"_index":825,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:11",{"_index":806,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:115",{"_index":821,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:13",{"_index":798,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:132",{"_index":815,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:49",{"_index":819,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:57",{"_index":801,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:74",{"_index":802,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:8",{"_index":805,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:83",{"_index":810,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:9",{"_index":804,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts",{"_index":854,"title":{},"body":{"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:25",{"_index":860,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:46",{"_index":861,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:64",{"_index":864,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:8",{"_index":858,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/mixed_tcs.ts",{"_index":354,"title":{},"body":{"classes/TcsCore.html":{},"coverage.html":{}}}],["src/core/mixed_tcs.ts:10",{"_index":376,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:11",{"_index":380,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:12",{"_index":373,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:13",{"_index":367,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:14",{"_index":369,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:15",{"_index":364,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:51",{"_index":382,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:64",{"_index":390,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:74",{"_index":392,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:8",{"_index":371,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:9",{"_index":378,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/mixed_main.ts",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/core/events/client/cli_death.ts",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_vehicle.ts",{"_index":986,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_weapon.ts",{"_index":988,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/mixed_moduleinfos.ts",{"_index":991,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/database/srv_database.ts",{"_index":993,"title":{},"body":{"coverage.html":{},"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:14",{"_index":1004,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:22",{"_index":1007,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:33",{"_index":1006,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:40",{"_index":1000,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:7",{"_index":1002,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_sqlcolumn.ts",{"_index":996,"title":{},"body":{"coverage.html":{},"interfaces/sqlColumn.html":{}}}],["src/types/events/mixed_events.ts",{"_index":343,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["src/types/modules/mixed_moduleinfos.ts",{"_index":745,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"coverage.html":{}}}],["src/types/threads/mixed_threadinterface.ts",{"_index":853,"title":{},"body":{"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["start",{"_index":288,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["started",{"_index":709,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["starting",{"_index":710,"title":{},"body":{"classes/TcsModule.html":{}}}],["starts",{"_index":291,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{}}}],["statements",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":662,"title":{},"body":{"classes/TcsModule.html":{}}}],["steps",{"_index":927,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["stop",{"_index":289,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["stopped",{"_index":677,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["style",{"_index":907,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":1116,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1109,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1122,"title":{},"body":{"license.html":{}}}],["such",{"_index":1048,"title":{},"body":{"index.html":{}}}],["super(collection",{"_index":117,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["super(tables",{"_index":81,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["superior",{"_index":659,"title":{},"body":{"classes/TcsModule.html":{}}}],["table",{"_index":179,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"coverage.html":{},"interfaces/database.html":{}}}],["tables",{"_index":30,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"interfaces/database.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":999,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1199,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":351,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{}}}],["targetid",{"_index":345,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcs",{"_index":365,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tcs.callbacks.servercallback.indexof(eventname",{"_index":334,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["tcs.error",{"_index":768,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["tcs.error(`${key",{"_index":606,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["tcs.error(`actionname",{"_index":551,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcs.isserversided",{"_index":482,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModule.html":{}}}],["tcs.lang.loadmodulelang(this",{"_index":707,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.threads.removethreadbymodule(this",{"_index":697,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.warning",{"_index":615,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcs_config.debugmode",{"_index":411,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config.lang",{"_index":607,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["tcs_config.maxexectimeperthread",{"_index":840,"title":{},"body":{"classes/TcsThread.html":{}}}],["tcs_config.showerrorsanycase",{"_index":414,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.showwarningsanycase",{"_index":416,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.versionningcheck",{"_index":686,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcsbenchmark",{"_index":285,"title":{"classes/TcsBenchmark.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["tcscallbackmanager",{"_index":301,"title":{"classes/TcsCallbackManager.html":{}},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"coverage.html":{}}}],["tcsclientevent",{"_index":342,"title":{"interfaces/TcsClientEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["tcscontrollerinputs",{"_index":559,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcscore",{"_index":353,"title":{"classes/TcsCore.html":{}},"body":{"classes/TcsCore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsdatabasemanager",{"_index":368,"title":{"classes/TcsDatabaseManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["tcsevent",{"_index":344,"title":{"interfaces/TcsEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventlistener",{"_index":439,"title":{"classes/TcsEventListener.html":{}},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventmanager",{"_index":370,"title":{"classes/TcsEventManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventslist",{"_index":350,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["tcseventtarget",{"_index":347,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcseventtarget.client",{"_index":484,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.local",{"_index":483,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.server",{"_index":481,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcsinput",{"_index":16,"title":{"interfaces/TcsInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"coverage.html":{}}}],["tcsinputmanager",{"_index":372,"title":{"classes/TcsInputManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"coverage.html":{}}}],["tcskeyboardinputs",{"_index":558,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcslanguagemanager",{"_index":375,"title":{"classes/TcsLanguageManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["tcsmodule",{"_index":594,"title":{"classes/TcsModule.html":{}},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsmoduleinfos",{"_index":634,"title":{"interfaces/TcsModuleInfos.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsmodulemanager",{"_index":377,"title":{"classes/TcsModuleManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["tcsmoduletypes",{"_index":747,"title":{},"body":{"interfaces/TcsModuleInfos.html":{}}}],["tcsthread",{"_index":784,"title":{"classes/TcsThread.html":{}},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsthread(timer",{"_index":871,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["tcsthreadexec",{"_index":841,"title":{"interfaces/TcsThreadExec.html":{}},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["tcsthreadsmanager",{"_index":379,"title":{"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tells",{"_index":295,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["text",{"_index":1158,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["text(65535",{"_index":1159,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["this.actioninputs",{"_index":543,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.find",{"_index":546,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.push",{"_index":548,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.addconfig(dict",{"_index":618,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.asyncquery(request",{"_index":264,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.asyncquery(sql).then(resolve).catch(reject",{"_index":277,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.callbacks",{"_index":401,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.checkversion",{"_index":688,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.client",{"_index":204,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["this.client.connect((err",{"_index":208,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["this.client.db(database_config.databasename",{"_index":210,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["this.client.execute(sql",{"_index":258,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.clientcallback",{"_index":326,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid",{"_index":330,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid](args",{"_index":329,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[this.requestid",{"_index":338,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.con",{"_index":82,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.con.execute(sql",{"_index":108,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.connected",{"_index":433,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.currentdb",{"_index":435,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.database",{"_index":406,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.db",{"_index":124,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["this.db.collection(collection).deletemany(query",{"_index":216,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["this.db.collection(this.tables[0]).find(this.query",{"_index":128,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.debugexec(thread",{"_index":834,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.delay(this.timer",{"_index":832,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.destroymethod",{"_index":690,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.ensuretables(table",{"_index":265,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.eventmanager",{"_index":396,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.eventtype",{"_index":460,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.execs",{"_index":826,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter",{"_index":851,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter((thread",{"_index":848,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.find((thread",{"_index":852,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.foreach((thread",{"_index":833,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.length",{"_index":846,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.push(thread",{"_index":847,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.findmodulebyid(mod",{"_index":767,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.findmodulebyid(newmodule.getid",{"_index":778,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules",{"_index":760,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.find((mod",{"_index":782,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.push(newmodule",{"_index":779,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.getid",{"_index":732,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.getpersonnalinputs",{"_index":544,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.handler",{"_index":461,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.handler(data",{"_index":462,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.inputs",{"_index":400,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isserversided",{"_index":403,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isthreadfull",{"_index":828,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.isversionsuperior(current",{"_index":743,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.isversionsuperior(json.version",{"_index":730,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.lang",{"_index":398,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{}}}],["this.lang[key",{"_index":605,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.launchmethod",{"_index":689,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.launchmethod(this",{"_index":706,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.limitcount",{"_index":73,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.listeners",{"_index":478,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.listeners.push(handler",{"_index":497,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.loadmodulelang(module",{"_index":617,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.loadreadylist",{"_index":436,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.moduleinfos",{"_index":685,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.dependencies",{"_index":693,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git",{"_index":687,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git}/main/.tcs.json",{"_index":718,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.moduletype}/${this.moduleinfos.modulename",{"_index":692,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.version",{"_index":731,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modulelaunched",{"_index":691,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modules",{"_index":397,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.ondatabasereadylist",{"_index":432,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.ondatabasereadylist.foreach((fnc",{"_index":437,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.ondatabasereadylist.push(fnc",{"_index":438,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.orderbylist",{"_index":75,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.personalinputs",{"_index":542,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.personalinputs.find",{"_index":566,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.personalinputs.push(currinput",{"_index":562,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.personalinputs.some",{"_index":564,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.printdebug",{"_index":698,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('module",{"_index":708,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('shutting",{"_index":694,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('starting",{"_index":705,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.query",{"_index":71,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.recordtosqlstring",{"_index":275,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.recordtosqlstring(selector",{"_index":276,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.recordtosqlstring(this.query",{"_index":104,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.removethreadbymodule(module",{"_index":880,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.requestid",{"_index":340,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.sendevent(event",{"_index":485,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.servercallback",{"_index":327,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[eventname",{"_index":341,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index",{"_index":335,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index](_source",{"_index":336,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.shouldlaunch",{"_index":684,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.start",{"_index":299,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.tables",{"_index":70,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.tables.join",{"_index":103,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.threadid",{"_index":829,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.threads",{"_index":399,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.threadslist",{"_index":866,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.find((thread",{"_index":868,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.foreach((thread",{"_index":874,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.push(currentthread",{"_index":872,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.splice(index",{"_index":878,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.tick",{"_index":830,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.timer",{"_index":827,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.waitingevents",{"_index":477,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.foreach((event",{"_index":487,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.push(event",{"_index":496,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.splice(index",{"_index":495,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["thread",{"_index":799,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["thread.containsthreadbyid(id",{"_index":875,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.exec",{"_index":835,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.getthreadtimer",{"_index":869,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.id",{"_index":849,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.id.split",{"_index":842,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.isthreadfull",{"_index":870,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removemodulethreads(module",{"_index":879,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removethread(id",{"_index":877,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["threadid",{"_index":790,"title":{},"body":{"classes/TcsThread.html":{}}}],["threads",{"_index":361,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["threadslist",{"_index":855,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["throw",{"_index":119,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["thrown",{"_index":702,"title":{},"body":{"classes/TcsModule.html":{}}}],["tick",{"_index":791,"title":{},"body":{"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":298,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":292,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["times",{"_index":452,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["timestamp",{"_index":1173,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["tinytext",{"_index":1156,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["tinytext(255",{"_index":1157,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["took",{"_index":843,"title":{},"body":{"classes/TcsThread.html":{}}}],["tools",{"_index":1072,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1143,"title":{},"body":{"license.html":{}}}],["transform",{"_index":88,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["transformed",{"_index":93,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["translation",{"_index":581,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["translations",{"_index":578,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["transmitted",{"_index":325,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["triggered",{"_index":448,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggers",{"_index":456,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggerservercallback",{"_index":308,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["true",{"_index":207,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":402,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["trying",{"_index":616,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["ts",{"_index":68,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"contributing.html":{}}}],["tslint",{"_index":935,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":97,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["types",{"_index":1151,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["typescript",{"_index":936,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["undefined",{"_index":405,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{}}}],["up",{"_index":648,"title":{},"body":{"classes/TcsModule.html":{}}}],["update",{"_index":164,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"contributing.html":{},"interfaces/database.html":{}}}],["update(collection",{"_index":192,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["update(table",{"_index":241,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["updatemany(selector",{"_index":213,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["use",{"_index":906,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":473,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{}}}],["user",{"_index":248,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["username",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":919,"title":{},"body":{"contributing.html":{}}}],["useunifiedtopology",{"_index":206,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["using",{"_index":903,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["value",{"_index":87,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":174,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"interfaces/database.html":{}}}],["values.join",{"_index":284,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["values.push(`${value",{"_index":282,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["values.push(`'${value",{"_index":281,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["varbinary",{"_index":1166,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["varbinary(255",{"_index":1167,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["varchar",{"_index":1154,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["varchar(255",{"_index":1155,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["variable",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1174,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehiclethreadchecker",{"_index":987,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["vehiclethreadchecker(module",{"_index":1024,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verify",{"_index":1059,"title":{},"body":{"index.html":{}}}],["version",{"_index":646,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versionningcheck",{"_index":1206,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":1058,"title":{},"body":{"index.html":{}}}],["very",{"_index":1063,"title":{},"body":{"index.html":{}}}],["void",{"_index":388,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["wait",{"_index":803,"title":{},"body":{"classes/TcsThread.html":{}}}],["waitforconnections",{"_index":251,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["waiting",{"_index":459,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["waitingevents",{"_index":467,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["warning",{"_index":363,"title":{},"body":{"classes/TcsCore.html":{}}}],["warning(warning",{"_index":391,"title":{},"body":{"classes/TcsCore.html":{}}}],["warnings",{"_index":1205,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":1130,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1125,"title":{},"body":{"license.html":{}}}],["weaponarray",{"_index":1022,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponhash",{"_index":1021,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponthreadchecker",{"_index":990,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["weaponthreadchecker(module",{"_index":1023,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whether",{"_index":527,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["without",{"_index":1101,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":674,"title":{},"body":{"classes/TcsModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionInput.html":{"url":"interfaces/ActionInput.html","title":"interface - ActionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionName\n                                \n                                \n                                        inputController\n                                \n                                \n                                        inputKeyboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionName\n                                    \n                                \n                                \n                                    \n                                        actionName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputController\n                                    \n                                \n                                \n                                    \n                                        inputController:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputKeyboard\n                                    \n                                \n                                \n                                    \n                                        inputKeyboard:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequest.html":{"url":"classes/MakeRequest.html","title":"class - MakeRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_MakeRequest.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                limitCount\n                            \n                            \n                                    Protected\n                                orderByList\n                            \n                            \n                                    Protected\n                                query\n                            \n                            \n                                    Protected\n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                execute\n                            \n                            \n                                    Abstract\n                                executeOne\n                            \n                            \n                                limit\n                            \n                            \n                                orderBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tables: String[], query: Record)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_MakeRequest.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tables\n                                                  \n                                                        \n                                                                    String[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            limitCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            orderByList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:2\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:38\n                \n            \n\n\n            \n                \n                    Execute the query\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns the query results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:44\n                \n            \n\n\n            \n                \n                    Execute the query but returns only one result\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns one result from the query\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            limit\n                        \n                        \n                    \n                \n            \n            \n                \nlimit(count: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:19\n                \n            \n\n\n            \n                \n                    Sets the results count limit to the current request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Results count\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderBy\n                        \n                        \n                    \n                \n            \n            \n                \norderBy(list: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:29\n                \n            \n\n\n            \n                \n                    ONLY FOR MONGO | Sets the current order to give to the results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mongo sort request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        abstract class MakeRequest {\n\tprotected tables: String[];\n\tprotected query: Record;\n\t//@ts-ignore\n\tprotected limitCount: Number;\n\t//@ts-ignore\n\tprotected orderByList: Object;\n\n\tconstructor(tables: String[], query: Record) {\n\t\tthis.tables = tables;\n\t\tthis.query = query;\n\t}\n\n\t/**\n\t * Sets the results count limit to the current request\n\t * @param count Results count\n\t * @returns Returns the current request\n\t */\n\tlimit(count: Number): MakeRequest {\n\t\tthis.limitCount = count;\n\t\treturn this;\n\t}\n\n\t/**\n\t * ONLY FOR MONGO | Sets the current order to give to the results\n\t * @param list Mongo sort request object\n\t * @returns Returns the current request\n\t */\n\torderBy(list: Object): MakeRequest {\n\t\tthis.orderByList = list;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Execute the query\n\t * @returns Returns the query results\n\t */\n\tabstract execute(): Promise;\n\n\t/**\n\t * Execute the query but returns only one result\n\t * @returns Returns one result from the query\n\t */\n\tabstract executeOne(): Promise;\n}\n\nclass MakeRequestSQL extends MakeRequest {\n\tprivate con: any;\n\tconstructor(con: any, tables: String[], query: Record) {\n\t\tsuper(tables, query);\n\n\t\tthis.con = con;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\tasync execute() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} ${\n\t\t\tthis.limitCount > 0 ? `LIMIT ${this.limitCount}` : ''\n\t\t};`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\t\treturn result;\n\t}\n\n\tasync executeOne() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} LIMIT 1;`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\n\t\tif (result.length == 0) return null;\n\t\treturn result[0];\n\t}\n}\n\nclass MakeRequestMongo extends MakeRequest {\n\tprivate db: any;\n\tconstructor(db: any, collection: String[], query: Record) {\n\t\tsuper(collection, query);\n\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during get request.');\n\n\t\tthis.db = db;\n\t}\n\n\texecute(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet currentRequest = this.db.collection(this.tables[0]).find(this.query);\n\n\t\t\tif (this.limitCount) {\n\t\t\t\tcurrentRequest = currentRequest.limit(this.limitCount);\n\t\t\t}\n\n\t\t\tif (this.orderByList) {\n\t\t\t\tcurrentRequest = currentRequest.sort(this.orderByList);\n\t\t\t}\n\n\t\t\tcurrentRequest.toArray((err: Error, result: any[]) => {\n\t\t\t\tif (err) reject(err);\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\texecuteOne(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(this.tables[0])\n\t\t\t\t.findOne(this.query, (err: Error, result: Object) => {\n\t\t\t\t\tif (err) reject(err);\n\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequestMongo.html":{"url":"classes/MakeRequestMongo.html","title":"class - MakeRequestMongo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequestMongo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_MakeRequest.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MakeRequest\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Protected\n                                limitCount\n                            \n                            \n                                    Protected\n                                orderByList\n                            \n                            \n                                    Protected\n                                query\n                            \n                            \n                                    Protected\n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                executeOne\n                            \n                            \n                                    Abstract\n                                execute\n                            \n                            \n                                    Abstract\n                                executeOne\n                            \n                            \n                                limit\n                            \n                            \n                                orderBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: any, collection: String[], query: Record)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_MakeRequest.ts:101\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collection\n                                                  \n                                                        \n                                                                    String[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            limitCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            orderByList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:2\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \nexecute()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteOne()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:38\n\n                \n            \n\n\n            \n                \n                    Execute the query\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns the query results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:44\n\n                \n            \n\n\n            \n                \n                    Execute the query but returns only one result\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns one result from the query\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            limit\n                        \n                        \n                    \n                \n            \n            \n                \nlimit(count: Number)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:19\n\n                \n            \n\n\n            \n                \n                    Sets the results count limit to the current request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Results count\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderBy\n                        \n                        \n                    \n                \n            \n            \n                \norderBy(list: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:29\n\n                \n            \n\n\n            \n                \n                    ONLY FOR MONGO | Sets the current order to give to the results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mongo sort request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        abstract class MakeRequest {\n\tprotected tables: String[];\n\tprotected query: Record;\n\t//@ts-ignore\n\tprotected limitCount: Number;\n\t//@ts-ignore\n\tprotected orderByList: Object;\n\n\tconstructor(tables: String[], query: Record) {\n\t\tthis.tables = tables;\n\t\tthis.query = query;\n\t}\n\n\t/**\n\t * Sets the results count limit to the current request\n\t * @param count Results count\n\t * @returns Returns the current request\n\t */\n\tlimit(count: Number): MakeRequest {\n\t\tthis.limitCount = count;\n\t\treturn this;\n\t}\n\n\t/**\n\t * ONLY FOR MONGO | Sets the current order to give to the results\n\t * @param list Mongo sort request object\n\t * @returns Returns the current request\n\t */\n\torderBy(list: Object): MakeRequest {\n\t\tthis.orderByList = list;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Execute the query\n\t * @returns Returns the query results\n\t */\n\tabstract execute(): Promise;\n\n\t/**\n\t * Execute the query but returns only one result\n\t * @returns Returns one result from the query\n\t */\n\tabstract executeOne(): Promise;\n}\n\nclass MakeRequestSQL extends MakeRequest {\n\tprivate con: any;\n\tconstructor(con: any, tables: String[], query: Record) {\n\t\tsuper(tables, query);\n\n\t\tthis.con = con;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\tasync execute() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} ${\n\t\t\tthis.limitCount > 0 ? `LIMIT ${this.limitCount}` : ''\n\t\t};`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\t\treturn result;\n\t}\n\n\tasync executeOne() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} LIMIT 1;`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\n\t\tif (result.length == 0) return null;\n\t\treturn result[0];\n\t}\n}\n\nclass MakeRequestMongo extends MakeRequest {\n\tprivate db: any;\n\tconstructor(db: any, collection: String[], query: Record) {\n\t\tsuper(collection, query);\n\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during get request.');\n\n\t\tthis.db = db;\n\t}\n\n\texecute(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet currentRequest = this.db.collection(this.tables[0]).find(this.query);\n\n\t\t\tif (this.limitCount) {\n\t\t\t\tcurrentRequest = currentRequest.limit(this.limitCount);\n\t\t\t}\n\n\t\t\tif (this.orderByList) {\n\t\t\t\tcurrentRequest = currentRequest.sort(this.orderByList);\n\t\t\t}\n\n\t\t\tcurrentRequest.toArray((err: Error, result: any[]) => {\n\t\t\t\tif (err) reject(err);\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\texecuteOne(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(this.tables[0])\n\t\t\t\t.findOne(this.query, (err: Error, result: Object) => {\n\t\t\t\t\tif (err) reject(err);\n\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequestSQL.html":{"url":"classes/MakeRequestSQL.html","title":"class - MakeRequestSQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequestSQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_MakeRequest.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MakeRequest\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                con\n                            \n                            \n                                    Protected\n                                limitCount\n                            \n                            \n                                    Protected\n                                orderByList\n                            \n                            \n                                    Protected\n                                query\n                            \n                            \n                                    Protected\n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                executeOne\n                            \n                            \n                                    Private\n                                recordToSqlString\n                            \n                            \n                                    Abstract\n                                execute\n                            \n                            \n                                    Abstract\n                                executeOne\n                            \n                            \n                                limit\n                            \n                            \n                                orderBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(con: any, tables: String[], query: Record)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_MakeRequest.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        con\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tables\n                                                  \n                                                        \n                                                                    String[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            con\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            limitCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            orderByList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:2\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            recordToSqlString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recordToSqlString(record: Record, sep: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:61\n                \n            \n\n\n            \n                \n                    Converts a record to a SQL equation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        List of key / value to transform in sql equation\n\n                                    \n                                \n                                \n                                    sep\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ' '\n                                    \n\n                                    \n                                        Separator between each equation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        The record transformed in a SQL equation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:38\n\n                \n            \n\n\n            \n                \n                    Execute the query\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns the query results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:44\n\n                \n            \n\n\n            \n                \n                    Execute the query but returns only one result\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns one result from the query\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            limit\n                        \n                        \n                    \n                \n            \n            \n                \nlimit(count: Number)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:19\n\n                \n            \n\n\n            \n                \n                    Sets the results count limit to the current request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Results count\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderBy\n                        \n                        \n                    \n                \n            \n            \n                \norderBy(list: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:29\n\n                \n            \n\n\n            \n                \n                    ONLY FOR MONGO | Sets the current order to give to the results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mongo sort request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        abstract class MakeRequest {\n\tprotected tables: String[];\n\tprotected query: Record;\n\t//@ts-ignore\n\tprotected limitCount: Number;\n\t//@ts-ignore\n\tprotected orderByList: Object;\n\n\tconstructor(tables: String[], query: Record) {\n\t\tthis.tables = tables;\n\t\tthis.query = query;\n\t}\n\n\t/**\n\t * Sets the results count limit to the current request\n\t * @param count Results count\n\t * @returns Returns the current request\n\t */\n\tlimit(count: Number): MakeRequest {\n\t\tthis.limitCount = count;\n\t\treturn this;\n\t}\n\n\t/**\n\t * ONLY FOR MONGO | Sets the current order to give to the results\n\t * @param list Mongo sort request object\n\t * @returns Returns the current request\n\t */\n\torderBy(list: Object): MakeRequest {\n\t\tthis.orderByList = list;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Execute the query\n\t * @returns Returns the query results\n\t */\n\tabstract execute(): Promise;\n\n\t/**\n\t * Execute the query but returns only one result\n\t * @returns Returns one result from the query\n\t */\n\tabstract executeOne(): Promise;\n}\n\nclass MakeRequestSQL extends MakeRequest {\n\tprivate con: any;\n\tconstructor(con: any, tables: String[], query: Record) {\n\t\tsuper(tables, query);\n\n\t\tthis.con = con;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\tasync execute() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} ${\n\t\t\tthis.limitCount > 0 ? `LIMIT ${this.limitCount}` : ''\n\t\t};`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\t\treturn result;\n\t}\n\n\tasync executeOne() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} LIMIT 1;`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\n\t\tif (result.length == 0) return null;\n\t\treturn result[0];\n\t}\n}\n\nclass MakeRequestMongo extends MakeRequest {\n\tprivate db: any;\n\tconstructor(db: any, collection: String[], query: Record) {\n\t\tsuper(collection, query);\n\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during get request.');\n\n\t\tthis.db = db;\n\t}\n\n\texecute(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet currentRequest = this.db.collection(this.tables[0]).find(this.query);\n\n\t\t\tif (this.limitCount) {\n\t\t\t\tcurrentRequest = currentRequest.limit(this.limitCount);\n\t\t\t}\n\n\t\t\tif (this.orderByList) {\n\t\t\t\tcurrentRequest = currentRequest.sort(this.orderByList);\n\t\t\t}\n\n\t\t\tcurrentRequest.toArray((err: Error, result: any[]) => {\n\t\t\t\tif (err) reject(err);\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\texecuteOne(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(this.tables[0])\n\t\t\t\t.findOne(this.query, (err: Error, result: Object) => {\n\t\t\t\t\tif (err) reject(err);\n\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDatabase.html":{"url":"classes/MongoDatabase.html","title":"class - MongoDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/mongo/srv_Mongo.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            database\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Async\n                                ensureColumns\n                            \n                            \n                                get\n                            \n                            \n                                insert\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(onConnectionDone: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/mongo/srv_Mongo.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onConnectionDone\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(collection: string, query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:70\n                \n            \n\n\n            \n                \n                    Delete the specified documents of the collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to delete the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ensureColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureColumns(table: string, columns: sqlColumn[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columns\n                                    \n                                                sqlColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(collection: string[], selector: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:35\n                \n            \n\n\n            \n                \n                    Create a new db request that gets the data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to get the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        A make request object corresponding to the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(collection: string, newDocument: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:85\n                \n            \n\n\n            \n                \n                    Insert the specified document in the collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to insert the document to\n\n                                    \n                                \n                                \n                                    newDocument\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new document to insert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(collection: string, selector: Record, newValues: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:46\n                \n            \n\n\n            \n                \n                    Update the specified documents of the collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to update the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                                \n                                    newValues\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Values of the found documents to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class MongoDatabase implements database {\n\tprivate client;\n\tprivate db: any;\n\n\tconstructor(onConnectionDone: Function) {\n\t\tconst mongoClient = require('mongodb').MongoClient;\n\t\tconst connectionUrl = `mongodb://${\n\t\t\tDATABASE_CONFIG.username\n\t\t}:${encodeURIComponent(DATABASE_CONFIG.password)}@${\n\t\t\tDATABASE_CONFIG.address\n\t\t}:${DATABASE_CONFIG.port}/`;\n\n\t\tthis.client = new mongoClient(connectionUrl, { useUnifiedTopology: true });\n\t\tthis.client.connect((err: Error) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.db = this.client.db(DATABASE_CONFIG.databaseName);\n\t\t\tonConnectionDone();\n\t\t});\n\t}\n\n\tasync ensureColumns(table: string, columns: sqlColumn[]) {\n\t\treturn;\n\t}\n\n\t/**\n\t * Create a new db request that gets the data\n\t * @param collection Name of the collection to get the values from\n\t * @param selector Query of the current request\n\t * @returns A make request object corresponding to the current request\n\t */\n\tget(collection: string[], selector: Record): MakeRequest {\n\t\treturn new MakeRequestMongo(this.db, collection, selector);\n\t}\n\n\t/**\n\t * Update the specified documents of the collection\n\t * @param collection Name of the collection to update the values from\n\t * @param selector Query of the current request\n\t * @param newValues Values of the found documents to update\n\t * @returns A promise from the request\n\t */\n\tupdate(\n\t\tcollection: string,\n\t\tselector: Record,\n\t\tnewValues: Record,\n\t): Promise {\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during update request.');\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(collection)\n\t\t\t\t.updateMany(selector, { $set: newValues }, (err: Error, _: any) => {\n\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Delete the specified documents of the collection\n\t * @param collection Name of the collection to delete the values from\n\t * @param query Query of the current request\n\t * @returns A promise from the request\n\t */\n\tdelete(collection: string, query: Record): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db.collection(collection).deleteMany(query, (err: Error, _: any) => {\n\t\t\t\tif (err) reject(err);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Insert the specified document in the collection\n\t * @param collection Name of the collection to insert the document to\n\t * @param newDocument The new document to insert\n\t * @returns A promise from the request\n\t */\n\tinsert(collection: string, newDocument: Record): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(collection)\n\t\t\t\t.insertOne(newDocument, (err: Error, _: any) => {\n\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MysqlDatabase.html":{"url":"classes/MysqlDatabase.html","title":"class - MysqlDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MysqlDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/sql/srv_Mysql.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            database\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                asyncQuery\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                ensureColumns\n                            \n                            \n                                    Private\n                                    Async\n                                ensureTables\n                            \n                            \n                                get\n                            \n                            \n                                insert\n                            \n                            \n                                    Private\n                                recordToSqlString\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(onConnectionDone: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/sql/srv_Mysql.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onConnectionDone\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:2\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            asyncQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asyncQuery(sql: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:31\n                \n            \n\n\n            \n                \n                    Execute the specified query and returns it's result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sql\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Sql query to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        A promise resolving the query's result\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(table: string, query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:128\n                \n            \n\n\n            \n                \n                    Delete the specified documents of the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to delete the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ensureColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureColumns(table: string, columns: sqlColumn[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:76\n                \n            \n\n\n            \n                \n                    Will create the table with the specified columns if they don't exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to create the columns in\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                                sqlColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of the columns, specified by their name and values type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            ensureTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureTables(table: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:62\n                \n            \n\n\n            \n                \n                    Will create the table if it doesn't exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to create if it doesn't exist\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(table: string[], selector: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:96\n                \n            \n\n\n            \n                \n                    Create a new db request that gets the data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to get the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        A make request object corresponding to the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(table: string, newDocument: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:145\n                \n            \n\n\n            \n                \n                    Insert the specified document in the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to insert the document to\n\n                                    \n                                \n                                \n                                    newDocument\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new document to insert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            recordToSqlString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recordToSqlString(record: Record, sep: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:42\n                \n            \n\n\n            \n                \n                    Converts a record to a SQL equation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        List of key / value to transform in sql equation\n\n                                    \n                                \n                                \n                                    sep\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ' '\n                                    \n\n                                    \n                                        Separator between each equation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        The record transformed in a SQL equation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(table: string, selector: Record, newValues: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:107\n                \n            \n\n\n            \n                \n                    Update the specified documents of the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to update the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                                \n                                    newValues\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Values of the found documents to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class MysqlDatabase implements database {\n\tprivate client: any;\n\n\tconstructor(onConnectionDone: Function) {\n\t\tconst mysql = require('mysql2');\n\t\tconst connectionParameters = {\n\t\t\thost: DATABASE_CONFIG.address,\n\t\t\tport: DATABASE_CONFIG.port,\n\t\t\tuser: DATABASE_CONFIG.username,\n\t\t\tpassword: encodeURIComponent(DATABASE_CONFIG.password),\n\t\t\tdatabase: DATABASE_CONFIG.databaseName,\n\n\t\t\twaitForConnections: true,\n\t\t\tconnectionLimit: 20,\n\t\t};\n\n\t\tconst connectToDb = async () => {\n\t\t\tconst pool = await mysql.createPool(connectionParameters);\n\t\t\tthis.client = pool.promise();\n\t\t\tonConnectionDone();\n\t\t};\n\n\t\tconnectToDb();\n\t}\n\n\t/**\n\t * Execute the specified query and returns it's result\n\t * @param sql Sql query to execute\n\t * @returns A promise resolving the query's result\n\t */\n\tprivate async asyncQuery(sql: string) {\n\t\tconst [result, _] = await this.client.execute(sql);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\t/**\n\t * Will create the table if it doesn't exist\n\t * @param table Name of the table to create if it doesn't exist\n\t */\n\tprivate async ensureTables(table: string) {\n\t\tif (table) {\n\t\t\tconst request = `CREATE TABLE IF NOT EXISTS \\`${table}\\` (\\`id\\` int(11) NOT NULL auto_increment, PRIMARY KEY  (\\`id\\`));`;\n\n\t\t\tawait this.asyncQuery(request);\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Will create the table with the specified columns if they don't exist\n\t * @param table Table to create the columns in\n\t * @param columns List of the columns, specified by their name and values type\n\t */\n\tasync ensureColumns(table: string, columns: sqlColumn[]) {\n\t\tawait this.ensureTables(table);\n\t\tconst sqlColumns = columns.map(\n\t\t\t(column) => `${column.column} ${column.type}`,\n\t\t);\n\t\tconst request = `ALTER TABLE ${table} ADD COLUMN IF NOT EXISTS (${sqlColumns.join(\n\t\t\t', ',\n\t\t)});`;\n\n\t\tawait this.asyncQuery(request);\n\n\t\treturn;\n\t}\n\n\t/**\n\t * Create a new db request that gets the data\n\t * @param table Name of the table to get the values from\n\t * @param selector Query of the current request\n\t * @returns A make request object corresponding to the current request\n\t */\n\tget(table: string[], selector: Record): MakeRequest {\n\t\treturn new MakeRequestSQL(this.client, table, selector);\n\t}\n\n\t/**\n\t * Update the specified documents of the table\n\t * @param table Name of the table to update the values from\n\t * @param selector Query of the current request\n\t * @param newValues Values of the found documents to update\n\t * @returns A promise from the request\n\t */\n\tupdate(\n\t\ttable: string,\n\t\tselector: Record,\n\t\tnewValues: Record,\n\t): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sql = `UPDATE ${table} SET ${this.recordToSqlString(\n\t\t\t\tnewValues,\n\t\t\t\t', ',\n\t\t\t)} WHERE ${this.recordToSqlString(selector, ' AND ')};`;\n\n\t\t\tthis.asyncQuery(sql).then(resolve).catch(reject);\n\t\t});\n\t}\n\n\t/**\n\t * Delete the specified documents of the table\n\t * @param table Name of the table to delete the values from\n\t * @param query Query of the current request\n\t * @returns A promise from the request\n\t */\n\tdelete(table: string, query: Record): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sql = `DELETE FROM ${table} WHERE ${this.recordToSqlString(\n\t\t\t\tquery,\n\t\t\t\t', ',\n\t\t\t)};`;\n\n\t\t\tthis.asyncQuery(sql).then(resolve).catch(reject);\n\t\t});\n\t}\n\n\t/**\n\t * Insert the specified document in the table\n\t * @param table Name of the table to insert the document to\n\t * @param newDocument The new document to insert\n\t * @returns A promise from the request\n\t */\n\tinsert(table: string, newDocument: Record): Promise {\n\t\tlet keys: string[] = [];\n\t\tlet values: string[] = [];\n\n\t\tfor (const key in newDocument) {\n\t\t\tconst value = newDocument[key];\n\n\t\t\tkeys.push(key);\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tvalues.push(`'${value}'`);\n\t\t\t} else {\n\t\t\t\tvalues.push(`${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sql = `INSERT INTO ${table} (${keys.join(\n\t\t\t\t',',\n\t\t\t)}) VALUES (${values.join(',')});`;\n\n\t\t\tthis.asyncQuery(sql).then(resolve).catch(reject);\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsBenchmark.html":{"url":"classes/TcsBenchmark.html","title":"class - TcsBenchmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsBenchmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/benchmark/mixed_benchmark.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n                \n                    \n                            Starts the timer for the benchmark\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:21\n                \n            \n\n\n            \n                \n                    Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time difference in ms\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsBenchmark {\n\tprivate start: number;\n\n\t/**\n\t * Starts the timer for the benchmark\n\t */\n\tconstructor() {\n\t\tthis.start = GetGameTimer();\n\t}\n\n\t/**\n\t * Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\t * @returns The time difference in ms\n\t */\n\tstop() {\n\t\tconst difference = GetGameTimer() - this.start;\n\t\treturn difference;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCallbackManager.html":{"url":"classes/TcsCallbackManager.html","title":"class - TcsCallbackManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCallbackManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/callbacks/mixed_callbackManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ClientCallBack\n                            \n                            \n                                RegisterServerCallback\n                            \n                            \n                                    Public\n                                requestId\n                            \n                            \n                                    Public\n                                ServerCallBack\n                            \n                            \n                                TriggerServerCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize the callbacks manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ClientCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RegisterServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:60\n                            \n                        \n\n                \n                    \n                        Server side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the client side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ServerCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TriggerServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:49\n                            \n                        \n\n                \n                    \n                        Client side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the server side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                arguments to be transmitted on the server side\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsCallbackManager {\n\tpublic ClientCallBack: any[];\n\tpublic ServerCallBack: any[];\n\tpublic requestId = 0;\n\n\t/**\n\t * Initialize the callbacks manager\n\t */\n\tconstructor() {\n\t\tthis.ClientCallBack = [];\n\t\tthis.ServerCallBack = [];\n\n\t\t/**\n\t\t * Client side event\n\t\t */\n\t\tonNet('callbacks:clientEvent', (requestId: number, args: any[]) => {\n\t\t\tthis.ClientCallBack[requestId](args);\n\t\t\tthis.ClientCallBack[requestId] = null;\n\t\t});\n\n\t\t/**\n\t\t * Server side event\n\t\t */\n\t\tonNet(\n\t\t\t'callbacks:serverEvent',\n\t\t\t(eventName: string, requestId: number, args: any) => {\n\t\t\t\tconst _source = source;\n\t\t\t\tconst index = TCS.callbacks.ServerCallBack.indexOf(eventName);\n\t\t\t\tif (this.ServerCallBack[index] != null) {\n\t\t\t\t\tthis.ServerCallBack[index](_source, args);\n\t\t\t\t}\n\t\t\t\temitNet('callbacks:clientEvent', _source, requestId, args);\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Client side function\n\t * @param eventName The name of the event to call on the server side\n\t * @param cb return function\n\t * @param args arguments to be transmitted on the server side\n\t */\n\tTriggerServerCallback = (eventName: string, cb: Function, args: any) => {\n\t\tthis.ClientCallBack[this.requestId] = cb;\n\t\temitNet('callbacks:serverEvent', eventName, this.requestId, args);\n\t\tthis.requestId++;\n\t};\n\n\t/**\n\t * Server side function\n\t * @param eventName The name of the event to call on the client side\n\t * @param cb return function\n\t */\n\tRegisterServerCallback = (eventName: string, cb: Function) => {\n\t\t//@ts-ignore\n\t\tthis.ServerCallBack[eventName] = cb;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsClientEvent.html":{"url":"interfaces/TcsClientEvent.html","title":"interface - TcsClientEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsClientEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TcsEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\nexports('TcsEventTarget', () => TcsEventTarget);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCore.html":{"url":"classes/TcsCore.html","title":"class - TcsCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mixed_tcs.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                callbacks\n                            \n                            \n                                    Readonly\n                                database\n                            \n                            \n                                    Readonly\n                                eventManager\n                            \n                            \n                                    Readonly\n                                inputs\n                            \n                            \n                                    Readonly\n                                isServerSided\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Readonly\n                                modules\n                            \n                            \n                                    Readonly\n                                threads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/mixed_tcs.ts:15\n                            \n                        \n\n                \n                    \n                            Initialize the TCS core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            callbacks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCallbackManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsDatabaseManager | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            eventManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsInputManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isServerSided\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsLanguageManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            threads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThreadsManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:51\n                \n            \n\n\n            \n                \n                    Display the specified message if the server is in debug mode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(error: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:64\n                \n            \n\n\n            \n                \n                    Display the specified error in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \nwarning(warning: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:74\n                \n            \n\n\n            \n                \n                    Display the specified warning in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    warning\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Warning to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsCore {\n\treadonly eventManager: TcsEventManager;\n\treadonly modules: TcsModuleManager;\n\treadonly lang: TcsLanguageManager;\n\treadonly threads: TcsThreadsManager;\n\treadonly inputs: TcsInputManager;\n\treadonly callbacks: TcsCallbackManager;\n\treadonly database: TcsDatabaseManager | null = null;\n\treadonly isServerSided: boolean;\n\n\t/**\n\t * Initialize the TCS core\n\t */\n\tconstructor() {\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.YELLOW}Initializing...`,\n\t\t);\n\t\tthis.eventManager = new TcsEventManager();\n\t\tthis.modules = new TcsModuleManager();\n\t\tthis.lang = new TcsLanguageManager();\n\t\tthis.threads = new TcsThreadsManager();\n\t\tthis.inputs = new TcsInputManager();\n\t\tthis.callbacks = new TcsCallbackManager();\n\n\t\ttry {\n\t\t\t//@ts-ignore\n\t\t\tthis.isServerSided = ScheduleResourceTick != undefined;\n\n\t\t\tif (this.isServerSided) {\n\t\t\t\tthis.database = new TcsDatabaseManager();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.isServerSided = false;\n\t\t}\n\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.GREEN}Ready to go !`,\n\t\t);\n\t}\n\n\t/**\n\t * Display the specified message if the server is in debug mode\n\t * @param message Message to print in the console\n\t */\n\tdebug(message: String) {\n\t\tif (TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE}[debug] ${message}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified error in the console\n\t * @param error Error to print in the console\n\t */\n\terror(error: String) {\n\t\tif (TCS_CONFIG.showErrorsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(`${ConsoleColors.RED}[ERROR] ${error}`, ConsoleColors.RESET);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified warning in the console\n\t * @param warning Warning to print in the console\n\t */\n\twarning(warning: String) {\n\t\tif (TCS_CONFIG.showWarningsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.YELLOW}[WARNING] ${warning}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsDatabaseManager.html":{"url":"classes/TcsDatabaseManager.html","title":"class - TcsDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_database.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connected\n                            \n                            \n                                    Private\n                                currentDb\n                            \n                            \n                                    Private\n                                onDatabaseReadyList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                database\n                            \n                            \n                                loadReadyList\n                            \n                            \n                                onDatabaseReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_database.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_database.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         database\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_database.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDatabaseReadyList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_database.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            database\n                        \n                        \n                    \n                \n            \n            \n                \ndatabase()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_database.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadReadyList\n                        \n                        \n                    \n                \n            \n            \n                \nloadReadyList()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_database.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDatabaseReady\n                        \n                        \n                    \n                \n            \n            \n                \nonDatabaseReady(fnc: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_database.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fnc\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsDatabaseManager {\n\tprivate currentDb: database;\n\tprivate connected: boolean;\n\tprivate onDatabaseReadyList: Function[];\n\n\tconstructor() {\n\t\tthis.onDatabaseReadyList = [];\n\t\tthis.connected = false;\n\t\tif (DATABASE_CONFIG.nosql) {\n\t\t\tthis.currentDb = new MongoDatabase(() => {\n\t\t\t\tthis.loadReadyList();\n\t\t\t});\n\t\t} else {\n\t\t\tthis.currentDb = new MysqlDatabase(() => {\n\t\t\t\tthis.loadReadyList();\n\t\t\t});\n\t\t}\n\t}\n\n\tloadReadyList() {\n\t\tthis.connected = true;\n\t\tthis.onDatabaseReadyList.forEach((fnc) => fnc());\n\t}\n\n\tonDatabaseReady(fnc: Function) {\n\t\tif (!this.currentDb || !this.connected) {\n\t\t\tthis.onDatabaseReadyList.push(fnc);\n\t\t\treturn;\n\t\t}\n\n\t\tfnc();\n\t}\n\n\tdatabase() {\n\t\treturn this.currentDb;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsEvent.html":{"url":"interfaces/TcsEvent.html","title":"interface - TcsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:         TcsEventsList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventsList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         TcsEventTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\nexports('TcsEventTarget', () => TcsEventTarget);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventListener.html":{"url":"classes/TcsEventListener.html","title":"class - TcsEventListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventListenerClass.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventType\n                            \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEventHandler\n                            \n                            \n                                getEventType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventType: TcsEventsList, handler: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n                \n                    \n                            Create a listener that will be called each time the specified event is triggered\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        TcsEventsList\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Type of events to listen to\n\n                                                        \n                                                \n                                                \n                                                        handler\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current event handler, that will be executed each times the event is triggered\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventsList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyEventHandler\n                        \n                        \n                    \n                \n            \n            \n                \napplyEventHandler(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:33\n                \n            \n\n\n            \n                \n                    Triggers the event listener function with the specified data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Data to send to the event listener function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventType\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventType()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:25\n                \n            \n\n\n            \n                \n                    Get the current listener event it is waiting for\n\n\n                    \n                    \n                    \n                        Returns :         TcsEventsList\n\n                    \n                    \n                        Current event type name\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventListener {\n\tprivate eventType: TcsEventsList;\n\tprivate handler: Function;\n\n\t/**\n\t * Create a listener that will be called each time the specified event is triggered\n\t * @param eventType Type of events to listen to\n\t * @param handler Current event handler, that will be executed each times the event is triggered\n\t */\n\tconstructor(eventType: TcsEventsList, handler: Function) {\n\t\tthis.eventType = eventType;\n\t\tthis.handler = handler;\n\t}\n\n\t/**\n\t *\tGet the current listener event it is waiting for\n\t * @returns Current event type name\n\t */\n\tgetEventType() {\n\t\treturn this.eventType;\n\t}\n\n\t/**\n\t * Triggers the event listener function with the specified data\n\t * @param data Data to send to the event listener function\n\t */\n\tapplyEventHandler(data: Object = {}) {\n\t\tthis.handler(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventManager.html":{"url":"classes/TcsEventManager.html","title":"class - TcsEventManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEventHandler\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                sendEvent\n                            \n                            \n                                    Private\n                                waitingEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an event manager. It handles all the incoming events and outcoming events.\nShould only be used by the core.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEventHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:61\n                            \n                        \n\n                \n                    \n                        Add an event handler that will be triggered each time the specified event will be triggered\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        handler\n                                                        \n                                                                Handler to add\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventListener[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:53\n                            \n                        \n\n                \n                    \n                        Send the specified event and triggers it for the target\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        event\n                                                        \n                                                                Event to send\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            waitingEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventManager {\n\tprivate waitingEvents: TcsEvent[];\n\tprivate listeners: TcsEventListener[];\n\n\t/**\n\t * Creates an event manager. It handles all the incoming events and outcoming events.\n\t * Should only be used by the core.\n\t */\n\tconstructor() {\n\t\tthis.waitingEvents = [];\n\t\tthis.listeners = [];\n\n\t\tonNet('tcs:handleEvent', (event: TcsEvent) => {\n\t\t\tif (event.target === TcsEventTarget.SERVER) {\n\t\t\t\tif (TCS.isServerSided) event.target = TcsEventTarget.LOCAL;\n\t\t\t\telse event.target = TcsEventTarget.CLIENT;\n\t\t\t}\n\t\t\tif (event.target === TcsEventTarget.CLIENT && !TCS.isServerSided) {\n\t\t\t\tevent.target = TcsEventTarget.LOCAL;\n\t\t\t}\n\t\t\tthis.sendEvent(event);\n\t\t});\n\n\t\tsetTick(() => {\n\t\t\tthis.waitingEvents.forEach((event, index) => {\n\t\t\t\tif (event.target == TcsEventTarget.LOCAL) {\n\t\t\t\t\tthis.listeners\n\t\t\t\t\t\t.filter((listener) => listener.getEventType() == event.eventType)\n\t\t\t\t\t\t.forEach((listener) => listener.applyEventHandler(event.data));\n\t\t\t\t} else {\n\t\t\t\t\tif (!TCS.isServerSided) emitNet('tcs:handleEvent', event);\n\t\t\t\t\telse {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\temitNet('tcs:handleEvent', event.targetId, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.waitingEvents.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send the specified event and triggers it for the target\n\t * @param event Event to send\n\t */\n\tsendEvent = (event: TcsEvent) => {\n\t\tthis.waitingEvents.push(event);\n\t};\n\n\t/**\n\t * Add an event handler that will be triggered each time the specified event will be triggered\n\t * @param handler Handler to add\n\t */\n\taddEventHandler = (handler: TcsEventListener) => {\n\t\tthis.listeners.push(handler);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsInput.html":{"url":"interfaces/TcsInput.html","title":"interface - TcsInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        inputKey\n                                \n                                \n                                        inputName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputKey\n                                    \n                                \n                                \n                                    \n                                        inputKey:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputName\n                                    \n                                \n                                \n                                    \n                                        inputName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsInputManager.html":{"url":"classes/TcsInputManager.html","title":"class - TcsInputManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsInputManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionInputs\n                            \n                            \n                                bindAction\n                            \n                            \n                                getInput\n                            \n                            \n                                getPersonnalInputs\n                            \n                            \n                                isJustPressed\n                            \n                            \n                                isPressed\n                            \n                            \n                                    Private\n                                personalInputs\n                            \n                            \n                                resetInputsDefault\n                            \n                            \n                                setInput\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/inputs/mixed_inputsManager.ts:9\n                            \n                        \n\n                \n                    \n                            Initialize the inputs manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actionInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bindAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:27\n                            \n                        \n\n                \n                    \n                        Create an action from an input\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                name of the action\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                        \n                                                                brief description of the action\n\n                                                        \n                                                \n                                                \n                                                        keyboardKey\n                                                        \n                                                                keyboard's input\n\n                                                        \n                                                \n                                                \n                                                        controllerKey\n                                                        \n                                                                controller's input\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:146\n                            \n                        \n\n                \n                    \n                        Recovery of the player's personalized input\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        inputName\n                                                        \n                                                                name of the key\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPersonnalInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:86\n                            \n                        \n\n                \n                    \n                        Recovery of player data from the database, in case the player is new, initialization of data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isJustPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:53\n                            \n                        \n\n                \n                    \n                        Returns whether a control was newly pressed since the last check, used only for Controllers\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:70\n                            \n                        \n\n                \n                    \n                        Returns whether a control is currently pressed, used only for Controllers\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            personalInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetInputsDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:128\n                            \n                        \n\n                \n                    \n                        reset all keys to default\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        inputName\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:104\n                            \n                        \n\n                \n                    \n                        Change a key\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        inputName\n                                                        \n                                                                key by default\n\n                                                        \n                                                \n                                                \n                                                        inputKey\n                                                        \n                                                                New input\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsInputManager {\n\tprivate personalInputs: Array;\n\tprivate actionInputs: Array;\n\n\t/**\n\t * Initialize the inputs manager\n\t */\n\tconstructor() {\n\t\tthis.personalInputs = [];\n\t\tthis.actionInputs = [];\n\t\tthis.getPersonnalInputs();\n\t}\n\n\t/**\n\t * Create an action from an input\n\t * @param actionName name of the action\n\t * @param description brief description of the action\n\t * @param keyboardKey keyboard's input\n\t * @param controllerKey controller's input\n\t */\n\tbindAction = (\n\t\tactionName: string,\n\t\tdescription: string,\n\t\tkeyboardKey: string,\n\t\tcontrollerKey: number,\n\t) => {\n\t\tconst alreadyCreated = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\t\tif (!alreadyCreated) {\n\t\t\tthis.actionInputs.push({\n\t\t\t\tactionName: actionName,\n\t\t\t\tinputKeyboard: keyboardKey,\n\t\t\t\tinputController: controllerKey,\n\t\t\t});\n\t\t\tRegisterKeyMapping(actionName, description, 'keyboard', keyboardKey);\n\t\t} else {\n\t\t\tTCS.error(`actionName: ${actionName} already exist !`);\n\t\t}\n\t};\n\n\t/**\n\t * Returns whether a control was newly pressed since the last check, used only for Controllers\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisJustPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\n\t\tif (!actionData) return false;\n\n\t\tif (!IsInputDisabled(2)) {\n\t\t\treturn IsControlJustPressed(0, actionData.inputController);\n\t\t}\n\t};\n\n\t/**\n\t * Returns whether a control is currently pressed, used only for Controllers\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\n\t\tif (!actionData) return false;\n\n\t\tif (!IsInputDisabled(2)) {\n\t\t\treturn IsControlJustPressed(0, actionData.inputController);\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Recovery of player data from the database, in case the player is new, initialization of data\n\t */\n\tgetPersonnalInputs = () => {\n\t\tconst concatInputs = { ...TcsKeyboardInputs, ...TcsControllerInputs };\n\t\tfor (let key in concatInputs) {\n\t\t\tconst currInput: TcsInput = {\n\t\t\t\tinputName: key,\n\t\t\t\t//@ts-ignore\n\t\t\t\tinputKey: concatInputs[key],\n\t\t\t};\n\t\t\tthis.personalInputs.push(currInput);\n\t\t}\n\t};\n\n\t/**\n\t * Change a key\n\t * @param inputName key by default\n\t * @param inputKey New input\n\t * @returns boolean\n\t */\n\tsetInput = (inputName: string, inputKey: string | number) => {\n\t\tconst inputAlreadyUsed = this.personalInputs.some(\n\t\t\t(input) => input.inputKey == inputKey,\n\t\t);\n\t\tif (!inputAlreadyUsed) {\n\t\t\tconst currInput = this.personalInputs.find(\n\t\t\t\t(input) => input.inputName == inputName,\n\t\t\t);\n\t\t\tif (!currInput) return false;\n\t\t\tcurrInput.inputKey = inputKey;\n\t\t} else {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.RED}[TcsInputManager] inputKey: ${inputKey} for inputName: ${inputName} already used !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * reset all keys to default\n\t * @param inputName\n\t * @returns\n\t *\n\t * TO CHANGE\n\t */\n\tresetInputsDefault = () => {\n\t\tthis.personalInputs = [];\n\t\tconst concatInputs = { ...TcsKeyboardInputs, ...TcsControllerInputs };\n\t\tfor (let key in concatInputs) {\n\t\t\tconst currInput: TcsInput = {\n\t\t\t\tinputName: key,\n\t\t\t\t//@ts-ignore\n\t\t\t\tinputKey: concatInputs[key],\n\t\t\t};\n\t\t\tthis.personalInputs.push(currInput);\n\t\t}\n\t};\n\n\t/**\n\t * Recovery of the player's personalized input\n\t * @param inputName name of the key\n\t * @returns false or the key\n\t */\n\tgetInput = (inputName: string) => {\n\t\tconst currInput = this.personalInputs.find(\n\t\t\t(input) => input.inputName == inputName,\n\t\t);\n\t\tif (!currInput) return false;\n\n\t\treturn currInput.inputKey;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsLanguageManager.html":{"url":"classes/TcsLanguageManager.html","title":"class - TcsLanguageManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsLanguageManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/language/mixed_languageManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                get\n                            \n                            \n                                getAndReplace\n                            \n                            \n                                loadModuleLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the language manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig(langToAppend: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:98\n                \n            \n\n\n            \n                \n                    Add translations to the current dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    langToAppend\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of keys and their translation in the current configured language\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:28\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Translation in the specified language in the configuration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAndReplace\n                        \n                        \n                    \n                \n            \n            \n                \ngetAndReplace(key: string, replace: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:44\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key and fill it with values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                                \n                                    replace\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Map of key and their values to find and replace in the translation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Translation in the specified language in the configuration, filled with specified values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadModuleLang\n                        \n                        \n                    \n                \n            \n            \n                \nloadModuleLang(module: TcsModule, language: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:67\n                \n            \n\n\n            \n                \n                    Get the translations of the specified module and add it to the dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Module informations to load the lang config from\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en-EN'\n                                    \n\n                                    \n                                        Name of the current language to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsLanguageManager {\n\tprivate lang: object;\n\n\t/**\n\t * Initialize the language manager\n\t */\n\tconstructor() {\n\t\tthis.lang =\n\t\t\tJSON.parse(\n\t\t\t\tLoadResourceFile(\n\t\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t\t`src/assets/lang/${TCS_CONFIG.lang}.json`,\n\t\t\t\t),\n\t\t\t) || {};\n\t}\n\n\t/**\n\t * Get the translation of the specified key\n\t * @param key Translation to find\n\t * @returns Translation in the specified language in the configuration\n\t */\n\tget(key: string): String {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\treturn this.lang[key] || '';\n\t}\n\n\t/**\n\t * Get the translation of the specified key and fill it with values\n\t * @param key Translation to find\n\t * @param replace Map of key and their values to find and replace in the translation\n\t * @returns Translation in the specified language in the configuration, filled with specified values\n\t */\n\tgetAndReplace(key: string, replace: Object): string {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\tlet result = this.lang[key] || '';\n\n\t\tfor (let objKey in replace) {\n\t\t\t//@ts-ignore\n\t\t\tconst replaceTo = replace[objKey];\n\t\t\tresult = result.replace(`{${objKey}}`, replaceTo);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get the translations of the specified module and add it to the dictionnary\n\t * @param module Module informations to load the lang config from\n\t * @param language Name of the current language to load\n\t */\n\tloadModuleLang(module: TcsModule, language: String = 'en-EN') {\n\t\tconst id = module.getId();\n\n\t\tconst dict = JSON.parse(\n\t\t\tLoadResourceFile(\n\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t`src/assets/lang/${id}/${language}.json`,\n\t\t\t),\n\t\t);\n\n\t\tif (!dict) {\n\t\t\tif (language !== 'en-EN') {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}. Trying to load language 'en-EN'...`,\n\t\t\t\t);\n\t\t\t\tthis.loadModuleLang(module);\n\t\t\t} else {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addConfig(dict);\n\t}\n\n\t/**\n\t * Add translations to the current dictionnary\n\t * @param langToAppend List of keys and their translation in the current configured language\n\t */\n\taddConfig(langToAppend: Object) {\n\t\tthis.lang = { ...this.lang, ...langToAppend };\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModule.html":{"url":"classes/TcsModule.html","title":"class - TcsModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_module.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyMethod\n                            \n                            \n                                    Private\n                                launchMethod\n                            \n                            \n                                    Private\n                                moduleInfos\n                            \n                            \n                                moduleLaunched\n                            \n                            \n                                shouldLaunch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkVersion\n                            \n                            \n                                destroyModule\n                            \n                            \n                                getDependencies\n                            \n                            \n                                getId\n                            \n                            \n                                initModule\n                            \n                            \n                                    Private\n                                isVersionSuperior\n                            \n                            \n                                printDebug\n                            \n                            \n                                setDestroyModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n                \n                    \n                            Create a new Tcs module instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleInfos\n                                                  \n                                                        \n                                                                        TcsModuleInfos | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        launchMethod\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Method to launch when the module is ready\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            launchMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleLaunched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldLaunch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:115\n                \n            \n\n\n            \n                \n                    Check with github the last version of the module to know if the current module is up to date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyModule\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:71\n                \n            \n\n\n            \n                \n                    Stop the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ngetDependencies()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:56\n                \n            \n\n\n            \n                \n                    Get the list of the current module dependencies\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        list of current module dependencies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:48\n                \n            \n\n\n            \n                \n                    Get the id of the current module\n\n\n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        id of the current module\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initModule\n                        \n                        \n                    \n                \n            \n            \n                \ninitModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:95\n                \n            \n\n\n            \n                \n                    Starts the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVersionSuperior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVersionSuperior(current: String, compare: String, currentStep: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:160\n                \n            \n\n\n            \n                \n                    Check if the current version is superior at the compared one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    current\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Latest version number of the module\n\n                                    \n                                \n                                \n                                    compare\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Version to compare to\n\n                                    \n                                \n                                \n                                    currentStep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Step on the string version of the module (splitted by dot)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns true if the current version is superior to the compared version. Returns false if not.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printDebug\n                        \n                        \n                    \n                \n            \n            \n                \nprintDebug(message: String, messageColor: ConsoleColors)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:181\n                \n            \n\n\n            \n                \n                    Print a debug message to the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to print in the console, a prefix is concatened to it (category/name)\n\n                                    \n                                \n                                \n                                    messageColor\n                                    \n                                                ConsoleColors\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ConsoleColors.YELLOW\n                                    \n\n                                    \n                                        Color of the current message in the console, yellow by default\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDestroyModule\n                        \n                        \n                    \n                \n            \n            \n                \nsetDestroyModule(destroyMethod: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:64\n                \n            \n\n\n            \n                \n                    Set the method that will be called when the module has to be stopped\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    destroyMethod\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method that will be called when the module is stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModule {\n\t//@ts-ignore\n\tprivate moduleInfos: TcsModuleInfos;\n\tprivate launchMethod: Function;\n\tprivate destroyMethod: Function;\n\n\tmoduleLaunched: Boolean;\n\tshouldLaunch: Boolean;\n\n\t/**\n\t * Create a new Tcs module instance\n\t * @param moduleType Type of the current module\n\t * @param moduleName Name of the current module, as if it was a ressource\n\t * @param launchMethod Method to launch when the module is ready\n\t * @param moduleDependencies List of modules ids this module depends on\n\t */\n\tconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function) {\n\t\tthis.shouldLaunch = true;\n\n\t\tif (moduleInfos != null) {\n\t\t\tthis.moduleInfos = moduleInfos;\n\n\t\t\tif (\n\t\t\t\tTCS_CONFIG.versionningCheck &&\n\t\t\t\tTCS.isServerSided &&\n\t\t\t\tthis.moduleInfos.git\n\t\t\t) {\n\t\t\t\tthis.checkVersion();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t\tthis.launchMethod = launchMethod;\n\t\tthis.destroyMethod = () => {};\n\t\tthis.moduleLaunched = false;\n\t}\n\n\t/**\n\t * Get the id of the current module\n\t * @returns id of the current module\n\t */\n\tgetId(): String {\n\t\treturn `${this.moduleInfos.moduleType}/${this.moduleInfos.moduleName}`;\n\t}\n\n\t/**\n\t * Get the list of the current module dependencies\n\t * @returns list of current module dependencies\n\t */\n\tgetDependencies(): Array {\n\t\treturn this.moduleInfos.dependencies || [];\n\t}\n\n\t/**\n\t * Set the method that will be called when the module has to be stopped\n\t * @param destroyMethod Method that will be called when the module is stopped\n\t */\n\tsetDestroyModule(destroyMethod: Function) {\n\t\tthis.destroyMethod = destroyMethod;\n\t}\n\n\t/**\n\t * Stop the module\n\t */\n\tdestroyModule() {\n\t\tthis.printDebug('Shutting down module !', ConsoleColors.RED);\n\t\ttry {\n\t\t\tTCS.threads.removeThreadByModule(this);\n\t\t\tthis.moduleLaunched = false;\n\t\t\tthis.shouldLaunch = false;\n\t\t\tthis.destroyMethod();\n\t\t\tthis.printDebug(\n\t\t\t\t'Module has been stopped correctly !',\n\t\t\t\tConsoleColors.GREEN,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while shutting down the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Starts the module\n\t */\n\tinitModule() {\n\t\tthis.printDebug('Starting module !');\n\t\ttry {\n\t\t\tthis.launchMethod(this);\n\t\t\tTCS.lang.loadModuleLang(this, TCS_CONFIG.lang);\n\t\t\tthis.moduleLaunched = true;\n\t\t\tthis.printDebug('Module has been started !', ConsoleColors.GREEN);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while starting the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Check with github the last version of the module to know if the current module is up to date.\n\t */\n\tprivate checkVersion() {\n\t\tconst https = require('https');\n\t\tconst options = {\n\t\t\thostname: 'raw.githubusercontent.com',\n\t\t\tport: 443,\n\t\t\tpath: `/${this.moduleInfos.git}/main/.tcs.json`,\n\t\t\tmethod: 'GET',\n\t\t};\n\n\t\tconst req = https.request(options, (res: any) => {\n\t\t\tres.on('data', (d: any) => {\n\t\t\t\tconst buf = Buffer.from(d);\n\t\t\t\tconst json = JSON.parse(buf.toString('utf-8'));\n\n\t\t\t\tif (!json.version) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isVersionSuperior(json.version, this.moduleInfos.version)) {\n\t\t\t\t\tTCS.warning(\n\t\t\t\t\t\t`Module ${this.getId()} has a new version (current: ${\n\t\t\t\t\t\t\tthis.moduleInfos.version\n\t\t\t\t\t\t} | new version : ${json.version}) ! \\n${\n\t\t\t\t\t\t\tConsoleColors.YELLOW\n\t\t\t\t\t\t}You can download it at : ${this.moduleInfos.git}${\n\t\t\t\t\t\t\tConsoleColors.RESET\n\t\t\t\t\t\t}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treq.on('error', (error: any) => {\n\t\t\tconsole.error(error);\n\t\t});\n\n\t\treq.end();\n\t}\n\n\t/**\n\t * Check if the current version is superior at the compared one\n\t * @param current Latest version number of the module\n\t * @param compare Version to compare to\n\t * @param currentStep Step on the string version of the module (splitted by dot)\n\t * @returns Returns true if the current version is superior to the compared version. Returns false if not.\n\t */\n\tprivate isVersionSuperior(\n\t\tcurrent: String,\n\t\tcompare: String,\n\t\tcurrentStep: number = 0,\n\t): boolean {\n\t\tconst currentNumber = parseInt(current.split('.')[currentStep]);\n\t\tconst compareNumber = parseInt(compare.split('.')[currentStep]);\n\n\t\tif (currentNumber == compareNumber) {\n\t\t\tif (currentStep == 2) return false;\n\t\t\treturn this.isVersionSuperior(current, compare, currentStep + 1);\n\t\t} else {\n\t\t\treturn currentNumber > compareNumber;\n\t\t}\n\t}\n\n\t/**\n\t * Print a debug message to the console\n\t * @param message Message to print in the console, a prefix is concatened to it (category/name)\n\t * @param messageColor Color of the current message in the console, yellow by default\n\t */\n\tprintDebug(\n\t\tmessage: String,\n\t\tmessageColor: ConsoleColors = ConsoleColors.YELLOW,\n\t) {\n\t\tif (TCS_CONFIG.debugMode)\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE} [${this.getId()}] ${messageColor}`,\n\t\t\t\tmessage,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsModuleInfos.html":{"url":"interfaces/TcsModuleInfos.html","title":"interface - TcsModuleInfos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsModuleInfos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/modules/mixed_moduleInfos.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dependencies\n                                \n                                \n                                            Optional\n                                        git\n                                \n                                \n                                        moduleName\n                                \n                                \n                                        moduleType\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dependencies\n                                    \n                                \n                                \n                                    \n                                        dependencies:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git\n                                    \n                                \n                                \n                                    \n                                        git:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleName\n                                    \n                                \n                                \n                                    \n                                        moduleName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleType\n                                    \n                                \n                                \n                                    \n                                        moduleType:         TcsModuleTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsModuleTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsModuleInfos {\n\tmoduleType: TcsModuleTypes;\n\tmoduleName: String;\n\tversion: String;\n\n\tgit?: String;\n\tdependencies?: String[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModuleManager.html":{"url":"classes/TcsModuleManager.html","title":"class - TcsModuleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModuleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_modulesManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findModuleById\n                            \n                            \n                                    Private\n                                gameModules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addModuleToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the module manager.\nShould only be called by the core !\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findModuleById\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:66\n                            \n                        \n\n                \n                    \n                        Get a loaded module by it's id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        id\n                                                        \n                                                                Id of the module to find\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToGame\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToGame(newModule: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:50\n                \n            \n\n\n            \n                \n                    Add a module to the current game and loads it when it is ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newModule\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module to add and load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModuleManager {\n\tprivate gameModules: Array;\n\n\t/**\n\t * Initialize the module manager.\n\t * Should only be called by the core !\n\t */\n\tconstructor() {\n\t\tthis.gameModules = [];\n\t\tsetTick(() =>\n\t\t\tthis.gameModules\n\t\t\t\t.filter((module) => !module.moduleLaunched)\n\t\t\t\t.forEach((module) => {\n\t\t\t\t\tconst remainingDependenciesToStart = module\n\t\t\t\t\t\t.getDependencies()\n\t\t\t\t\t\t.filter((mod) => {\n\t\t\t\t\t\t\tconst foundModule = this.findModuleById(mod);\n\n\t\t\t\t\t\t\tif (!foundModule) {\n\t\t\t\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t\t\t\t`Can't start module ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + module.getId() + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} because dependency ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + mod + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} isn't installed.`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn !foundModule.moduleLaunched;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (remainingDependenciesToStart.length == 0 && module.shouldLaunch)\n\t\t\t\t\t\tmodule.initModule();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Add a module to the current game and loads it when it is ready\n\t * @param newModule Module to add and load\n\t */\n\taddModuleToGame(newModule: TcsModule) {\n\t\tif (!this.findModuleById(newModule.getId()))\n\t\t\tthis.gameModules.push(newModule);\n\t\telse\n\t\t\tTCS.error(\n\t\t\t\t`Can't add module ${ConsoleColors.YELLOW}${newModule.getId()}${\n\t\t\t\t\tConsoleColors.RED\n\t\t\t\t} because a module with the same id already exists !`,\n\t\t\t);\n\t}\n\n\t/**\n\t * Get a loaded module by it's id\n\t * @param id Id of the module to find\n\t * @returns The module if found, undefined if it doesn't exist\n\t */\n\tfindModuleById = (id: String): TcsModule | undefined =>\n\t\tthis.gameModules.find((mod) => mod.getId() === id);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThread.html":{"url":"classes/TcsThread.html","title":"class - TcsThread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threads.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugExec\n                            \n                            \n                                delay\n                            \n                            \n                                    Private\n                                execs\n                            \n                            \n                                isThreadFull\n                            \n                            \n                                    Private\n                                threadId\n                            \n                            \n                                    Private\n                                tick\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendThread\n                            \n                            \n                                containsThreadById\n                            \n                            \n                                getThreadTimer\n                            \n                            \n                                removeModuleThreads\n                            \n                            \n                                removeThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timer: number)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n                \n                    \n                            Create a new thread with the specified delay\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timer\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Delay between each executions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debugExec\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:57\n                            \n                        \n\n                \n                    \n                        Execute a thread function in debug mode\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        thread\n                                                        \n                                                                Thread to execute\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:74\n                            \n                        \n\n                \n                    \n                        Wait the specified time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        time\n                                                        \n                                                                Time of the delay\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isThreadFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendThread\n                        \n                        \n                    \n                \n            \n            \n                \nappendThread(module: TcsModule, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:83\n                \n            \n\n\n            \n                \n                    Append a function to execute after the delay in the current thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module the thread comes from\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsThreadById\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsThreadById(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:132\n                \n            \n\n\n            \n                \n                    Get if a thread is actually contained in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the thread is contained, false else\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThreadTimer\n                        \n                        \n                    \n                \n            \n            \n                \ngetThreadTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:49\n                \n            \n\n\n            \n                \n                    Get current thread delay between each executions\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Thread delay\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeModuleThreads\n                        \n                        \n                    \n                \n            \n            \n                \nremoveModuleThreads(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:115\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads have to be stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:100\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThread {\n\tprivate threadId: number;\n\tprivate execs: Array;\n\tprivate timer: number;\n\tprivate tick: number;\n\n\tisThreadFull: boolean;\n\n\t/**\n\t * Create a new thread with the specified delay\n\t * @param timer Delay between each executions\n\t */\n\tconstructor(timer: number) {\n\t\tthis.execs = [];\n\t\tthis.timer = timer;\n\t\tthis.isThreadFull = false;\n\t\tthis.threadId = +new Date();\n\n\t\tthis.tick = setTick(async () => {\n\t\t\tawait this.delay(this.timer);\n\n\t\t\tconst benchmark = new TcsBenchmark();\n\t\t\tthis.execs.forEach((thread) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (TCS_CONFIG.debugMode) this.debugExec(thread);\n\t\t\t\t\telse thread.exec();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t`Error encountered in thread ${ConsoleColors.YELLOW}${thread.id}${ConsoleColors.RED}: \\n${e}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst time = benchmark.stop();\n\n\t\t\tif (time > TCS_CONFIG.maxExecTimePerThread) this.isThreadFull = true;\n\t\t});\n\t}\n\n\t/**\n\t * Get current thread delay between each executions\n\t * @returns Thread delay\n\t */\n\tgetThreadTimer(): number {\n\t\treturn this.timer;\n\t}\n\n\t/**\n\t * Execute a thread function in debug mode\n\t * @param thread Thread to execute\n\t */\n\tdebugExec = (thread: TcsThreadExec) => {\n\t\tconst benchmark = new TcsBenchmark();\n\t\tthread.exec();\n\t\tconst time = benchmark.stop();\n\n\t\tif (time >= 1) {\n\t\t\tTCS.warning(\n\t\t\t\t`Thread ${thread.id.split('-')[1]} took ${time} ms to execute !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Wait the specified time\n\t * @param time Time of the delay\n\t * @returns Promise that is resolved after the delay\n\t */\n\tdelay = (time: number): Promise =>\n\t\tnew Promise((resolve, _) => setTimeout(resolve, time));\n\n\t/**\n\t * Append a function to execute after the delay in the current thread\n\t * @param module Module the thread comes from\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tappendThread(module: TcsModule, exec: Function): String {\n\t\tconst threadId = `${this.threadId}-${module.getId()}-${this.execs.length}`;\n\t\tconst thread: TcsThreadExec = {\n\t\t\tid: threadId,\n\t\t\texec: exec,\n\t\t};\n\n\t\tthis.execs.push(thread);\n\n\t\treturn threadId;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param id Id of the thread to remove\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveThread(id: String): boolean {\n\t\tthis.execs = this.execs.filter((thread) => thread.id !== id);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param module Module from which the threads have to be stopped\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveModuleThreads(module: TcsModule): boolean {\n\t\tthis.execs = this.execs.filter(\n\t\t\t(thread) => thread.id.split('-')[1] !== module.getId(),\n\t\t);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get if a thread is actually contained in\n\t * @param id Id to search for\n\t * @returns True if the thread is contained, false else\n\t */\n\tcontainsThreadById(id: String): boolean {\n\t\treturn this.execs.find((thread) => thread.id === id) != null;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsThreadExec.html":{"url":"interfaces/TcsThreadExec.html","title":"interface - TcsThreadExec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsThreadExec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/threads/mixed_threadInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exec\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsThreadExec {\n\tid: String;\n\texec: Function;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThreadsManager.html":{"url":"classes/TcsThreadsManager.html","title":"class - TcsThreadsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThreadsManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threadsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                threadsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createThread\n                            \n                            \n                                removeThread\n                            \n                            \n                                removeThreadByModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the threads manager\nShould only be called by the core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThread[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createThread\n                        \n                        \n                    \n                \n            \n            \n                \ncreateThread(module: TcsModule, timer: number, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:25\n                \n            \n\n\n            \n                \n                    Create a new thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module that creates the thread\n\n                                    \n                                \n                                \n                                    timer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Delay between each executions\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:46\n                \n            \n\n\n            \n                \n                    Stop and deletes a thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThreadByModule\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThreadByModule(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:64\n                \n            \n\n\n            \n                \n                    Stop all the threads that come from the specified module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads to stop come from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThreadsManager {\n\tprivate threadsList: TcsThread[];\n\n\t/**\n\t * Initialize the threads manager\n\t * Should only be called by the core\n\t */\n\tconstructor() {\n\t\tthis.threadsList = [];\n\t}\n\n\t/**\n\t * Create a new thread\n\t * @param module Module that creates the thread\n\t * @param timer Delay between each executions\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tcreateThread(module: TcsModule, timer: number, exec: Function): String {\n\t\tlet found = false;\n\t\tconst currentThread =\n\t\t\tthis.threadsList.find((thread) => {\n\t\t\t\tif (thread.getThreadTimer() == timer && !thread.isThreadFull) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}) || new TcsThread(timer);\n\t\tif (!found) {\n\t\t\tthis.threadsList.push(currentThread);\n\t\t}\n\n\t\treturn currentThread.appendThread(module, exec);\n\t}\n\n\t/**\n\t * Stop and deletes a thread\n\t * @param id Id of the thread to delete\n\t */\n\tremoveThread(id: String) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tif (thread.containsThreadById(id)) {\n\t\t\t\tconst shouldDeleteThread = thread.removeThread(id);\n\n\t\t\t\tif (shouldDeleteThread) {\n\t\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stop all the threads that come from the specified module\n\t * @param module Module from which the threads to stop come from\n\t */\n\tremoveThreadByModule(module: TcsModule) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tconst shouldDeleteThread = thread.removeModuleThreads(module);\n\n\t\t\tif (shouldDeleteThread) {\n\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\treturn this.removeThreadByModule(module);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContribution\nHere are the contribution guidelines. Please, read it before contributing.\nDocumentation\n\nPull requests for docs update, if needed\nCode-level documentation expectations\n100% documentation coverage for pull requests\nUpdate readme if needed\nUpdate doc if needed\n\n\n\nEnvironment setup\nTCS is using Prettier to format the code. You must use our format style in your push requests.\nCompiling\nYou must compile your TS file with these actions before sending a pull request. The build will appear in the build folder.\nnpm run precompileRender the documentation\nTCS uses compodoc to render the documentation automatically. If you need to update the documentation due to code changes, please follow these steps :\nnpm install -g @compodoc/compodoc\n\nnpm run docDependencies\nThe current project depends on :\n\n@citizenfx/client\n@citizenfx/server\nprettier\ntslint\ntypescript\nfs-extra\nmerge-files\n\nExecute the following command to install them :\nnpm i\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/assets/mixed_config.ts\n            \n            variable\n            TCS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/srv_databaseConfig.ts\n            \n            variable\n            DATABASE_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/librairies/benchmark/mixed_benchmark.ts\n            \n            class\n            TcsBenchmark\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/core/librairies/callbacks/mixed_callbackManager.ts\n            \n            class\n            TcsCallbackManager\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/core/librairies/database/mongo/srv_Mongo.ts\n            \n            class\n            MongoDatabase\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/core/librairies/database/sql/srv_Mysql.ts\n            \n            class\n            MysqlDatabase\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_MakeRequest.ts\n            \n            class\n            MakeRequest\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_MakeRequest.ts\n            \n            class\n            MakeRequestMongo\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_MakeRequest.ts\n            \n            class\n            MakeRequestSQL\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_database.ts\n            \n            class\n            TcsDatabaseManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventListenerClass.ts\n            \n            class\n            TcsEventListener\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventManager.ts\n            \n            class\n            TcsEventManager\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            ActionInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            TcsInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputsManager.ts\n            \n            class\n            TcsInputManager\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/core/librairies/language/mixed_languageManager.ts\n            \n            class\n            TcsLanguageManager\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_module.ts\n            \n            class\n            TcsModule\n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_modulesManager.ts\n            \n            class\n            TcsModuleManager\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threads.ts\n            \n            class\n            TcsThread\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threadsManager.ts\n            \n            class\n            TcsThreadsManager\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/core/mixed_tcs.ts\n            \n            class\n            TcsCore\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfosFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoadedFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            TCS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            deathThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            GetPlayerByEntityID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_vehicle.ts\n            \n            function\n            vehicleThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            isWeaponInArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            weaponThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/mixed_moduleInfos.ts\n            \n            variable\n            eventsModulesInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/database/srv_database.ts\n            \n            interface\n            database\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/types/database/srv_sqlColumn.ts\n            \n            interface\n            sqlColumn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsClientEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/modules/mixed_moduleInfos.ts\n            \n            interface\n            TcsModuleInfos\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/threads/mixed_threadInterface.ts\n            \n            interface\n            TcsThreadExec\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/database.html":{"url":"interfaces/database.html","title":"interface - database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/database/srv_database.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    delete\n                                \n                                \n                                    ensureColumns\n                                \n                                \n                                    get\n                                \n                                \n                                    insert\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(table: string, query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:40\n                \n            \n\n\n            \n                \n                    Delete rows / documents from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to delete the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current query to select the rows / documents to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ensureColumns\n                        \n                        \n                    \n                \n            \n            \n                \nensureColumns(table: string, columns: sqlColumn[])\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:7\n                \n            \n\n\n            \n                \n                    Will create the table with the specified columns if they don't exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to create the columns in\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                                sqlColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of the columns, specified by their name and values type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(tables: string[], query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:14\n                \n            \n\n\n            \n                \n                    Get the values from the specified query and tables\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tables\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tables to get the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current query to fetch the values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(table: string, object: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:33\n                \n            \n\n\n            \n                \n                    Insert the object in the specified table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to insert the value from\n\n                                    \n                                \n                                \n                                    object\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Document to insert to the specified table\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(table: string, query: Record, newValues: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:22\n                \n            \n\n\n            \n                \n                    Update rows / documents from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to update the value from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current query to select the rows / documents to update\n\n                                    \n                                \n                                \n                                    newValues\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New values to set from the selected rows / documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        interface database {\n\t/**\n\t * Will create the table with the specified columns if they don't exist\n\t * @param table Table to create the columns in\n\t * @param columns List of the columns, specified by their name and values type\n\t */\n\tensureColumns(table: string, columns: sqlColumn[]): void;\n\n\t/**\n\t * Get the values from the specified query and tables\n\t * @param tables Tables to get the values from\n\t * @param query Current query to fetch the values\n\t */\n\tget(tables: string[], query: Record): MakeRequest;\n\n\t/**\n\t * Update rows / documents from the database\n\t * @param table Table to update the value from\n\t * @param query Current query to select the rows / documents to update\n\t * @param newValues New values to set from the selected rows / documents\n\t */\n\tupdate(\n\t\ttable: string,\n\t\tquery: Record,\n\t\tnewValues: Record,\n\t): Promise;\n\n\t/**\n\t * Insert the object in the specified table\n\t * @param table Table to insert the value from\n\t * @param object Document to insert to the specified table\n\t */\n\tinsert(table: string, object: Record): Promise;\n\n\t/**\n\t * Delete rows / documents from the database\n\t * @param table Table to delete the values from\n\t * @param query Current query to select the rows / documents to delete\n\t */\n\tdelete(table: string, query: Record): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            mongodb : ^3.6.6\n        \n            mysql2 : ^2.2.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deathThreadChecker   (src/.../cli_death.ts)\n                        \n                        \n                            GetPlayerByEntityID   (src/.../cli_death.ts)\n                        \n                        \n                            isWeaponInArray   (src/.../cli_weapon.ts)\n                        \n                        \n                            vehicleThreadChecker   (src/.../cli_vehicle.ts)\n                        \n                        \n                            weaponThreadChecker   (src/.../cli_weapon.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/core/events/client/cli_death.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            deathThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \ndeathThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetPlayerByEntityID\n                        \n                        \n                    \n                \n            \n            \n                \nGetPlayerByEntityID(id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_weapon.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isWeaponInArray\n                        \n                        \n                    \n                \n            \n            \n                \nisWeaponInArray(weaponArray, weaponHash)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weaponArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weaponHash\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            weaponThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nweaponThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_vehicle.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            vehicleThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nvehicleThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTCS Core\n\n    \nPresentation\nTCS is an open source FiveM framework developped with TypeScript language.\nYou can download the last version, ready to start on FiveM resources at the releases page.\nFind out how to contribute by reading the contributing guide.\nDon't forget to read the Code of Conduct.\n\nFor any question about the core, you can directly ask it into the \"discution\" section of this repository\n\nBasic modules\nYou can learn more about the basic modules (such as the database management) here.\nGit sources\nTo download the latest sources of TCS, execute this command :\ngit clone https://github.com/FiveMTCS/Core.git\nIssues\nIt is possible that you experience some issues while using TCS, especially with the first versions of it. Please, first verify that you are using the latest version and then report the issue by clicking here.\nGet started\nIt is very simple to use TCS :\n\nDownload the latest release here\n\nDrag and drop the folder to your FiveM server resources folder\n\nAdd the next command to your server.cfg\n\n\n\nensure tcs\nDeveloper tools\nTo develop a new TCS module, follow these steps :\n\nCreate a folder that will contain the sources of your module\n\nExecute these commands :\n\n\nnpm init\nnpm i -D @citizenfx/client\nnpm i -D @citizenfx/server\nnpm i -D @fivemtcs/types\n\nExport the sources and place them into the modules/ folder inside the TCS Core resource.\n\n\nYou can find more informations by looking at the Demo project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 FiveMTCS\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sqlColumn.html":{"url":"interfaces/sqlColumn.html","title":"interface - sqlColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  sqlColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/database/srv_sqlColumn.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        column\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        column\n                                    \n                                \n                                \n                                    \n                                        column:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         sqlTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         sqlTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum sqlTypes {\n\t// string data types\n\tCHAR = 'CHAR(255)',\n\tVARCHAR = 'VARCHAR(255)',\n\tTINYTEXT = 'TINYTEXT(255)',\n\tTEXT = 'TEXT(65535)',\n\tMEDIUMTEXT = 'MEDIUMTEXT(16777215)',\n\tLONGTEXT = 'LONGTEXT(4294967295)',\n\tBINARY = 'BINARY(255)',\n\tVARBINARY = 'VARBINARY(255)',\n\n\tINT = 'INT',\n\tDECIMAL = 'DECIMAL(10, 3)',\n\n\tDATE = 'DATE',\n\tDATETIME = 'DATETIME',\n\tTIMESTAMP = 'TIMESTAMP ',\n}\n\ninterface sqlColumn {\n\tcolumn: String;\n\ttype: sqlTypes;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DATABASE_CONFIG   (src/.../srv_databaseConfig.ts)\n                        \n                        \n                            eventsModulesInfos   (src/.../mixed_moduleInfos.ts)\n                        \n                        \n                            loadTcsModuleInfos   (src/.../mixed_main.ts)\n                        \n                        \n                            loadTcsModuleInfosFunction   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoaded   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoadedFunctions   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS_CONFIG   (src/.../mixed_config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/srv_databaseConfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tnosql: true,\n\taddress: 'localhost',\n\tport: 3307, // Mongo : 27707, MariaDb :3307\n\tusername: 'root',\n\tpassword: '',\n\tdatabaseName: 'tcs',\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/core/events/mixed_moduleInfos.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventsModulesInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    src/mixed_main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tloadTcsModuleInfosFunction.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfosFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tonTcsLoadedFunctions.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoadedFunctions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TCS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCore\n\n                        \n                    \n\n\n            \n        \n\n    src/assets/mixed_config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TCS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tlang: 'fr-FR', // Current lang the scripts should be on\n\n\tdebugMode: true, // If set to true, debug informations are going to be printed in the console\n\n\tmaxExecTimePerThread: 10, // Maximum amount of time (in ms) a thread should take to execute in a tick\n\n\tshowErrorsAnyCase: true, // Should print errors in console even if debug mode isn't activated ?\n\n\tshowWarningsAnyCase: true, // Should print warnings in console even if debug mode isn't activated ?\n\n\tversionningCheck: true, // Check if modules are at their latest version\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
