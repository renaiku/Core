var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/TcsBenchmark.html",[0,0.174,1,1.716]],["body/classes/TcsBenchmark.html",[0,0.198,1,2.532,2,0.94,3,0.639,4,0.553,5,0.473,6,2.661,7,1.06,8,0.398,9,0.827,10,1.713,11,3.549,12,1.545,13,3.25,14,1.522,15,1.522,16,4.238,17,3.445,18,3.427,19,4.039,20,0.473,21,0.046,22,2.462,23,3.274,24,1.545,25,4.238,26,3.427,27,5.273,28,2.922,29,1.545,30,2.221,31,4.238,32,4.238,33,1.716,34,1.06,35,0.026,36,0.034,37,0.026]],["title/interfaces/TcsClientEvent.html",[38,0.93,39,1.716]],["body/interfaces/TcsClientEvent.html",[3,0.738,4,0.639,5,0.547,8,0.46,9,0.906,20,0.547,21,0.046,22,2.632,35,0.03,36,0.037,37,0.03,38,1.503,39,2.773,40,1.982,41,2.26,42,3.773,43,2.632,44,4.256,45,3.074,46,3.201,47,3.201,48,3.201,49,2.432,50,2.608,51,2.26,52,2.608,53,2.608,54,1.982]],["title/classes/TcsCore.html",[0,0.174,55,1.716]],["body/classes/TcsCore.html",[0,0.128,2,0.607,3,0.413,4,0.357,5,0.306,7,0.685,8,0.257,9,0.61,12,1.14,14,1.205,15,1.615,20,0.706,21,0.047,29,1.357,35,0.017,36,0.025,37,0.017,49,1.639,55,1.869,56,1.718,57,5.349,58,3.722,59,3.722,60,2.567,61,2.224,62,2.567,63,2.458,64,3.498,65,4.986,66,3.127,67,1.869,68,1.448,69,1.639,70,2.224,71,2.114,72,2.157,73,2.224,74,2.114,75,2.224,76,2.114,77,2.224,78,2.114,79,3.127,80,1.818,81,2.114,82,4.596,83,2.127,84,3.865,85,2.157,86,1.357,87,1.357,88,1.357,89,1.357,90,3.169,91,3.498,92,1.723,93,3.127,94,2.114,95,3.127,96,2.114,97,3.343,98,3.127,99,2.114,100,2.114,101,2.155,102,2.114,103,1.718,104,2.114,105,1.458,106,1.108,107,1.263,108,3.127,109,2.114,110,1.718,111,1.458,112,1.108,113,2.114,114,2.114,115,1.357,116,2.567,117,2.114,118,3.025,119,2.114,120,2.114,121,2.114,122,2.114]],["title/interfaces/TcsEvent.html",[38,0.93,43,1.505]],["body/interfaces/TcsEvent.html",[3,0.71,4,0.615,5,0.526,8,0.443,9,0.884,20,0.713,21,0.046,22,1.906,35,0.029,36,0.036,37,0.029,38,1.467,39,2.174,40,1.906,41,2.174,42,2.957,43,2.586,44,2.957,45,2.957,46,3.562,47,3.125,48,3.125,49,2.374,50,3.562,51,2.949,52,3.562,53,3.562,54,2.586]],["title/classes/TcsEventListener.html",[0,0.174,123,1.716]],["body/classes/TcsEventListener.html",[0,0.151,2,0.719,3,0.488,4,0.423,5,0.362,7,0.81,8,0.304,9,0.689,10,1.775,12,1.288,14,0.81,15,1.52,20,0.739,21,0.046,24,1.775,29,1.493,30,1.851,34,0.81,35,0.02,36,0.028,37,0.02,50,3.358,51,2.804,53,3.358,54,2.146,83,2.059,86,1.288,87,1.622,88,1.288,89,1.288,92,1.158,115,1.493,123,2.111,124,2.034,125,4.282,126,3.532,127,4.448,128,3.532,129,2.406,130,3.532,131,2.111,132,5.111,133,2.111,134,2.658,135,3.263,136,3.616,137,2.871,138,3.532,139,3.532,140,3.532,141,2.502,142,3.532,143,2.502,144,2.871,145,1.027,146,0.912,147,2.871,148,2.502,149,3.532,150,3.532,151,2.502,152,2.502]],["title/classes/TcsEventManager.html",[0,0.174,70,1.716]],["body/classes/TcsEventManager.html",[0,0.141,2,0.672,3,0.456,4,0.395,5,0.338,7,0.757,8,0.41,9,0.657,10,1.736,14,1.277,15,1.481,20,0.487,21,0.047,30,1.764,34,0.757,35,0.019,36,0.027,37,0.019,43,2.261,52,2.321,69,1.764,70,2.011,83,1.997,86,1.227,87,1.227,89,1.227,106,1.225,107,1.397,115,1.227,123,2.357,125,3.988,134,2.011,135,3.269,136,3.507,137,3.507,144,2.736,145,1.382,146,1.227,147,3.507,153,1.901,154,3.944,155,3.944,156,3.944,157,3.944,158,3.366,159,2.736,160,2.011,161,3.366,162,3.366,163,3.366,164,3.366,165,2.338,166,2.578,167,2.338,168,2.338,169,2.338,170,3.366,171,2.338,172,4.761,173,2.338,174,3.944,175,3.944,176,3.366,177,2.338,178,1.901,179,2.338,180,2.338,181,2.338,182,2.338,183,2.338,184,2.338,185,3.366,186,2.338,187,2.338,188,1.397,189,2.338,190,2.338]],["title/classes/TcsLanguageManager.html",[0,0.174,73,1.716]],["body/classes/TcsLanguageManager.html",[0,0.106,2,0.503,3,0.342,4,0.296,5,0.48,7,0.567,8,0.213,9,0.529,10,1.21,12,0.989,14,1.075,15,1.492,20,0.584,21,0.047,24,1.559,29,1.559,33,1.74,34,1.075,35,0.03,36,0.022,37,0.014,54,2.415,60,2.788,67,1.621,73,1.621,80,1.845,83,2.312,86,1.363,87,1.559,88,1.363,89,1.363,92,1.256,103,2.698,106,2.119,107,2.416,115,1.559,145,0.719,146,0.639,160,1.621,166,2.233,191,1.424,192,2.713,193,2.713,194,2.713,195,2.713,196,4.354,197,2.713,198,1.752,199,3.737,200,3.737,201,3.319,202,2.205,203,2.713,204,5.215,205,2.713,206,2.713,207,1.752,208,4.833,209,2.949,210,3.737,211,2.713,212,4.459,213,1.752,214,2.713,215,4.276,216,2.713,217,2.713,218,2.713,219,1.362,220,1.752,221,2.415,222,2.205,223,3.286,224,3.737,225,4.607,226,2.713,227,2.713,228,2.713,229,1.752,230,3.737,231,2.713,232,2.205,233,1.752,234,2.713,235,1.752,236,1.752,237,1.536,238,1.208,239,2.713,240,1.752,241,2.205,242,2.205,243,2.205,244,1.752,245,1.752,246,1.752]],["title/classes/TcsModule.html",[0,0.174,219,1.178]],["body/classes/TcsModule.html",[0,0.094,2,0.446,3,0.303,4,0.262,5,0.224,7,0.503,8,0.189,9,0.482,10,1.661,12,0.9,13,1.474,14,0.503,15,1.57,17,2.006,20,0.658,21,0.047,24,1.767,29,1.612,34,0.799,35,0.012,36,0.02,37,0.012,61,0.928,63,1.474,64,1.701,68,1.142,72,2.412,80,1.392,84,3.794,86,1.119,87,1.275,88,1.119,89,1.119,90,2.412,91,2.802,92,1.619,97,1.262,101,1.293,105,1.701,106,0.814,107,0.928,111,1.701,112,2.129,115,1.553,116,1.071,118,2.496,129,2.16,131,1.474,133,2.09,145,1.26,146,0.566,202,3.102,219,1.013,221,2.855,232,1.262,237,1.619,247,1.262,248,4.063,249,4.421,250,4.063,251,3.07,252,3.07,253,3.498,254,2.843,255,3.498,256,3.498,257,3.07,258,2.467,259,2.467,260,2.281,261,2.412,262,2.467,263,2.467,264,4.063,265,2.467,266,1.701,267,1.552,268,1.552,269,1.552,270,1.552,271,1.552,272,1.552,273,2.09,274,1.701,275,1.552,276,1.552,277,1.552,278,3.816,279,2.496,280,1.552,281,2.467,282,2.467,283,2.467,284,2.006,285,2.467,286,2.006,287,2.467,288,1.552,289,2.006,290,3.102,291,1.262,292,1.262,293,1.552,294,1.552,295,1.552,296,1.262,297,3.816,298,1.474,299,1.552,300,1.552,301,3.07,302,3.07,303,1.552,304,1.552,305,1.552,306,2.467,307,2.496,308,1.552,309,3.07,310,1.552,311,2.467,312,2.843,313,2.467,314,1.552,315,2.467,316,1.552,317,1.552,318,1.552,319,1.552,320,0.814,321,1.552,322,1.552,323,1.552]],["title/interfaces/TcsModuleInfos.html",[38,0.93,260,1.716]],["body/interfaces/TcsModuleInfos.html",[3,0.708,4,0.613,5,0.524,8,0.441,9,0.883,20,0.767,21,0.045,35,0.029,36,0.036,37,0.029,38,1.174,40,1.9,80,2.076,88,1.881,260,2.702,273,3.083,291,4.194,292,4.194,324,2.947,325,4.194,326,4.194,327,4.006]],["title/classes/TcsModuleManager.html",[0,0.174,75,1.716]],["body/classes/TcsModuleManager.html",[0,0.143,2,0.681,3,0.463,4,0.401,5,0.343,7,0.768,8,0.289,9,0.664,10,1.45,11,1.636,12,1.24,14,1.288,15,1.407,20,0.492,21,0.047,24,1.24,29,1.24,33,1.782,34,1.102,35,0.019,36,0.027,37,0.019,67,2.032,69,1.782,75,2.032,80,0.865,86,1.24,87,1.24,88,0.865,89,1.24,92,1.098,110,2.765,112,1.243,115,1.24,133,2.032,145,0.974,146,0.865,160,2.032,166,2.747,178,1.928,209,2.345,219,1.783,221,2.856,223,2.765,237,2.376,238,1.636,242,1.928,243,1.928,254,1.928,266,2.345,274,2.345,284,2.765,307,3.232,328,1.928,329,3.976,330,3.976,331,3.401,332,3.401,333,2.372,334,3.401,335,3.401,336,3.401,337,2.372,338,3.401,339,3.401,340,3.401,341,3.401,342,2.372,343,2.372,344,2.372,345,2.372,346,2.372,347,3.401,348,2.372,349,2.765,350,3.401,351,2.372,352,2.372,353,1.928,354,2.372,355,2.372,356,2.372,357,1.418,358,2.372,359,2.372,360,2.372,361,2.372,362,2.372,363,2.372,364,2.372,365,2.372,366,1.928,367,2.372,368,2.372]],["title/classes/TcsThread.html",[0,0.174,369,1.716]],["body/classes/TcsThread.html",[0,0.08,1,1.299,2,0.381,3,0.259,4,0.224,5,0.192,7,0.43,8,0.162,9,0.424,10,1.693,12,0.793,13,1.908,14,0.43,15,1.53,18,2.609,19,1.768,20,0.642,21,0.047,22,2.433,24,1.52,26,0.916,28,2.202,29,1.659,30,2.476,33,1.983,34,1.294,35,0.011,36,0.018,37,0.011,62,1.5,63,1.299,64,0.916,72,2.875,80,1.52,83,1.93,85,1.5,86,1.457,87,1.457,88,1.285,89,1.457,101,1.983,105,0.916,111,0.916,112,2.262,115,1.52,116,0.916,129,1.998,131,1.299,134,1.908,145,0.893,146,0.793,188,1.65,219,1.553,221,2.185,237,2.187,238,1.5,241,1.079,261,0.916,274,1.5,290,1.768,298,2.579,312,1.079,349,1.079,357,1.299,369,1.299,370,1.079,371,2.762,372,4.001,373,2.762,374,2.762,375,3.784,376,2.245,377,2.175,378,2.175,379,3.193,380,2.175,381,1.768,382,2.175,383,2.175,384,3.782,385,2.596,386,1.328,387,2.262,388,1.328,389,2.175,390,1.328,391,1.328,392,1.328,393,1.328,394,2.175,395,2.609,396,1.328,397,2.175,398,2.175,399,1.768,400,2.175,401,1.328,402,2.175,403,3.193,404,2.175,405,1.328,406,2.175,407,1.328,408,3.784,409,3.193,410,1.768,411,1.328,412,2.762,413,2.175,414,2.175,415,2.175,416,1.328,417,1.328,418,1.328,419,1.328,420,1.328,421,1.328,422,1.328,423,2.175,424,1.328,425,1.328,426,1.328,427,2.175,428,1.328,429,1.299,430,2.175,431,1.328,432,2.175,433,1.328,434,1.328,435,1.328,436,1.328,437,2.762,438,1.328,439,1.328,440,2.175,441,2.175,442,1.328,443,1.328]],["title/interfaces/TcsThreadExec.html",[38,0.93,429,1.716]],["body/interfaces/TcsThreadExec.html",[3,0.785,4,0.679,5,0.581,8,0.489,9,0.94,20,0.696,21,0.045,35,0.032,36,0.039,37,0.032,38,1.302,40,2.107,80,1.88,129,2.387,237,2.475,395,3.687,429,2.878,444,3.268]],["title/classes/TcsThreadsManager.html",[0,0.174,77,1.716]],["body/classes/TcsThreadsManager.html",[0,0.129,2,0.614,3,0.417,4,0.361,5,0.309,7,0.692,8,0.456,9,0.615,10,1.366,12,1.15,13,2.757,14,1.213,15,1.428,18,3.041,20,0.598,21,0.047,22,1.963,28,2.174,29,1.508,33,1.963,34,1.428,35,0.017,36,0.025,37,0.017,62,3.182,67,1.884,69,1.652,77,1.884,80,1.608,83,1.459,86,1.366,87,1.366,88,1.366,89,1.366,92,1.459,101,1.963,112,1.652,115,1.608,129,2.041,131,1.884,133,1.884,134,1.884,159,2.563,160,1.884,188,1.884,219,1.894,221,2.665,237,2.136,298,1.884,366,3.045,369,1.884,372,2.563,381,2.563,384,3.507,385,2.563,387,1.652,395,3.041,399,2.563,410,2.563,445,1.738,446,3.746,447,3.153,448,3.153,449,3.153,450,3.153,451,2.138,452,2.138,453,3.153,454,3.153,455,3.153,456,2.138,457,4.135,458,2.138,459,2.138,460,2.138,461,2.138,462,2.138,463,2.138,464,2.138,465,2.138,466,3.153,467,2.138,468,4.135,469,2.138,470,3.153,471,2.138,472,2.138]],["title/contributing.html",[320,1.265,473,1.665,474,1.665]],["body/contributing.html",[5,0.475,21,0.041,24,1.197,35,0.026,36,0.034,37,0.026,68,1.965,106,1.721,296,2.669,387,1.721,474,2.264,475,4.245,476,2.669,477,3.283,478,3.451,479,2.669,480,4.245,481,3.639,482,4.705,483,4.705,484,3.283,485,4.975,486,4.705,487,3.825,488,3.283,489,3.283,490,3.283,491,2.264,492,3.283,493,3.283,494,3.283,495,3.283,496,2.669,497,4.245,498,4.245,499,2.264,500,3.283,501,3.283,502,3.283,503,3.283,504,3.283,505,3.283,506,3.283,507,4.245,508,3.283,509,2.669,510,4.975,511,3.283,512,3.283,513,3.283,514,3.283,515,3.283,516,3.283,517,3.283,518,3.283,519,3.283,520,3.283,521,4.245,522,3.283,523,3.283,524,3.283,525,3.283,526,3.283,527,3.283,528,3.283,529,3.283,530,2.669,531,2.669,532,2.669]],["title/coverage.html",[491,2.679]],["body/coverage.html",[0,0.328,1,1.816,5,0.439,6,2.47,20,0.439,21,0.046,35,0.024,36,0.032,37,0.024,38,1.564,39,1.816,41,2.412,43,1.593,55,1.816,56,2.47,68,1.407,70,1.816,73,1.816,75,1.816,77,1.816,101,1.593,123,1.816,124,2.47,153,2.47,191,2.47,219,1.247,247,2.47,260,1.816,324,2.47,328,2.47,357,3.27,369,1.816,370,2.47,429,1.816,444,2.47,445,2.47,481,2.096,491,2.096,533,3.039,534,3.039,535,2.47,536,5.166,537,2.47,538,5.166,539,4.531,540,3.039,541,4.036,542,3.039,543,3.039,544,3.039,545,3.039,546,3.039,547,3.039,548,3.039,549,3.039,550,3.039,551,3.039,552,3.039,553,3.039,554,4.085,555,2.47,556,2.47,557,2.47,558,2.47,559,3.039,560,3.039,561,3.039,562,3.039,563,3.039,564,3.039]],["title/dependencies.html",[273,2.058,565,2.414]],["body/dependencies.html",[21,0.041,35,0.036,36,0.041,37,0.036,273,2.685]],["title/miscellaneous/enumerations.html",[566,1.443,567,2.799]],["body/miscellaneous/enumerations.html",[8,0.424,21,0.046,35,0.028,36,0.035,37,0.028,41,2.081,46,3.04,47,3.04,48,3.04,49,2.311,51,2.635,135,2.635,146,2.082,188,2.081,279,3.584,286,2.831,327,3.584,357,2.081,566,2.081,567,2.831,568,3.483,569,3.483,570,3.483,571,3.483,572,3.483,573,3.483,574,3.483,575,3.483,576,3.483,577,3.483,578,3.483,579,2.831,580,3.483,581,4.409,582,3.483,583,4.409,584,3.483,585,3.483,586,4.409,587,4.409]],["title/index.html",[8,0.294,320,1.265,473,1.665]],["body/index.html",[4,0.563,11,2.297,21,0.04,35,0.027,36,0.034,37,0.027,49,1.746,68,2.452,69,2.246,166,1.99,196,2.707,209,2.297,266,2.297,320,1.746,325,3.483,326,3.483,387,1.746,474,2.297,476,3.483,478,2.707,479,2.707,487,2.707,496,3.483,499,2.297,509,3.483,530,2.707,532,3.483,588,3.331,589,3.331,590,4.738,591,3.331,592,3.331,593,4.738,594,3.331,595,4.285,596,3.331,597,3.331,598,2.707,599,3.331,600,3.331,601,3.331,602,3.331,603,3.331,604,3.331,605,3.331,606,3.331,607,3.331,608,3.331,609,3.331,610,3.331,611,4.285,612,4.738,613,3.331,614,3.331,615,3.331,616,3.331,617,3.331,618,3.331,619,4.285,620,3.331,621,3.331,622,3.331,623,3.331,624,3.331,625,3.331,626,3.331,627,3.331,628,3.331,629,3.331,630,3.331,631,3.331]],["title/license.html",[320,1.265,473,1.665,632,1.962]],["body/license.html",[21,0.034,35,0.027,36,0.034,37,0.027,135,1.979,481,2.284,499,2.944,531,2.692,598,2.692,632,2.692,633,3.311,634,4.725,635,3.311,636,3.311,637,3.311,638,4.269,639,3.311,640,3.311,641,3.311,642,3.311,643,3.311,644,3.311,645,4.269,646,5.508,647,3.311,648,3.311,649,3.311,650,4.725,651,3.311,652,4.269,653,3.311,654,3.311,655,3.311,656,3.311,657,3.311,658,3.311,659,3.311,660,3.311,661,3.311,662,4.269,663,3.311,664,3.311,665,3.311,666,3.311,667,3.311,668,3.311,669,4.269,670,4.269,671,3.311,672,3.311,673,3.311,674,3.311,675,3.311,676,3.311,677,3.311,678,3.311,679,3.311,680,3.311,681,3.311,682,3.311,683,3.311,684,3.311,685,3.311,686,3.311,687,3.311,688,3.311,689,3.311,690,3.311,691,3.311,692,3.311,693,3.311,694,3.311,695,3.311,696,3.311,697,3.311,698,3.311,699,3.311]],["title/modules.html",[61,2.322]],["body/modules.html",[21,0.041,35,0.036,36,0.041,37,0.036,61,2.685]],["title/overview.html",[700,3.158]],["body/overview.html",[2,1.271,21,0.041,35,0.036,36,0.041,37,0.036,40,2.318,579,3.596,700,3.596,701,4.424]],["title/miscellaneous/variables.html",[566,1.443,702,2.799]],["body/miscellaneous/variables.html",[8,0.361,20,0.691,21,0.047,24,1.082,26,2.047,30,1.556,34,1.287,35,0.024,36,0.032,37,0.024,54,1.556,55,1.774,60,2.74,63,2.676,68,2.214,85,2.74,90,2.74,91,3.088,129,2.214,145,2.046,146,1.818,222,2.413,261,2.74,289,2.413,298,2.858,353,3.23,376,2.413,384,2.047,387,1.556,535,2.413,537,3.23,554,2.413,555,3.23,556,3.23,557,3.23,558,3.23,566,1.774,702,2.413,703,4.986,704,2.968,705,4.782,706,2.968,707,2.968,708,3.973,709,2.968,710,2.968,711,2.968,712,2.968,713,2.968,714,2.968,715,2.968,716,2.968,717,2.968,718,2.968,719,2.968,720,3.973,721,3.973,722,2.968,723,2.968]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":357,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0/1",{"_index":538,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":559,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":562,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":560,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":561,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":188,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/enumerations.html":{}}}],["10",{"_index":714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["2",{"_index":576,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2/4",{"_index":540,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":636,"title":{},"body":{"license.html":{}}}],["3",{"_index":577,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["3/5",{"_index":547,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":541,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":579,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["4/10",{"_index":553,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":551,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":552,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":543,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":539,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":544,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":548,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":546,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":550,"title":{},"body":{"coverage.html":{}}}],["7/13",{"_index":545,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":542,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":549,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":701,"title":{},"body":{"overview.html":{}}}],["_",{"_index":435,"title":{},"body":{"classes/TcsThread.html":{}}}],["above",{"_index":668,"title":{},"body":{"license.html":{}}}],["action",{"_index":693,"title":{},"body":{"license.html":{}}}],["actions",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["activated",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actually",{"_index":402,"title":{},"body":{"classes/TcsThread.html":{}}}],["add",{"_index":166,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["addconfig",{"_index":192,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addconfig(langtoappend",{"_index":197,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addeventhandler",{"_index":154,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["addmoduletogame",{"_index":331,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["addmoduletogame(newmodule",{"_index":336,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["already",{"_index":364,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["amount",{"_index":716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":660,"title":{},"body":{"license.html":{}}}],["appear",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":397,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread",{"_index":377,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread(module",{"_index":394,"title":{},"body":{"classes/TcsThread.html":{}}}],["applyeventhandler",{"_index":126,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["applyeventhandler(data",{"_index":142,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["arising",{"_index":697,"title":{},"body":{"license.html":{}}}],["array",{"_index":274,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["ask",{"_index":607,"title":{},"body":{"index.html":{}}}],["associated",{"_index":647,"title":{},"body":{"license.html":{}}}],["authors",{"_index":686,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":419,"title":{},"body":{"classes/TcsThread.html":{}}}],["before",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["benchmark",{"_index":19,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{}}}],["benchmark.stop",{"_index":427,"title":{},"body":{"classes/TcsThread.html":{}}}],["between",{"_index":28,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["blue",{"_index":578,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":72,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["build",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":635,"title":{},"body":{"license.html":{}}}],["called",{"_index":133,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["can't",{"_index":350,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["catch",{"_index":111,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["category/name",{"_index":283,"title":{},"body":{"classes/TcsModule.html":{}}}],["changes",{"_index":518,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":642,"title":{},"body":{"license.html":{}}}],["citizenfx/client",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["citizenfx/server",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":689,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"overview.html":{}}}],["cleartick(this.tick",{"_index":441,"title":{},"body":{"classes/TcsThread.html":{}}}],["clicking",{"_index":624,"title":{},"body":{"index.html":{}}}],["client",{"_index":48,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{}}}],["clone",{"_index":613,"title":{},"body":{"index.html":{}}}],["code",{"_index":487,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["color",{"_index":285,"title":{},"body":{"classes/TcsModule.html":{}}}],["come",{"_index":457,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["comes",{"_index":398,"title":{},"body":{"classes/TcsThread.html":{}}}],["command",{"_index":532,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["compile",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["compiling",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["compodoc",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["compodoc/compodoc",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["concatened",{"_index":282,"title":{},"body":{"classes/TcsModule.html":{}}}],["conditions",{"_index":667,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":604,"title":{},"body":{"index.html":{}}}],["config",{"_index":224,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configuration",{"_index":210,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configured",{"_index":205,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["connection",{"_index":698,"title":{},"body":{"license.html":{}}}],["console",{"_index":91,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["console.log",{"_index":97,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["console.log(`${consolecolors.red}[error",{"_index":120,"title":{},"body":{"classes/TcsCore.html":{}}}],["console.log(consolecolors.red",{"_index":315,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors",{"_index":279,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/enumerations.html":{}}}],["consolecolors.blue",{"_index":322,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue}[debug",{"_index":117,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.blue}[tcs",{"_index":98,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.green",{"_index":311,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.green}ready",{"_index":113,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.red",{"_index":307,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.reset",{"_index":118,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["consolecolors.yellow",{"_index":284,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${newmodule.getid",{"_index":362,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${thread.id}${consolecolors.red",{"_index":425,"title":{},"body":{"classes/TcsThread.html":{}}}],["consolecolors.yellow}[warning",{"_index":122,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.yellow}initializing",{"_index":99,"title":{},"body":{"classes/TcsCore.html":{}}}],["const",{"_index":33,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor(eventtype",{"_index":128,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["constructor(moduleinfos",{"_index":259,"title":{},"body":{"classes/TcsModule.html":{}}}],["constructor(timer",{"_index":382,"title":{},"body":{"classes/TcsThread.html":{}}}],["contained",{"_index":403,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid",{"_index":378,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid(id",{"_index":400,"title":{},"body":{"classes/TcsThread.html":{}}}],["contract",{"_index":694,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":599,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":474,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":662,"title":{},"body":{"license.html":{}}}],["copy",{"_index":645,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":634,"title":{},"body":{"license.html":{}}}],["core",{"_index":69,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["correctly",{"_index":310,"title":{},"body":{"classes/TcsModule.html":{}}}],["coverage",{"_index":491,"title":{"coverage.html":{}},"body":{"contributing.html":{},"coverage.html":{}}}],["create",{"_index":131,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["created",{"_index":399,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["creates",{"_index":159,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThreadsManager.html":{}}}],["createthread",{"_index":447,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["createthread(module",{"_index":450,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["current",{"_index":24,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["currentthread",{"_index":459,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currentthread.appendthread(module",{"_index":465,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["damages",{"_index":690,"title":{},"body":{"license.html":{}}}],["data",{"_index":53,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["date",{"_index":416,"title":{},"body":{"classes/TcsThread.html":{}}}],["deal",{"_index":649,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":699,"title":{},"body":{"license.html":{}}}],["debug",{"_index":63,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":79,"title":{},"body":{"classes/TcsCore.html":{}}}],["debugexec",{"_index":371,"title":{},"body":{"classes/TcsThread.html":{}}}],["debugmode",{"_index":710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":145,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delay",{"_index":372,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delete",{"_index":454,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["deleted",{"_index":409,"title":{},"body":{"classes/TcsThread.html":{}}}],["deletes",{"_index":453,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["dependencies",{"_index":273,"title":{"dependencies.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"dependencies.html":{}}}],["dependency",{"_index":351,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["depends",{"_index":296,"title":{},"body":{"classes/TcsModule.html":{},"contributing.html":{}}}],["description",{"_index":89,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["destroymethod",{"_index":248,"title":{},"body":{"classes/TcsModule.html":{}}}],["destroymodule",{"_index":253,"title":{},"body":{"classes/TcsModule.html":{}}}],["developped",{"_index":592,"title":{},"body":{"index.html":{}}}],["dict",{"_index":239,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["dictionnary",{"_index":200,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["difference",{"_index":27,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["directly",{"_index":606,"title":{},"body":{"index.html":{}}}],["discution",{"_index":608,"title":{},"body":{"index.html":{}}}],["display",{"_index":82,"title":{},"body":{"classes/TcsCore.html":{}}}],["distribute",{"_index":658,"title":{},"body":{"license.html":{}}}],["doc",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["docdependencies",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":481,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":242,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["don't",{"_index":602,"title":{},"body":{"index.html":{}}}],["down",{"_index":306,"title":{},"body":{"classes/TcsModule.html":{}}}],["download",{"_index":593,"title":{},"body":{"index.html":{}}}],["drag",{"_index":628,"title":{},"body":{"index.html":{}}}],["drop",{"_index":629,"title":{},"body":{"index.html":{}}}],["due",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["e",{"_index":312,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["each",{"_index":134,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["emitnet('tcs:handleevent",{"_index":185,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["en",{"_index":225,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["encountered",{"_index":424,"title":{},"body":{"classes/TcsThread.html":{}}}],["enum",{"_index":45,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["enumerations",{"_index":567,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":64,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["error(error",{"_index":93,"title":{},"body":{"classes/TcsCore.html":{}}}],["errors",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["especially",{"_index":618,"title":{},"body":{"index.html":{}}}],["even",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":135,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["event.eventtype",{"_index":182,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.target",{"_index":172,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.targetid",{"_index":186,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["eventmanager",{"_index":58,"title":{},"body":{"classes/TcsCore.html":{}}}],["events",{"_index":137,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["eventtype",{"_index":50,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["example",{"_index":7,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exec",{"_index":395,"title":{},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["execs",{"_index":373,"title":{},"body":{"classes/TcsThread.html":{}}}],["execute",{"_index":387,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["executed",{"_index":139,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["executions",{"_index":385,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exist",{"_index":243,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["exists",{"_index":365,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["expectations",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":616,"title":{},"body":{"index.html":{}}}],["express",{"_index":677,"title":{},"body":{"license.html":{}}}],["extends",{"_index":42,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["false",{"_index":112,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{}}}],["files",{"_index":648,"title":{},"body":{"license.html":{}}}],["fill",{"_index":214,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filled",{"_index":217,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filter((listener",{"_index":180,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["filter((mod",{"_index":346,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["filter((module",{"_index":342,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["find",{"_index":209,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["findmodulebyid",{"_index":329,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["first",{"_index":619,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":682,"title":{},"body":{"license.html":{}}}],["fivem",{"_index":590,"title":{},"body":{"index.html":{}}}],["fivemtcs",{"_index":637,"title":{},"body":{"license.html":{}}}],["fnc",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":509,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["follow",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["following",{"_index":531,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["foreach((listener",{"_index":183,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["foreach((module",{"_index":344,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["forget",{"_index":603,"title":{},"body":{"index.html":{}}}],["format",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":366,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["foundmodule",{"_index":347,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["foundmodule.modulelaunched",{"_index":355,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["fr",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":591,"title":{},"body":{"index.html":{}}}],["free",{"_index":641,"title":{},"body":{"license.html":{}}}],["function",{"_index":129,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["furnished",{"_index":665,"title":{},"body":{"license.html":{}}}],["g",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["game",{"_index":338,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["gamemodules",{"_index":330,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["get(key",{"_index":206,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace",{"_index":193,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace(key",{"_index":211,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getcurrentresourcename",{"_index":228,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getdependencies",{"_index":254,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["geteventtype",{"_index":127,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["getgametimer",{"_index":32,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["getid",{"_index":255,"title":{},"body":{"classes/TcsModule.html":{}}}],["getthreadtimer",{"_index":379,"title":{},"body":{"classes/TcsThread.html":{}}}],["getting",{"_index":473,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":325,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"index.html":{}}}],["go",{"_index":114,"title":{},"body":{"classes/TcsCore.html":{}}}],["going",{"_index":711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":640,"title":{},"body":{"license.html":{}}}],["green",{"_index":575,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guide",{"_index":601,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":477,"title":{},"body":{"contributing.html":{}}}],["handler",{"_index":125,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["handles",{"_index":161,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["here",{"_index":476,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["hereby",{"_index":639,"title":{},"body":{"license.html":{}}}],["holders",{"_index":687,"title":{},"body":{"license.html":{}}}],["https://github.com/fivemtcs/core.gitissues",{"_index":614,"title":{},"body":{"index.html":{}}}],["id",{"_index":237,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["identifier",{"_index":533,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":295,"title":{},"body":{"classes/TcsModule.html":{}}}],["ignore",{"_index":107,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["implied",{"_index":678,"title":{},"body":{"license.html":{}}}],["included",{"_index":671,"title":{},"body":{"license.html":{}}}],["including",{"_index":652,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":162,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["informations",{"_index":222,"title":{},"body":{"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["initialize",{"_index":67,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["initmodule",{"_index":256,"title":{},"body":{"classes/TcsModule.html":{}}}],["install",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["installed",{"_index":354,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["instance",{"_index":263,"title":{},"body":{"classes/TcsModule.html":{}}}],["interface",{"_index":38,"title":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["interfaces",{"_index":40,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"overview.html":{}}}],["isn't",{"_index":353,"title":{},"body":{"classes/TcsModuleManager.html":{},"miscellaneous/variables.html":{}}}],["isserversided",{"_index":59,"title":{},"body":{"classes/TcsCore.html":{}}}],["issue",{"_index":623,"title":{},"body":{"index.html":{}}}],["issues",{"_index":617,"title":{},"body":{"index.html":{}}}],["isthreadfull",{"_index":374,"title":{},"body":{"classes/TcsThread.html":{}}}],["it's",{"_index":335,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["json.parse",{"_index":226,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["key",{"_index":208,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["keys",{"_index":203,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["kind",{"_index":676,"title":{},"body":{"license.html":{}}}],["lang",{"_index":60,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["langtoappend",{"_index":201,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["language",{"_index":196,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{}}}],["last",{"_index":594,"title":{},"body":{"index.html":{}}}],["latest",{"_index":612,"title":{},"body":{"index.html":{}}}],["launch",{"_index":265,"title":{},"body":{"classes/TcsModule.html":{}}}],["launchmethod",{"_index":249,"title":{},"body":{"classes/TcsModule.html":{}}}],["level",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":691,"title":{},"body":{"license.html":{}}}],["liable",{"_index":688,"title":{},"body":{"license.html":{}}}],["license",{"_index":632,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":653,"title":{},"body":{"license.html":{}}}],["limited",{"_index":679,"title":{},"body":{"license.html":{}}}],["list",{"_index":202,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["listen",{"_index":138,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener",{"_index":132,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener.applyeventhandler(event.data",{"_index":184,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listener.geteventtype",{"_index":181,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listeners",{"_index":155,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["load",{"_index":223,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["loaded",{"_index":334,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadmodulelang",{"_index":194,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadmodulelang(module",{"_index":218,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadresourcefile",{"_index":227,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loads",{"_index":339,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadtcsmoduleinfos",{"_index":555,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction",{"_index":556,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction.push(fnc",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":47,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{}}}],["manager",{"_index":160,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["map",{"_index":216,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxexectimeperthread",{"_index":713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":681,"title":{},"body":{"license.html":{}}}],["merge",{"_index":656,"title":{},"body":{"license.html":{}}}],["message",{"_index":84,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["messagecolor",{"_index":278,"title":{},"body":{"classes/TcsModule.html":{}}}],["method",{"_index":264,"title":{},"body":{"classes/TcsModule.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["miscellaneous",{"_index":566,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":633,"title":{},"body":{"license.html":{}}}],["mod",{"_index":352,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mod.getid",{"_index":368,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mode",{"_index":85,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":655,"title":{},"body":{"license.html":{}}}],["module",{"_index":221,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["module.getid",{"_index":238,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["module.initmodule",{"_index":359,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.modulelaunched",{"_index":343,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.shouldlaunch",{"_index":358,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["moduledependencies",{"_index":294,"title":{},"body":{"classes/TcsModule.html":{}}}],["moduleinfos",{"_index":250,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulelaunched",{"_index":251,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulename",{"_index":292,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["modules",{"_index":61,"title":{"modules.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"modules.html":{}}}],["moduletype",{"_index":291,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["ms",{"_index":26,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["n${e",{"_index":426,"title":{},"body":{"classes/TcsThread.html":{}}}],["name",{"_index":87,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["need",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["needed",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":101,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["newmodule",{"_index":340,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["next",{"_index":630,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":685,"title":{},"body":{"license.html":{}}}],["notice",{"_index":669,"title":{},"body":{"license.html":{}}}],["npm",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["null",{"_index":261,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":22,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["object",{"_index":54,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["objkey",{"_index":233,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["obtaining",{"_index":644,"title":{},"body":{"license.html":{}}}],["onnet('tcs:handleevent",{"_index":171,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["ontcsloaded",{"_index":557,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions",{"_index":558,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions.push(fnc",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":589,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["otherwise",{"_index":696,"title":{},"body":{"license.html":{}}}],["out",{"_index":598,"title":{},"body":{"index.html":{},"license.html":{}}}],["outcoming",{"_index":163,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["overview",{"_index":700,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":565,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":597,"title":{},"body":{"index.html":{}}}],["param",{"_index":115,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["parameters",{"_index":86,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["particular",{"_index":683,"title":{},"body":{"license.html":{}}}],["peds",{"_index":583,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission",{"_index":638,"title":{},"body":{"license.html":{}}}],["permit",{"_index":663,"title":{},"body":{"license.html":{}}}],["person",{"_index":643,"title":{},"body":{"license.html":{}}}],["persons",{"_index":664,"title":{},"body":{"license.html":{}}}],["player",{"_index":584,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["player_loaded",{"_index":581,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["players",{"_index":585,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":478,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["portions",{"_index":673,"title":{},"body":{"license.html":{}}}],["possible",{"_index":615,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":281,"title":{},"body":{"classes/TcsModule.html":{}}}],["presentation",{"_index":588,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["print",{"_index":90,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["printdebug",{"_index":257,"title":{},"body":{"classes/TcsModule.html":{}}}],["printdebug(message",{"_index":277,"title":{},"body":{"classes/TcsModule.html":{}}}],["printed",{"_index":712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["project",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["promise",{"_index":432,"title":{},"body":{"classes/TcsThread.html":{}}}],["promise((resolve",{"_index":434,"title":{},"body":{"classes/TcsThread.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["provided",{"_index":674,"title":{},"body":{"license.html":{}}}],["publish",{"_index":657,"title":{},"body":{"license.html":{}}}],["pull",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":684,"title":{},"body":{"license.html":{}}}],["push",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":605,"title":{},"body":{"index.html":{}}}],["read",{"_index":479,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reading",{"_index":600,"title":{},"body":{"index.html":{}}}],["readme",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":57,"title":{},"body":{"classes/TcsCore.html":{}}}],["ready",{"_index":266,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["red",{"_index":574,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["release",{"_index":627,"title":{},"body":{"index.html":{}}}],["releases",{"_index":596,"title":{},"body":{"index.html":{}}}],["remainingdependenciestostart",{"_index":345,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remainingdependenciestostart.length",{"_index":356,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remove",{"_index":408,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads",{"_index":380,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads(module",{"_index":406,"title":{},"body":{"classes/TcsThread.html":{}}}],["removethread",{"_index":381,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethread(id",{"_index":410,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule",{"_index":448,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule(module",{"_index":455,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["render",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":212,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replace[objkey",{"_index":235,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replaceto",{"_index":234,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["report",{"_index":622,"title":{},"body":{"index.html":{}}}],["repository",{"_index":610,"title":{},"body":{"index.html":{}}}],["request",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["requests",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["reset",{"_index":573,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolved",{"_index":433,"title":{},"body":{"classes/TcsThread.html":{}}}],["resources",{"_index":595,"title":{},"body":{"index.html":{}}}],["ressource",{"_index":293,"title":{},"body":{"classes/TcsModule.html":{}}}],["restriction",{"_index":651,"title":{},"body":{"license.html":{}}}],["result",{"_index":35,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.replace(`{${objkey",{"_index":236,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["results",{"_index":37,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":34,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["rights",{"_index":654,"title":{},"body":{"license.html":{}}}],["run",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":363,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["scheduleresourcetick",{"_index":109,"title":{},"body":{"classes/TcsCore.html":{}}}],["scripts",{"_index":709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":404,"title":{},"body":{"classes/TcsThread.html":{}}}],["section",{"_index":609,"title":{},"body":{"index.html":{}}}],["sell",{"_index":661,"title":{},"body":{"license.html":{}}}],["send",{"_index":147,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["sendevent",{"_index":156,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["sending",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":49,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["server.cfgensure",{"_index":631,"title":{},"body":{"index.html":{}}}],["set",{"_index":289,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["setdestroymodule",{"_index":258,"title":{},"body":{"classes/TcsModule.html":{}}}],["setdestroymodule(destroymethod",{"_index":287,"title":{},"body":{"classes/TcsModule.html":{}}}],["settick",{"_index":178,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{}}}],["settick(async",{"_index":418,"title":{},"body":{"classes/TcsThread.html":{}}}],["settimeout(resolve",{"_index":436,"title":{},"body":{"classes/TcsThread.html":{}}}],["setup",{"_index":495,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":670,"title":{},"body":{"license.html":{}}}],["shoulddeletethread",{"_index":468,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["shouldlaunch",{"_index":252,"title":{},"body":{"classes/TcsModule.html":{}}}],["showerrorsanycase",{"_index":718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showwarningsanycase",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutting",{"_index":314,"title":{},"body":{"classes/TcsModule.html":{}}}],["simple",{"_index":626,"title":{},"body":{"index.html":{}}}],["software",{"_index":646,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["sources",{"_index":611,"title":{},"body":{"index.html":{}}}],["specified",{"_index":83,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["src/.../mixed_config.ts",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_consolecolors.ts",{"_index":568,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mixed_events.ts",{"_index":570,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mixed_eventslist.ts",{"_index":569,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mixed_main.ts",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_moduletypes.ts",{"_index":571,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/assets/lang/${id}/${language}.json",{"_index":240,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/lang/${tcs_config.lang}.json",{"_index":229,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/mixed_config.ts",{"_index":535,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts",{"_index":6,"title":{},"body":{"classes/TcsBenchmark.html":{},"coverage.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:21",{"_index":23,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:8",{"_index":16,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts",{"_index":124,"title":{},"body":{"classes/TcsEventListener.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:25",{"_index":148,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:33",{"_index":143,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:8",{"_index":141,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:9",{"_index":130,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts",{"_index":153,"title":{},"body":{"classes/TcsEventManager.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:53",{"_index":167,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:61",{"_index":165,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:8",{"_index":168,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:9",{"_index":158,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts",{"_index":191,"title":{},"body":{"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:28",{"_index":207,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:44",{"_index":213,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:67",{"_index":220,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:8",{"_index":195,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:98",{"_index":198,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/modules/mixed_module.ts",{"_index":247,"title":{},"body":{"classes/TcsModule.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_module.ts:10",{"_index":268,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:109",{"_index":280,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:11",{"_index":267,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:13",{"_index":270,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:14",{"_index":262,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:40",{"_index":275,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:48",{"_index":272,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:56",{"_index":288,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:63",{"_index":271,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:87",{"_index":276,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:9",{"_index":269,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts",{"_index":328,"title":{},"body":{"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:50",{"_index":337,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:66",{"_index":333,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:8",{"_index":332,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/threads/mixed_threads.ts",{"_index":370,"title":{},"body":{"classes/TcsThread.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:10",{"_index":393,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:100",{"_index":411,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:11",{"_index":392,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:115",{"_index":407,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:13",{"_index":383,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:132",{"_index":401,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:49",{"_index":405,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:57",{"_index":386,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:74",{"_index":388,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:8",{"_index":391,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:83",{"_index":396,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:9",{"_index":390,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts",{"_index":445,"title":{},"body":{"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:25",{"_index":451,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:46",{"_index":452,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:64",{"_index":456,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:8",{"_index":449,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/mixed_tcs.ts",{"_index":56,"title":{},"body":{"classes/TcsCore.html":{},"coverage.html":{}}}],["src/core/mixed_tcs.ts:10",{"_index":74,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:11",{"_index":78,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:12",{"_index":66,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:42",{"_index":81,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:55",{"_index":94,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:65",{"_index":96,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:8",{"_index":71,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:9",{"_index":76,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/mixed_main.ts",{"_index":554,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/events/mixed_events.ts",{"_index":41,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/types/events/mixed_eventslist.ts",{"_index":580,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/mixed_consolecolors.ts",{"_index":572,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/mixed_moduletypes.ts",{"_index":582,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/modules/mixed_moduleinfos.ts",{"_index":324,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"coverage.html":{}}}],["src/types/threads/mixed_threadinterface.ts",{"_index":444,"title":{},"body":{"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["start",{"_index":11,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["started",{"_index":320,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["starting",{"_index":321,"title":{},"body":{"classes/TcsModule.html":{}}}],["startrender",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["starts",{"_index":17,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{}}}],["statements",{"_index":534,"title":{},"body":{"coverage.html":{}}}],["steps",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["stop",{"_index":13,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["stopped",{"_index":290,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["string",{"_index":80,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["style",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":666,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":659,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":672,"title":{},"body":{"license.html":{}}}],["system",{"_index":587,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table",{"_index":564,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":563,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":52,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{}}}],["targetid",{"_index":44,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcs",{"_index":68,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tcs.error",{"_index":349,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["tcs.error(`${key",{"_index":231,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["tcs.isserversided",{"_index":174,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcs.lang.loadmodulelang(this",{"_index":318,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.threads.removethreadbymodule(this",{"_index":308,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.warning",{"_index":241,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsThread.html":{}}}],["tcs_config",{"_index":537,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcs_config.debugmode",{"_index":116,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config.lang",{"_index":232,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["tcs_config.maxexectimeperthread",{"_index":428,"title":{},"body":{"classes/TcsThread.html":{}}}],["tcs_config.showerrorsanycase",{"_index":119,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.showwarningsanycase",{"_index":121,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcsbenchmark",{"_index":1,"title":{"classes/TcsBenchmark.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["tcsclientevent",{"_index":39,"title":{"interfaces/TcsClientEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["tcscore",{"_index":55,"title":{"classes/TcsCore.html":{}},"body":{"classes/TcsCore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsevent",{"_index":43,"title":{"interfaces/TcsEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventlistener",{"_index":123,"title":{"classes/TcsEventListener.html":{}},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventmanager",{"_index":70,"title":{"classes/TcsEventManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventslist",{"_index":51,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"miscellaneous/enumerations.html":{}}}],["tcseventtarget",{"_index":46,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{}}}],["tcseventtarget.client",{"_index":176,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.local",{"_index":175,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.server",{"_index":173,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcslanguagemanager",{"_index":73,"title":{"classes/TcsLanguageManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["tcsmodule",{"_index":219,"title":{"classes/TcsModule.html":{}},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsmoduleinfos",{"_index":260,"title":{"interfaces/TcsModuleInfos.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"coverage.html":{}}}],["tcsmodulemanager",{"_index":75,"title":{"classes/TcsModuleManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["tcsmoduletypes",{"_index":327,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"miscellaneous/enumerations.html":{}}}],["tcsthread",{"_index":369,"title":{"classes/TcsThread.html":{}},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsthread(timer",{"_index":463,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["tcsthreadexec",{"_index":429,"title":{"interfaces/TcsThreadExec.html":{}},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["tcsthreadsmanager",{"_index":77,"title":{"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tells",{"_index":25,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.addconfig(dict",{"_index":246,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.debugexec(thread",{"_index":422,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.delay(this.timer",{"_index":420,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.destroymethod",{"_index":301,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.eventmanager",{"_index":100,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.eventtype",{"_index":150,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.execs",{"_index":412,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter",{"_index":442,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter((thread",{"_index":439,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.find((thread",{"_index":443,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.foreach((thread",{"_index":421,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.length",{"_index":437,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.push(thread",{"_index":438,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.findmodulebyid(mod",{"_index":348,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.findmodulebyid(newmodule.getid",{"_index":360,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules",{"_index":341,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.find((mod",{"_index":367,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.push(newmodule",{"_index":361,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.getid",{"_index":323,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.handler",{"_index":151,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.handler(data",{"_index":152,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.isserversided",{"_index":108,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isthreadfull",{"_index":414,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.lang",{"_index":103,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{}}}],["this.lang[key",{"_index":230,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.launchmethod",{"_index":300,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.launchmethod(this",{"_index":317,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.listeners",{"_index":170,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.listeners.push(handler",{"_index":190,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.loadmodulelang(module",{"_index":245,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.moduleinfos",{"_index":299,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.dependencies",{"_index":304,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.moduletype}/${this.moduleinfos.modulename",{"_index":303,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modulelaunched",{"_index":302,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modules",{"_index":102,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.printdebug",{"_index":309,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('module",{"_index":319,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('shutting",{"_index":305,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('starting",{"_index":316,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.removethreadbymodule(module",{"_index":472,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.sendevent(event",{"_index":177,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.shouldlaunch",{"_index":297,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.start",{"_index":31,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.threadid",{"_index":415,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.threads",{"_index":104,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.threadslist",{"_index":458,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.find((thread",{"_index":460,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.foreach((thread",{"_index":466,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.push(currentthread",{"_index":464,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.splice(index",{"_index":470,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.tick",{"_index":417,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.timer",{"_index":413,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.waitingevents",{"_index":169,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.foreach((event",{"_index":179,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.push(event",{"_index":189,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.splice(index",{"_index":187,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["thread",{"_index":384,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["thread.containsthreadbyid(id",{"_index":467,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.exec",{"_index":423,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.getthreadtimer",{"_index":461,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.id",{"_index":440,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.id.split",{"_index":430,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.isthreadfull",{"_index":462,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removemodulethreads(module",{"_index":471,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removethread(id",{"_index":469,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["threadid",{"_index":375,"title":{},"body":{"classes/TcsThread.html":{}}}],["threads",{"_index":62,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["threadslist",{"_index":446,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thrown",{"_index":313,"title":{},"body":{"classes/TcsModule.html":{}}}],["tick",{"_index":376,"title":{},"body":{"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":30,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":18,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["times",{"_index":140,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["took",{"_index":431,"title":{},"body":{"classes/TcsThread.html":{}}}],["tort",{"_index":695,"title":{},"body":{"license.html":{}}}],["translation",{"_index":204,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["translations",{"_index":199,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["triggered",{"_index":136,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggers",{"_index":144,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["true",{"_index":298,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":105,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["trying",{"_index":244,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["ts",{"_index":106,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"contributing.html":{}}}],["tslint",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":530,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["ui",{"_index":586,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":110,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{}}}],["update",{"_index":485,"title":{},"body":{"contributing.html":{}}}],["use",{"_index":499,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":164,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["uses",{"_index":512,"title":{},"body":{"contributing.html":{}}}],["using",{"_index":496,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["value",{"_index":146,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":215,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["variable",{"_index":536,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":702,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":621,"title":{},"body":{"index.html":{}}}],["version",{"_index":326,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"index.html":{}}}],["versions",{"_index":620,"title":{},"body":{"index.html":{}}}],["very",{"_index":625,"title":{},"body":{"index.html":{}}}],["void",{"_index":92,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["wait",{"_index":389,"title":{},"body":{"classes/TcsThread.html":{}}}],["waiting",{"_index":149,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["waitingevents",{"_index":157,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["warning",{"_index":65,"title":{},"body":{"classes/TcsCore.html":{}}}],["warning(warning",{"_index":95,"title":{},"body":{"classes/TcsCore.html":{}}}],["warnings",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":680,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":675,"title":{},"body":{"license.html":{}}}],["whether",{"_index":692,"title":{},"body":{"license.html":{}}}],["without",{"_index":650,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":286,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/TcsBenchmark.html":{"url":"classes/TcsBenchmark.html","title":"class - TcsBenchmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsBenchmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/benchmark/mixed_benchmark.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n                \n                    \n                            Starts the timer for the benchmark\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:21\n                \n            \n\n\n            \n                \n                    Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time difference in ms\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsBenchmark {\n\tprivate start: number;\n\n\t/**\n\t * Starts the timer for the benchmark\n\t */\n\tconstructor() {\n\t\tthis.start = GetGameTimer();\n\t}\n\n\t/**\n\t * Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\t * @returns The time difference in ms\n\t */\n\tstop() {\n\t\tconst difference = GetGameTimer() - this.start;\n\t\treturn difference;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsClientEvent.html":{"url":"interfaces/TcsClientEvent.html","title":"interface - TcsClientEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsClientEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TcsEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCore.html":{"url":"classes/TcsCore.html","title":"class - TcsCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mixed_tcs.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                eventManager\n                            \n                            \n                                    Readonly\n                                isServerSided\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Readonly\n                                modules\n                            \n                            \n                                    Readonly\n                                threads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n                \n                    \n                            Initialize the TCS core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            eventManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isServerSided\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsLanguageManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            threads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThreadsManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:42\n                \n            \n\n\n            \n                \n                    Display the specified message if the server is in debug mode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(error: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:55\n                \n            \n\n\n            \n                \n                    Display the specified error in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \nwarning(warning: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:65\n                \n            \n\n\n            \n                \n                    Display the specified warning in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    warning\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Warning to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsCore {\n\treadonly eventManager: TcsEventManager;\n\treadonly modules: TcsModuleManager;\n\treadonly lang: TcsLanguageManager;\n\treadonly threads: TcsThreadsManager;\n\treadonly isServerSided: boolean;\n\n\t/**\n\t * Initialize the TCS core\n\t */\n\tconstructor() {\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.YELLOW}Initializing...`,\n\t\t);\n\t\tthis.eventManager = new TcsEventManager();\n\t\tthis.modules = new TcsModuleManager();\n\t\tthis.lang = new TcsLanguageManager();\n\t\tthis.threads = new TcsThreadsManager();\n\n\t\ttry {\n\t\t\t//@ts-ignore\n\t\t\tthis.isServerSided = ScheduleResourceTick != undefined;\n\t\t} catch (error) {\n\t\t\tthis.isServerSided = false;\n\t\t}\n\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.GREEN}Ready to go !`,\n\t\t);\n\t}\n\n\t/**\n\t * Display the specified message if the server is in debug mode\n\t * @param message Message to print in the console\n\t */\n\tdebug(message: String) {\n\t\tif (TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE}[debug] ${message}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified error in the console\n\t * @param error Error to print in the console\n\t */\n\terror(error: String) {\n\t\tif (TCS_CONFIG.showErrorsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(`${ConsoleColors.RED}[ERROR] ${error}`, ConsoleColors.RESET);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified warning in the console\n\t * @param warning Warning to print in the console\n\t */\n\twarning(warning: String) {\n\t\tif (TCS_CONFIG.showWarningsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.YELLOW}[WARNING] ${warning}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsEvent.html":{"url":"interfaces/TcsEvent.html","title":"interface - TcsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:         TcsEventsList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventsList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         TcsEventTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventListener.html":{"url":"classes/TcsEventListener.html","title":"class - TcsEventListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventListenerClass.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventType\n                            \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEventHandler\n                            \n                            \n                                getEventType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventType: TcsEventsList, handler: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n                \n                    \n                            Create a listener that will be called each time the specified event is triggered\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        TcsEventsList\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Type of events to listen to\n\n                                                        \n                                                \n                                                \n                                                        handler\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current event handler, that will be executed each times the event is triggered\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventsList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyEventHandler\n                        \n                        \n                    \n                \n            \n            \n                \napplyEventHandler(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:33\n                \n            \n\n\n            \n                \n                    Triggers the event listener function with the specified data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Data to send to the event listener function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventType\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventType()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:25\n                \n            \n\n\n            \n                \n                    Get the current listener event it is waiting for\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Current event type name\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventListener {\n\tprivate eventType: TcsEventsList;\n\tprivate handler: Function;\n\n\t/**\n\t * Create a listener that will be called each time the specified event is triggered\n\t * @param eventType Type of events to listen to\n\t * @param handler Current event handler, that will be executed each times the event is triggered\n\t */\n\tconstructor(eventType: TcsEventsList, handler: Function) {\n\t\tthis.eventType = eventType;\n\t\tthis.handler = handler;\n\t}\n\n\t/**\n\t *\tGet the current listener event it is waiting for\n\t * @returns Current event type name\n\t */\n\tgetEventType() {\n\t\treturn this.eventType;\n\t}\n\n\t/**\n\t * Triggers the event listener function with the specified data\n\t * @param data Data to send to the event listener function\n\t */\n\tapplyEventHandler(data: Object = {}) {\n\t\tthis.handler(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventManager.html":{"url":"classes/TcsEventManager.html","title":"class - TcsEventManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEventHandler\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                sendEvent\n                            \n                            \n                                    Private\n                                waitingEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an event manager. It handles all the incoming events and outcoming events.\nShould only be used by the core.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEventHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:61\n                            \n                        \n\n                \n                    \n                        Add an event handler that will be triggered each time the specified event will be triggered\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        handler\n                                                        \n                                                                Handler to add\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventListener[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:53\n                            \n                        \n\n                \n                    \n                        Send the specified event and triggers it for the target\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        event\n                                                        \n                                                                Event to send\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            waitingEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventManager {\n\tprivate waitingEvents: TcsEvent[];\n\tprivate listeners: TcsEventListener[];\n\n\t/**\n\t * Creates an event manager. It handles all the incoming events and outcoming events.\n\t * Should only be used by the core.\n\t */\n\tconstructor() {\n\t\tthis.waitingEvents = [];\n\t\tthis.listeners = [];\n\n\t\tonNet('tcs:handleEvent', (event: TcsEvent) => {\n\t\t\tif (event.target === TcsEventTarget.SERVER) {\n\t\t\t\tif (TCS.isServerSided) event.target = TcsEventTarget.LOCAL;\n\t\t\t\telse event.target = TcsEventTarget.CLIENT;\n\t\t\t}\n\t\t\tif (event.target === TcsEventTarget.CLIENT && !TCS.isServerSided) {\n\t\t\t\tevent.target = TcsEventTarget.LOCAL;\n\t\t\t}\n\t\t\tthis.sendEvent(event);\n\t\t});\n\n\t\tsetTick(() => {\n\t\t\tthis.waitingEvents.forEach((event, index) => {\n\t\t\t\tif (event.target == TcsEventTarget.LOCAL) {\n\t\t\t\t\tthis.listeners\n\t\t\t\t\t\t.filter((listener) => listener.getEventType() == event.eventType)\n\t\t\t\t\t\t.forEach((listener) => listener.applyEventHandler(event.data));\n\t\t\t\t} else {\n\t\t\t\t\tif (!TCS.isServerSided) emitNet('tcs:handleEvent', event);\n\t\t\t\t\telse {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\temitNet('tcs:handleEvent', event.targetId, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.waitingEvents.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send the specified event and triggers it for the target\n\t * @param event Event to send\n\t */\n\tsendEvent = (event: TcsEvent) => {\n\t\tthis.waitingEvents.push(event);\n\t};\n\n\t/**\n\t * Add an event handler that will be triggered each time the specified event will be triggered\n\t * @param handler Handler to add\n\t */\n\taddEventHandler = (handler: TcsEventListener) => {\n\t\tthis.listeners.push(handler);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsLanguageManager.html":{"url":"classes/TcsLanguageManager.html","title":"class - TcsLanguageManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsLanguageManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/language/mixed_languageManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                get\n                            \n                            \n                                getAndReplace\n                            \n                            \n                                loadModuleLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the language manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig(langToAppend: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:98\n                \n            \n\n\n            \n                \n                    Add translations to the current dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    langToAppend\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of keys and their translation in the current configured language\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:28\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Translation in the specified language in the configuration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAndReplace\n                        \n                        \n                    \n                \n            \n            \n                \ngetAndReplace(key: string, replace: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:44\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key and fill it with values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                                \n                                    replace\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Map of key and their values to find and replace in the translation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Translation in the specified language in the configuration, filled with specified values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadModuleLang\n                        \n                        \n                    \n                \n            \n            \n                \nloadModuleLang(module: TcsModule, language: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:67\n                \n            \n\n\n            \n                \n                    Get the translations of the specified module and add it to the dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Module informations to load the lang config from\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en-EN'\n                                    \n\n                                    \n                                        Name of the current language to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsLanguageManager {\n\tprivate lang: object;\n\n\t/**\n\t * Initialize the language manager\n\t */\n\tconstructor() {\n\t\tthis.lang =\n\t\t\tJSON.parse(\n\t\t\t\tLoadResourceFile(\n\t\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t\t`src/assets/lang/${TCS_CONFIG.lang}.json`,\n\t\t\t\t),\n\t\t\t) || {};\n\t}\n\n\t/**\n\t * Get the translation of the specified key\n\t * @param key Translation to find\n\t * @returns Translation in the specified language in the configuration\n\t */\n\tget(key: string): String {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\treturn this.lang[key] || '';\n\t}\n\n\t/**\n\t * Get the translation of the specified key and fill it with values\n\t * @param key Translation to find\n\t * @param replace Map of key and their values to find and replace in the translation\n\t * @returns Translation in the specified language in the configuration, filled with specified values\n\t */\n\tgetAndReplace(key: string, replace: Object): string {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\tlet result = this.lang[key] || '';\n\n\t\tfor (let objKey in replace) {\n\t\t\t//@ts-ignore\n\t\t\tconst replaceTo = replace[objKey];\n\t\t\tresult = result.replace(`{${objKey}}`, replaceTo);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get the translations of the specified module and add it to the dictionnary\n\t * @param module Module informations to load the lang config from\n\t * @param language Name of the current language to load\n\t */\n\tloadModuleLang(module: TcsModule, language: String = 'en-EN') {\n\t\tconst id = module.getId();\n\n\t\tconst dict = JSON.parse(\n\t\t\tLoadResourceFile(\n\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t`src/assets/lang/${id}/${language}.json`,\n\t\t\t),\n\t\t);\n\n\t\tif (!dict) {\n\t\t\tif (language !== 'en-EN') {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}. Trying to load language 'en-EN'...`,\n\t\t\t\t);\n\t\t\t\tthis.loadModuleLang(module);\n\t\t\t} else {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addConfig(dict);\n\t}\n\n\t/**\n\t * Add translations to the current dictionnary\n\t * @param langToAppend List of keys and their translation in the current configured language\n\t */\n\taddConfig(langToAppend: Object) {\n\t\tthis.lang = { ...this.lang, ...langToAppend };\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModule.html":{"url":"classes/TcsModule.html","title":"class - TcsModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_module.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyMethod\n                            \n                            \n                                    Private\n                                launchMethod\n                            \n                            \n                                    Private\n                                moduleInfos\n                            \n                            \n                                moduleLaunched\n                            \n                            \n                                shouldLaunch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyModule\n                            \n                            \n                                getDependencies\n                            \n                            \n                                getId\n                            \n                            \n                                initModule\n                            \n                            \n                                printDebug\n                            \n                            \n                                setDestroyModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n                \n                    \n                            Create a new Tcs module instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleInfos\n                                                  \n                                                        \n                                                                        TcsModuleInfos | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        launchMethod\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Method to launch when the module is ready\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            launchMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleLaunched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldLaunch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyModule\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:63\n                \n            \n\n\n            \n                \n                    Stop the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ngetDependencies()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:48\n                \n            \n\n\n            \n                \n                    Get the list of the current module dependencies\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        list of current module dependencies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:40\n                \n            \n\n\n            \n                \n                    Get the id of the current module\n\n\n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        id of the current module\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initModule\n                        \n                        \n                    \n                \n            \n            \n                \ninitModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:87\n                \n            \n\n\n            \n                \n                    Starts the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printDebug\n                        \n                        \n                    \n                \n            \n            \n                \nprintDebug(message: String, messageColor: ConsoleColors)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:109\n                \n            \n\n\n            \n                \n                    Print a debug message to the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to print in the console, a prefix is concatened to it (category/name)\n\n                                    \n                                \n                                \n                                    messageColor\n                                    \n                                                ConsoleColors\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ConsoleColors.YELLOW\n                                    \n\n                                    \n                                        Color of the current message in the console, yellow by default\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDestroyModule\n                        \n                        \n                    \n                \n            \n            \n                \nsetDestroyModule(destroyMethod: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:56\n                \n            \n\n\n            \n                \n                    Set the method that will be called when the module has to be stopped\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    destroyMethod\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method that will be called when the module is stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModule {\n\t//@ts-ignore\n\tprivate moduleInfos: TcsModuleInfos;\n\tprivate launchMethod: Function;\n\tprivate destroyMethod: Function;\n\n\tmoduleLaunched: Boolean;\n\tshouldLaunch: Boolean;\n\n\t/**\n\t * Create a new Tcs module instance\n\t * @param moduleType Type of the current module\n\t * @param moduleName Name of the current module, as if it was a ressource\n\t * @param launchMethod Method to launch when the module is ready\n\t * @param moduleDependencies List of modules ids this module depends on\n\t */\n\tconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function) {\n\t\tthis.shouldLaunch = true;\n\n\t\tif (moduleInfos != null) {\n\t\t\tthis.moduleInfos = moduleInfos;\n\t\t} else {\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t\tthis.launchMethod = launchMethod;\n\t\tthis.destroyMethod = () => {};\n\t\tthis.moduleLaunched = false;\n\t}\n\n\t/**\n\t * Get the id of the current module\n\t * @returns id of the current module\n\t */\n\tgetId(): String {\n\t\treturn `${this.moduleInfos.moduleType}/${this.moduleInfos.moduleName}`;\n\t}\n\n\t/**\n\t * Get the list of the current module dependencies\n\t * @returns list of current module dependencies\n\t */\n\tgetDependencies(): Array {\n\t\treturn this.moduleInfos.dependencies || [];\n\t}\n\n\t/**\n\t * Set the method that will be called when the module has to be stopped\n\t * @param destroyMethod Method that will be called when the module is stopped\n\t */\n\tsetDestroyModule(destroyMethod: Function) {\n\t\tthis.destroyMethod = destroyMethod;\n\t}\n\n\t/**\n\t * Stop the module\n\t */\n\tdestroyModule() {\n\t\tthis.printDebug('Shutting down module !', ConsoleColors.RED);\n\t\ttry {\n\t\t\tTCS.threads.removeThreadByModule(this);\n\t\t\tthis.moduleLaunched = false;\n\t\t\tthis.shouldLaunch = false;\n\t\t\tthis.destroyMethod();\n\t\t\tthis.printDebug(\n\t\t\t\t'Module has been stopped correctly !',\n\t\t\t\tConsoleColors.GREEN,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while shutting down the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Starts the module\n\t */\n\tinitModule() {\n\t\tthis.printDebug('Starting module !');\n\t\ttry {\n\t\t\tthis.launchMethod(this);\n\t\t\tTCS.lang.loadModuleLang(this, TCS_CONFIG.lang);\n\t\t\tthis.moduleLaunched = true;\n\t\t\tthis.printDebug('Module has been started !', ConsoleColors.GREEN);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while starting the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Print a debug message to the console\n\t * @param message Message to print in the console, a prefix is concatened to it (category/name)\n\t * @param messageColor Color of the current message in the console, yellow by default\n\t */\n\tprintDebug(\n\t\tmessage: String,\n\t\tmessageColor: ConsoleColors = ConsoleColors.YELLOW,\n\t) {\n\t\tif (TCS_CONFIG.debugMode)\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE} [${this.getId()}] ${messageColor}`,\n\t\t\t\tmessage,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsModuleInfos.html":{"url":"interfaces/TcsModuleInfos.html","title":"interface - TcsModuleInfos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsModuleInfos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/modules/mixed_moduleInfos.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dependencies\n                                \n                                \n                                            Optional\n                                        git\n                                \n                                \n                                        moduleName\n                                \n                                \n                                        moduleType\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dependencies\n                                    \n                                \n                                \n                                    \n                                        dependencies:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git\n                                    \n                                \n                                \n                                    \n                                        git:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleName\n                                    \n                                \n                                \n                                    \n                                        moduleName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleType\n                                    \n                                \n                                \n                                    \n                                        moduleType:         TcsModuleTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsModuleTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsModuleInfos {\n\tmoduleType: TcsModuleTypes;\n\tmoduleName: String;\n\tversion: String;\n\n\tgit?: String;\n\tdependencies?: String[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModuleManager.html":{"url":"classes/TcsModuleManager.html","title":"class - TcsModuleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModuleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_modulesManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findModuleById\n                            \n                            \n                                    Private\n                                gameModules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addModuleToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the module manager.\nShould only be called by the core !\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findModuleById\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:66\n                            \n                        \n\n                \n                    \n                        Get a loaded module by it's id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        id\n                                                        \n                                                                Id of the module to find\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToGame\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToGame(newModule: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:50\n                \n            \n\n\n            \n                \n                    Add a module to the current game and loads it when it is ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newModule\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module to add and load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModuleManager {\n\tprivate gameModules: Array;\n\n\t/**\n\t * Initialize the module manager.\n\t * Should only be called by the core !\n\t */\n\tconstructor() {\n\t\tthis.gameModules = [];\n\t\tsetTick(() =>\n\t\t\tthis.gameModules\n\t\t\t\t.filter((module) => !module.moduleLaunched)\n\t\t\t\t.forEach((module) => {\n\t\t\t\t\tconst remainingDependenciesToStart = module\n\t\t\t\t\t\t.getDependencies()\n\t\t\t\t\t\t.filter((mod) => {\n\t\t\t\t\t\t\tconst foundModule = this.findModuleById(mod);\n\n\t\t\t\t\t\t\tif (!foundModule) {\n\t\t\t\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t\t\t\t`Can't start module ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + module.getId() + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} because dependency ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + mod + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} isn't installed.`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn !foundModule.moduleLaunched;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (remainingDependenciesToStart.length == 0 && module.shouldLaunch)\n\t\t\t\t\t\tmodule.initModule();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Add a module to the current game and loads it when it is ready\n\t * @param newModule Module to add and load\n\t */\n\taddModuleToGame(newModule: TcsModule) {\n\t\tif (!this.findModuleById(newModule.getId()))\n\t\t\tthis.gameModules.push(newModule);\n\t\telse\n\t\t\tTCS.error(\n\t\t\t\t`Can't add module ${ConsoleColors.YELLOW}${newModule.getId()}${\n\t\t\t\t\tConsoleColors.RED\n\t\t\t\t} because a module with the same id already exists !`,\n\t\t\t);\n\t}\n\n\t/**\n\t * Get a loaded module by it's id\n\t * @param id Id of the module to find\n\t * @returns The module if found, undefined if it doesn't exist\n\t */\n\tfindModuleById = (id: String): TcsModule | undefined =>\n\t\tthis.gameModules.find((mod) => mod.getId() === id);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThread.html":{"url":"classes/TcsThread.html","title":"class - TcsThread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threads.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugExec\n                            \n                            \n                                delay\n                            \n                            \n                                    Private\n                                execs\n                            \n                            \n                                isThreadFull\n                            \n                            \n                                    Private\n                                threadId\n                            \n                            \n                                    Private\n                                tick\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendThread\n                            \n                            \n                                containsThreadById\n                            \n                            \n                                getThreadTimer\n                            \n                            \n                                removeModuleThreads\n                            \n                            \n                                removeThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timer: number)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n                \n                    \n                            Create a new thread with the specified delay\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timer\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Delay between each executions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debugExec\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:57\n                            \n                        \n\n                \n                    \n                        Execute a thread function in debug mode\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        thread\n                                                        \n                                                                Thread to execute\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:74\n                            \n                        \n\n                \n                    \n                        Wait the specified time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        time\n                                                        \n                                                                Time of the delay\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isThreadFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendThread\n                        \n                        \n                    \n                \n            \n            \n                \nappendThread(module: TcsModule, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:83\n                \n            \n\n\n            \n                \n                    Append a function to execute after the delay in the current thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module the thread comes from\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsThreadById\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsThreadById(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:132\n                \n            \n\n\n            \n                \n                    Get if a thread is actually contained in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the thread is contained, false else\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThreadTimer\n                        \n                        \n                    \n                \n            \n            \n                \ngetThreadTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:49\n                \n            \n\n\n            \n                \n                    Get current thread delay between each executions\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Thread delay\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeModuleThreads\n                        \n                        \n                    \n                \n            \n            \n                \nremoveModuleThreads(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:115\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads have to be stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:100\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThread {\n\tprivate threadId: number;\n\tprivate execs: Array;\n\tprivate timer: number;\n\tprivate tick: number;\n\n\tisThreadFull: boolean;\n\n\t/**\n\t * Create a new thread with the specified delay\n\t * @param timer Delay between each executions\n\t */\n\tconstructor(timer: number) {\n\t\tthis.execs = [];\n\t\tthis.timer = timer;\n\t\tthis.isThreadFull = false;\n\t\tthis.threadId = +new Date();\n\n\t\tthis.tick = setTick(async () => {\n\t\t\tawait this.delay(this.timer);\n\n\t\t\tconst benchmark = new TcsBenchmark();\n\t\t\tthis.execs.forEach((thread) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (TCS_CONFIG.debugMode) this.debugExec(thread);\n\t\t\t\t\telse thread.exec();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t`Error encountered in thread ${ConsoleColors.YELLOW}${thread.id}${ConsoleColors.RED}: \\n${e}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst time = benchmark.stop();\n\n\t\t\tif (time > TCS_CONFIG.maxExecTimePerThread) this.isThreadFull = true;\n\t\t});\n\t}\n\n\t/**\n\t * Get current thread delay between each executions\n\t * @returns Thread delay\n\t */\n\tgetThreadTimer(): number {\n\t\treturn this.timer;\n\t}\n\n\t/**\n\t * Execute a thread function in debug mode\n\t * @param thread Thread to execute\n\t */\n\tdebugExec = (thread: TcsThreadExec) => {\n\t\tconst benchmark = new TcsBenchmark();\n\t\tthread.exec();\n\t\tconst time = benchmark.stop();\n\n\t\tif (time >= 1) {\n\t\t\tTCS.warning(\n\t\t\t\t`Thread ${thread.id.split('-')[1]} took ${time} ms to execute !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Wait the specified time\n\t * @param time Time of the delay\n\t * @returns Promise that is resolved after the delay\n\t */\n\tdelay = (time: number): Promise =>\n\t\tnew Promise((resolve, _) => setTimeout(resolve, time));\n\n\t/**\n\t * Append a function to execute after the delay in the current thread\n\t * @param module Module the thread comes from\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tappendThread(module: TcsModule, exec: Function): String {\n\t\tconst threadId = `${this.threadId}-${module.getId()}-${this.execs.length}`;\n\t\tconst thread: TcsThreadExec = {\n\t\t\tid: threadId,\n\t\t\texec: exec,\n\t\t};\n\n\t\tthis.execs.push(thread);\n\n\t\treturn threadId;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param id Id of the thread to remove\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveThread(id: String): boolean {\n\t\tthis.execs = this.execs.filter((thread) => thread.id !== id);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param module Module from which the threads have to be stopped\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveModuleThreads(module: TcsModule): boolean {\n\t\tthis.execs = this.execs.filter(\n\t\t\t(thread) => thread.id.split('-')[1] !== module.getId(),\n\t\t);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get if a thread is actually contained in\n\t * @param id Id to search for\n\t * @returns True if the thread is contained, false else\n\t */\n\tcontainsThreadById(id: String): boolean {\n\t\treturn this.execs.find((thread) => thread.id === id) != null;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsThreadExec.html":{"url":"interfaces/TcsThreadExec.html","title":"interface - TcsThreadExec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsThreadExec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/threads/mixed_threadInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exec\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsThreadExec {\n\tid: String;\n\texec: Function;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThreadsManager.html":{"url":"classes/TcsThreadsManager.html","title":"class - TcsThreadsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThreadsManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threadsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                threadsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createThread\n                            \n                            \n                                removeThread\n                            \n                            \n                                removeThreadByModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the threads manager\nShould only be called by the core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThread[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createThread\n                        \n                        \n                    \n                \n            \n            \n                \ncreateThread(module: TcsModule, timer: number, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:25\n                \n            \n\n\n            \n                \n                    Create a new thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module that creates the thread\n\n                                    \n                                \n                                \n                                    timer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Delay between each executions\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:46\n                \n            \n\n\n            \n                \n                    Stop and deletes a thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThreadByModule\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThreadByModule(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:64\n                \n            \n\n\n            \n                \n                    Stop all the threads that come from the specified module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads to stop come from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThreadsManager {\n\tprivate threadsList: TcsThread[];\n\n\t/**\n\t * Initialize the threads manager\n\t * Should only be called by the core\n\t */\n\tconstructor() {\n\t\tthis.threadsList = [];\n\t}\n\n\t/**\n\t * Create a new thread\n\t * @param module Module that creates the thread\n\t * @param timer Delay between each executions\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tcreateThread(module: TcsModule, timer: number, exec: Function): String {\n\t\tlet found = false;\n\t\tconst currentThread =\n\t\t\tthis.threadsList.find((thread) => {\n\t\t\t\tif (thread.getThreadTimer() == timer && !thread.isThreadFull) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}) || new TcsThread(timer);\n\t\tif (!found) {\n\t\t\tthis.threadsList.push(currentThread);\n\t\t}\n\n\t\treturn currentThread.appendThread(module, exec);\n\t}\n\n\t/**\n\t * Stop and deletes a thread\n\t * @param id Id of the thread to delete\n\t */\n\tremoveThread(id: String) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tif (thread.containsThreadById(id)) {\n\t\t\t\tconst shouldDeleteThread = thread.removeThread(id);\n\n\t\t\t\tif (shouldDeleteThread) {\n\t\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stop all the threads that come from the specified module\n\t * @param module Module from which the threads to stop come from\n\t */\n\tremoveThreadByModule(module: TcsModule) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tconst shouldDeleteThread = thread.removeModuleThreads(module);\n\n\t\t\tif (shouldDeleteThread) {\n\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\treturn this.removeThreadByModule(module);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContribution\nHere are the contribution guidelines. Please, read it before contributing.\nDocumentation\n\nPull requests for docs update, if needed\nCode-level documentation expectations\n100% documentation coverage for pull requests\nUpdate readme if needed\nUpdate doc if needed\n\n\n\nEnvironment setup\nTCS is using Prettier to format the code. You must use our format style in your push requests.\nCompiling\nYou must compile your TS file with these actions before sending a pull request. The build will appear in the build folder.\nnpm startRender the documentation\nTCS uses compodoc to render the documentation automatically. If you need to update the documentation due to code changes, please follow these steps :\nnpm install -g @compodoc/compodoc\n\nnpm run docDependencies\nThe current project depends on :\n\n@citizenfx/client\n@citizenfx/server\nprettier\ntslint\ntypescript\n\nExecute the following command to install them :\nnpm i\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/assets/mixed_config.ts\n            \n            variable\n            TCS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/librairies/benchmark/mixed_benchmark.ts\n            \n            class\n            TcsBenchmark\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventListenerClass.ts\n            \n            class\n            TcsEventListener\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventManager.ts\n            \n            class\n            TcsEventManager\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/language/mixed_languageManager.ts\n            \n            class\n            TcsLanguageManager\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_module.ts\n            \n            class\n            TcsModule\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_modulesManager.ts\n            \n            class\n            TcsModuleManager\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threads.ts\n            \n            class\n            TcsThread\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threadsManager.ts\n            \n            class\n            TcsThreadsManager\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/core/mixed_tcs.ts\n            \n            class\n            TcsCore\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfosFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoadedFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            TCS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsClientEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/modules/mixed_moduleInfos.ts\n            \n            interface\n            TcsModuleInfos\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/threads/mixed_threadInterface.ts\n            \n            interface\n            TcsThreadExec\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConsoleColors   (src/.../mixed_consoleColors.ts)\n                        \n                        \n                            TcsEventsList   (src/.../mixed_eventsList.ts)\n                        \n                        \n                            TcsEventTarget   (src/.../mixed_events.ts)\n                        \n                        \n                            TcsModuleTypes   (src/.../mixed_moduleTypes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/mixed_consoleColors.ts\n    \n        \n            \n                \n                    \n                        \n                        ConsoleColors\n                    \n                \n                        \n                            \n                                 RESET\n                            \n                        \n                        \n                            \n                                Value : ^0\n                            \n                        \n                        \n                            \n                                 RED\n                            \n                        \n                        \n                            \n                                Value : ^1\n                            \n                        \n                        \n                            \n                                 GREEN\n                            \n                        \n                        \n                            \n                                Value : ^2\n                            \n                        \n                        \n                            \n                                 YELLOW\n                            \n                        \n                        \n                            \n                                Value : ^3\n                            \n                        \n                        \n                            \n                                 BLUE\n                            \n                        \n                        \n                            \n                                Value : ^4\n                            \n                        \n            \n        \n\n    src/types/events/mixed_eventsList.ts\n    \n        \n            \n                \n                    \n                        \n                        TcsEventsList\n                    \n                \n                        \n                            \n                                 PLAYER_LOADED\n                            \n                        \n                        \n                            \n                                Value : player_loaded\n                            \n                        \n            \n        \n\n    src/types/events/mixed_events.ts\n    \n        \n            \n                \n                    \n                        \n                        TcsEventTarget\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                Value : client\n                            \n                        \n                        \n                            \n                                 SERVER\n                            \n                        \n                        \n                            \n                                Value : server\n                            \n                        \n            \n        \n\n    src/types/mixed_moduleTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        TcsModuleTypes\n                    \n                \n                        \n                            \n                                 PEDS\n                            \n                        \n                        \n                            \n                                Value : peds\n                            \n                        \n                        \n                            \n                                 PLAYER\n                            \n                        \n                        \n                            \n                                Value : players\n                            \n                        \n                        \n                            \n                                 UI\n                            \n                        \n                        \n                            \n                                Value : ui\n                            \n                        \n                        \n                            \n                                 SYSTEM\n                            \n                        \n                        \n                            \n                                Value : system\n                            \n                        \n                        \n                            \n                                 EVENT\n                            \n                        \n                        \n                            \n                                Value : event\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTCS Core\n    \nPresentation\nTCS is an open source FiveM framework developped with TypeScript language.\nYou can download the last version, ready to start on FiveM resources at the releases page.\nFind out how to contribute by reading the contributing guide.\nDon't forget to read the Code of Conduct.\n\nFor any question about the core, you can directly ask it into the \"discution\" section of this repository\n\nGit sources\nTo download the latest sources of TCS, execute this command :\ngit clone https://github.com/FiveMTCS/Core.gitIssues\nIt is possible that you experience some issues while using TCS, especially with the first versions of it. Please, first verify that you are using the latest version and then report the issue by clicking here.\nGet started\nIt is very simple to use TCS :\n\nDownload the latest release here\nDrag and drop the folder to your FiveM server resources folder\nAdd the next command to your server.cfgensure tcs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 FiveMTCS\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            loadTcsModuleInfos   (src/.../mixed_main.ts)\n                        \n                        \n                            loadTcsModuleInfosFunction   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoaded   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoadedFunctions   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS_CONFIG   (src/.../mixed_config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mixed_main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tloadTcsModuleInfosFunction.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfosFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tonTcsLoadedFunctions.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoadedFunctions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TCS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCore\n\n                        \n                    \n\n\n            \n        \n\n    src/assets/mixed_config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TCS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tlang: 'fr-FR', // Current lang the scripts should be on\n\n\tdebugMode: true, // If set to true, debug informations are going to be printed in the console\n\n\tmaxExecTimePerThread: 10, // Maximum amount of time (in ms) a thread should take to execute in a tick\n\n\tshowErrorsAnyCase: true, // Should print errors in console even if debug mode isn't activated ?\n\n\tshowWarningsAnyCase: true, // Should print warnings in console even if debug mode isn't activated ?\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
