var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionInput.html",[0,0.724,1,1.871]],["body/interfaces/ActionInput.html",[0,1.194,1,3.086,2,1.813,3,0.614,4,0.535,5,0.461,6,2.891,7,0.39,8,0.747,9,3.947,10,3.947,11,3.947,12,1.584,13,0.604,14,0.039,15,1.825,16,2.252,17,2.891,18,2.891,19,0.026,20,0.032,21,0.026]],["title/classes/TcsBenchmark.html",[22,0.145,23,1.871]],["body/classes/TcsBenchmark.html",[3,0.541,4,0.472,5,0.406,7,0.344,8,0.69,13,0.406,14,0.04,15,1.656,19,0.023,20,0.03,21,0.023,22,0.173,23,2.852,24,0.961,25,2.968,26,1.065,27,1.832,28,3.899,29,1.84,30,3.598,31,1.497,32,1.497,33,4.601,34,3.788,35,3.774,36,4.396,37,3.605,38,1.84,39,4.601,40,3.774,41,5.641,42,3.253,43,1.663,44,2.533,45,4.601,46,4.601,47,1.442,48,1.065]],["title/classes/TcsCallbackManager.html",[22,0.145,49,1.871]],["body/classes/TcsCallbackManager.html",[3,0.38,4,0.474,5,0.285,7,0.345,8,0.544,12,1.127,13,0.476,14,0.04,15,1.382,19,0.016,20,0.023,21,0.016,22,0.122,24,0.675,26,0.748,31,1.249,32,1.5,47,1.449,48,1.363,49,2.246,50,2.086,51,5.445,52,4.23,53,4.23,54,5.081,55,4.23,56,4.23,57,3.624,58,1.785,59,2.983,60,1.785,61,2.534,62,1.529,63,1.529,64,2.534,65,2.879,66,5.648,67,2.209,68,1.07,69,1.5,70,1.184,71,5.349,72,3.149,73,4.617,74,3.452,75,5.349,76,1.995,77,2.534,78,2.534,79,5.349,80,3.624,81,3.624,82,2.534,83,2.534,84,2.534,85,2.534,86,2.534,87,2.246,88,2.534,89,2.534,90,3.624,91,2.534,92,2.534,93,2.534,94,2.534,95,1.596,96,2.534,97,2.534,98,3.624,99,1.123,100,1.248,101,2.534]],["title/interfaces/TcsClientEvent.html",[0,0.724,102,1.871]],["body/interfaces/TcsClientEvent.html",[0,1.196,2,1.818,3,0.615,4,0.537,5,0.462,7,0.391,8,0.748,13,0.462,14,0.039,15,1.756,19,0.027,20,0.032,21,0.027,65,2.745,74,3.525,102,3.092,103,2.9,104,4.106,105,2.958,106,4.602,107,3.377,108,4.106,109,4.106,110,2.9,111,2.9,112,2.9,113,2.543,114,2.258]],["title/classes/TcsCore.html",[22,0.145,115,1.871]],["body/classes/TcsCore.html",[3,0.343,4,0.299,5,0.257,7,0.218,8,0.504,12,1.414,13,0.608,14,0.04,19,0.015,20,0.022,21,0.015,22,0.11,24,0.609,26,0.675,29,1.344,31,1.178,32,1.616,43,1.442,49,2.473,58,1.657,59,3.284,65,1.851,68,1.178,69,1.178,70,1.303,95,1.303,99,1.013,100,1.126,115,2.084,116,1.881,117,5.861,118,3.989,119,3.284,120,3.989,121,2.82,122,1.965,123,2.82,124,2.727,125,3.815,126,5.308,127,3.362,128,1.657,129,1.851,130,2.285,131,2.473,132,2.285,133,2.473,134,2.285,135,2.084,136,2.473,137,2.285,138,2.473,139,2.285,140,2.473,141,2.285,142,3.362,143,2.285,144,4.902,145,2.415,146,4.173,147,2.377,148,1.442,149,3.465,150,3.815,151,1.965,152,3.362,153,2.285,154,3.362,155,2.285,156,3.109,157,3.362,158,2.285,159,2.285,160,2.173,161,2.285,162,1.881,163,2.285,164,2.285,165,2.285,166,1.615,167,3.362,168,2.285,169,1.881,170,1.615,171,1.126,172,2.285,173,2.285,174,2.82,175,2.285,176,3.284,177,2.285,178,2.285,179,2.285,180,2.285]],["title/interfaces/TcsEvent.html",[0,0.724,105,1.661]],["body/interfaces/TcsEvent.html",[0,1.171,2,1.756,3,0.595,4,0.518,5,0.446,7,0.378,8,0.733,13,0.596,14,0.039,15,1.295,19,0.026,20,0.032,21,0.026,65,2.688,74,3.451,102,2.457,103,2.801,104,3.262,105,2.913,106,3.262,107,3.262,108,4.548,109,4.02,110,3.905,111,3.741,112,3.905,113,3.424,114,2.913]],["title/classes/TcsEventListener.html",[22,0.145,181,1.871]],["body/classes/TcsEventListener.html",[3,0.422,4,0.368,5,0.317,7,0.268,8,0.585,13,0.619,14,0.04,19,0.018,20,0.025,21,0.018,22,0.135,24,0.75,26,0.831,27,1.899,29,1.56,31,0.831,32,1.5,38,2.102,43,1.619,44,2.148,48,0.831,62,1.017,63,1.017,67,2.231,68,1.152,69,1.428,70,1.275,72,3.617,95,1.463,110,3.715,111,3.715,113,3.258,114,2.465,145,2.383,148,1.41,151,1.387,181,2.419,182,2.317,183,4.649,184,3.902,185,4.836,186,3.902,187,3.902,188,1.922,189,5.494,190,2.419,191,2.998,192,3.981,193,3.212,194,3.902,195,3.902,196,3.902,197,2.814,198,3.902,199,2.814,200,3.212,201,3.212,202,2.814,203,3.902,204,3.902,205,2.814,206,2.814]],["title/classes/TcsEventManager.html",[22,0.145,131,1.871]],["body/classes/TcsEventManager.html",[3,0.397,4,0.346,5,0.298,7,0.356,8,0.561,13,0.421,14,0.04,19,0.017,20,0.024,21,0.017,22,0.127,24,0.706,26,0.782,27,1.863,31,1.28,32,1.467,44,2.059,48,0.782,60,1.843,62,1.352,63,1.352,68,1.104,69,1.104,70,1.222,72,3.625,95,1.222,99,1.174,100,1.305,105,2.593,112,2.644,129,2.059,131,2.318,145,2.32,181,2.687,183,4.362,191,2.318,192,3.877,193,3.877,200,3.079,201,3.877,207,2.181,208,4.335,209,4.335,210,4.335,211,4.335,212,3.74,213,3.079,214,3.74,215,3.74,216,3.74,217,3.079,218,2.649,219,2.92,220,2.649,221,2.649,222,2.649,223,3.74,224,2.649,225,5.156,226,2.649,227,3.569,228,4.335,229,3.74,230,2.649,231,2.181,232,2.649,233,2.649,234,2.649,235,2.649,236,2.649,237,2.649,238,3.74,239,2.649,240,2.649,241,1.642,242,2.649,243,2.649]],["title/interfaces/TcsInput.html",[0,0.724,16,1.661]],["body/interfaces/TcsInput.html",[0,1.2,1,2.558,2,1.829,3,0.619,4,0.54,5,0.465,6,2.917,7,0.393,8,0.751,9,2.917,10,2.917,11,2.917,12,1.587,13,0.564,14,0.039,15,1.83,16,2.755,17,3.959,18,3.959,19,0.027,20,0.032,21,0.027]],["title/classes/TcsInputManager.html",[22,0.145,133,1.871]],["body/classes/TcsInputManager.html",[3,0.24,4,0.209,5,0.18,7,0.152,8,0.383,9,3.75,10,1.13,11,1.13,12,1.235,13,0.288,14,0.04,15,0.835,16,1.406,17,3.706,18,3.377,19,0.01,20,0.017,21,0.01,22,0.077,24,0.426,26,0.472,27,1.536,31,0.942,32,1.447,43,1.727,47,1.959,48,1.368,58,1.259,60,1.259,62,1.808,63,1.612,68,1.255,69,1.548,70,1.635,95,1.601,99,1.132,100,1.259,113,2.259,119,2.103,133,1.584,135,1.978,156,1.13,160,1.615,171,2.094,188,1.259,217,3.281,244,1.316,245,3.191,246,3.191,247,3.191,248,3.191,249,3.191,250,3.191,251,3.191,252,3.191,253,3.191,254,2.555,255,2.259,256,1.598,257,3.933,258,5.174,259,2.555,260,3.985,261,2.555,262,3.645,263,2.555,264,1.598,265,3.645,266,2.555,267,2.555,268,4.12,269,1.598,270,3.645,271,2.555,272,2.555,273,2.555,274,1.598,275,3.001,276,3.645,277,2.555,278,3.645,279,1.806,280,1.806,281,3.645,282,3.645,283,1.598,284,2.555,285,1.598,286,1.598,287,2.555,288,2.103,289,1.598,290,3.191,291,2.555,292,1.598,293,1.598,294,2.555,295,3.191,296,3.191,297,1.598,298,1.598,299,1.598,300,1.598,301,2.103,302,1.13,303,3.645,304,2.555,305,2.555,306,2.555,307,3.645,308,2.555,309,2.555,310,4.249,311,2.555,312,2.555,313,2.555,314,1.598,315,1.598,316,2.555,317,2.555,318,2.555,319,1.598]],["title/classes/TcsLanguageManager.html",[22,0.145,136,1.871]],["body/classes/TcsLanguageManager.html",[3,0.303,4,0.264,5,0.417,7,0.193,8,0.46,12,1.454,13,0.501,14,0.04,19,0.027,20,0.02,21,0.013,22,0.097,24,0.539,26,0.597,27,1.34,29,1.227,31,1.095,32,1.481,38,1.873,43,1.693,47,1.482,48,1.095,58,1.511,60,1.511,62,0.73,63,0.73,68,1.222,69,1.383,70,1.352,95,1.53,99,1.972,100,2.192,114,2.76,121,3.145,136,1.901,145,2.658,148,1.496,151,1.511,162,3.052,219,2.565,268,4.31,288,2.525,302,2.168,320,1.664,321,3.067,322,3.067,323,3.067,324,3.067,325,4.728,326,3.067,327,2.021,328,4.138,329,4.138,330,3.707,331,2.525,332,5.607,333,3.067,334,3.067,335,2.021,336,3.311,337,4.138,338,3.067,339,4.867,340,2.021,341,3.067,342,4.684,343,3.067,344,3.067,345,3.067,346,1.643,347,2.021,348,2.222,349,2.168,350,3.663,351,4.138,352,5.014,353,3.067,354,3.067,355,3.067,356,2.021,357,4.138,358,3.067,359,2.525,360,2.021,361,3.067,362,2.021,363,2.021,364,1.643,365,1.429,366,3.067,367,2.021,368,2.168,369,2.525,370,2.021,371,2.021,372,2.021]],["title/classes/TcsModule.html",[22,0.145,346,1.338]],["body/classes/TcsModule.html",[3,0.202,4,0.176,5,0.151,7,0.128,8,0.333,12,1.316,13,0.521,14,0.04,15,1.19,19,0.009,20,0.014,21,0.009,22,0.065,24,0.358,26,0.397,27,1.84,29,0.887,30,1.375,31,0.397,32,1.482,34,1.826,38,2.174,43,1.84,47,1.658,48,1.157,62,1.189,63,0.802,67,1.852,68,0.971,69,1.075,70,1.075,76,1.221,87,2.039,95,1.513,99,0.595,100,0.662,122,0.662,124,1.375,125,2.003,128,1.093,135,2.43,146,3.812,148,1.189,149,2.325,150,2.771,151,1.794,156,0.95,160,1.458,166,1.568,170,1.568,171,2.214,174,0.95,176,2.708,188,1.093,190,2.039,227,1.106,241,0.833,255,1.375,279,1.568,280,2.325,331,2.997,346,0.983,348,2.56,359,1.106,364,1.458,368,0.95,373,1.106,374,3.92,375,4.336,376,3.92,377,2.833,378,2.833,379,3.289,380,3.289,381,2.708,382,3.289,383,3.289,384,2.833,385,2.833,386,2.218,387,2.218,388,2.004,389,2.218,390,2.218,391,4.147,392,2.218,393,1.568,394,1.343,395,1.343,396,1.343,397,1.343,398,1.343,399,2.218,400,3.196,401,2.218,402,2.218,403,1.826,404,1.343,405,1.343,406,2.039,407,1.343,408,1.343,409,1.343,410,4.147,411,3.92,412,1.343,413,3.289,414,3.289,415,2.218,416,1.568,417,2.218,418,2.218,419,2.218,420,2.039,421,1.343,422,3.641,423,2.833,424,1.343,425,2.218,426,2.218,427,2.218,428,2.332,429,2.218,430,2.218,431,2.218,432,1.343,433,1.826,434,2.997,435,1.106,436,1.106,437,1.343,438,1.343,439,1.343,440,1.106,441,3.641,442,1.343,443,1.343,444,2.218,445,1.343,446,1.343,447,2.833,448,2.833,449,1.343,450,1.343,451,1.343,452,2.218,453,2.332,454,1.343,455,2.833,456,1.343,457,2.218,458,2.708,459,2.218,460,1.343,461,2.218,462,1.343,463,1.343,464,1.343,465,1.343,466,0.74,467,1.343,468,1.343,469,1.343,470,1.343,471,1.343,472,1.343,473,1.343,474,1.343,475,1.343,476,1.343,477,1.343,478,1.343,479,1.343,480,1.343,481,1.106,482,1.343,483,1.343,484,1.343,485,1.343,486,1.343,487,2.218,488,1.343,489,2.218,490,2.218,491,1.343,492,1.106,493,1.343,494,1.343,495,1.343,496,2.833,497,1.343,498,2.833,499,1.343,500,1.343,501,1.343,502,1.343]],["title/interfaces/TcsModuleInfos.html",[0,0.724,388,1.661]],["body/interfaces/TcsModuleInfos.html",[0,0.948,2,1.751,3,0.593,4,0.517,5,0.445,7,0.377,8,0.731,12,1.612,13,0.638,14,0.039,19,0.026,20,0.032,21,0.026,148,1.994,388,2.683,400,3.421,406,3.421,435,4.543,436,4.543,503,3.253,504,4.543,505,5.285]],["title/classes/TcsModuleManager.html",[22,0.145,138,1.871]],["body/classes/TcsModuleManager.html",[3,0.403,4,0.351,5,0.302,7,0.256,8,0.566,12,0.715,13,0.425,14,0.04,19,0.017,20,0.024,21,0.017,22,0.129,24,0.715,26,0.793,27,1.578,28,1.898,29,1.51,31,1.289,32,1.399,38,1.51,43,1.364,47,1.51,48,1.115,58,1.86,60,1.86,62,0.97,63,0.97,68,1.115,69,1.115,70,1.234,76,1.478,95,1.234,129,2.078,138,2.34,148,0.97,151,1.323,169,3.108,171,1.323,190,2.34,219,3.095,231,2.21,255,2.34,301,2.21,302,1.898,336,2.669,346,2.1,348,2.582,350,3.108,364,2.446,365,1.898,369,2.21,381,2.21,393,2.669,428,3.108,453,3.595,506,2.21,507,4.367,508,4.367,509,3.775,510,3.775,511,2.685,512,3.775,513,3.775,514,3.775,515,2.685,516,3.775,517,3.775,518,3.775,519,3.775,520,2.685,521,2.685,522,2.685,523,2.685,524,2.685,525,3.775,526,2.685,527,3.108,528,3.775,529,2.685,530,2.685,531,2.21,532,2.685,533,2.685,534,2.685,535,2.685,536,2.685,537,2.685,538,2.685,539,2.685,540,2.685,541,2.685,542,2.21,543,2.685,544,2.685]],["title/classes/TcsThread.html",[22,0.145,545,1.871]],["body/classes/TcsThread.html",[3,0.233,4,0.203,5,0.175,7,0.148,8,0.374,12,1.221,13,0.547,14,0.04,15,1.652,19,0.01,20,0.016,21,0.01,22,0.075,23,1.547,24,0.414,26,0.458,27,1.827,29,0.998,30,2.222,31,0.458,32,1.516,35,2.965,36,2.054,38,1.833,40,1.097,42,2.533,43,1.793,44,2.827,47,1.677,48,1.302,62,0.902,63,0.902,67,1.892,68,1.302,69,1.302,70,1.441,76,1.374,87,0.962,95,1.498,123,1.764,124,1.547,125,1.097,135,2.842,145,2.259,147,1.764,148,1.419,160,1.859,166,1.097,170,1.097,171,2.331,174,1.097,188,1.229,191,2.222,241,1.94,255,1.547,346,1.859,348,2.032,364,2.276,365,1.764,368,1.097,403,1.278,420,2.933,434,2.054,458,1.278,527,1.278,545,1.547,546,1.278,547,3.129,548,4.386,549,3.129,550,3.129,551,4.194,552,2.576,553,2.495,554,2.495,555,3.584,556,2.495,557,2.054,558,2.495,559,2.495,560,4.148,561,2.951,562,1.552,563,2.604,564,1.552,565,2.495,566,1.552,567,1.552,568,1.552,569,1.552,570,2.495,571,2.965,572,1.552,573,2.495,574,2.495,575,2.054,576,2.495,577,1.552,578,2.495,579,3.584,580,2.495,581,1.552,582,2.495,583,1.552,584,4.194,585,3.584,586,2.054,587,1.552,588,3.129,589,2.495,590,2.495,591,2.495,592,1.552,593,1.552,594,1.552,595,1.552,596,1.552,597,1.552,598,2.495,599,1.552,600,1.552,601,1.552,602,2.495,603,1.552,604,1.547,605,2.495,606,1.552,607,2.495,608,1.552,609,1.552,610,1.552,611,1.552,612,3.129,613,1.552,614,1.552,615,2.495,616,2.495,617,1.552,618,1.552]],["title/interfaces/TcsThreadExec.html",[0,0.724,604,1.871]],["body/interfaces/TcsThreadExec.html",[0,1.039,2,1.919,3,0.65,4,0.566,5,0.488,7,0.413,8,0.773,12,1.465,13,0.58,14,0.038,19,0.028,20,0.033,21,0.028,67,2.199,364,2.523,571,4.024,604,3.194,619,3.565]],["title/classes/TcsThreadsManager.html",[22,0.145,140,1.871]],["body/classes/TcsThreadsManager.html",[3,0.366,4,0.319,5,0.274,7,0.394,8,0.529,12,1.282,13,0.511,14,0.04,15,1.352,19,0.016,20,0.023,21,0.016,22,0.117,24,0.649,26,0.72,27,1.496,29,1.409,30,3.108,31,1.222,32,1.42,35,3.4,42,2.49,43,1.639,47,1.655,48,1.42,58,1.736,60,1.736,67,1.923,68,1.222,69,1.222,70,1.352,95,1.572,123,3.544,129,1.939,140,2.184,145,1.736,148,1.496,151,1.736,160,1.834,171,1.736,188,1.736,190,2.184,191,2.184,213,2.901,241,2.184,346,2.222,348,2.427,364,2.222,420,2.184,542,3.407,545,2.184,548,2.901,557,2.901,560,3.872,561,2.901,563,1.939,571,3.4,575,2.901,586,2.901,620,2.006,621,4.138,622,3.523,623,3.523,624,3.523,625,3.523,626,2.437,627,2.437,628,3.523,629,3.523,630,3.523,631,2.437,632,4.534,633,2.437,634,2.437,635,2.437,636,2.437,637,2.437,638,2.437,639,2.437,640,2.437,641,3.523,642,2.437,643,4.534,644,2.437,645,3.523,646,2.437,647,2.437]],["title/contributing.html",[466,1.394,648,1.79,649,1.79]],["body/contributing.html",[5,0.402,14,0.036,19,0.023,20,0.03,21,0.023,38,1.427,99,1.581,128,2.252,440,2.938,563,1.964,649,2.522,650,4.571,651,2.938,652,3.568,653,3.763,654,2.938,655,4.571,656,3.976,657,5.044,658,5.044,659,3.568,660,5.319,661,5.044,662,4.153,663,3.568,664,3.568,665,3.568,666,2.522,667,3.568,668,3.568,669,3.568,670,3.568,671,2.938,672,4.571,673,4.571,674,2.522,675,3.568,676,3.568,677,3.568,678,3.568,679,3.568,680,3.568,681,3.568,682,4.571,683,3.568,684,2.938,685,4.379,686,4.571,687,3.568,688,3.568,689,3.568,690,3.568,691,3.568,692,3.568,693,3.568,694,3.568,695,2.938,696,2.938,697,4.571,698,3.568,699,3.568,700,3.568,701,2.938,702,2.938,703,2.938,704,3.568,705,2.938,706,3.568,707,3.568,708,2.938,709,2.938,710,2.938,711,2.938]],["title/coverage.html",[666,2.893]],["body/coverage.html",[0,1.278,1,1.825,5,0.332,6,2.845,13,0.332,14,0.04,16,1.621,19,0.019,20,0.026,21,0.019,22,0.276,23,1.825,25,2.424,49,1.825,50,2.424,67,2.064,76,3.289,102,1.825,103,2.845,105,1.621,115,1.825,116,2.424,128,1.451,131,1.825,133,1.825,136,1.825,138,1.825,140,1.825,160,1.305,181,1.825,182,2.424,207,2.424,244,2.424,320,2.424,346,1.305,373,2.424,388,1.621,503,2.424,506,2.424,545,1.825,546,2.424,604,1.825,619,2.424,620,2.424,656,2.081,666,2.081,712,2.945,713,2.945,714,2.424,715,5.455,716,2.424,717,5.799,718,4.586,719,2.945,720,2.945,721,2.945,722,4.025,723,4.025,724,4.025,725,2.945,726,2.945,727,2.945,728,2.945,729,4.025,730,2.945,731,2.945,732,2.945,733,2.945,734,2.945,735,2.945,736,2.945,737,2.945,738,4.25,739,2.424,740,2.424,741,2.424,742,2.424,743,3.314,744,2.424,745,2.424,746,2.424,747,2.424,748,3.314,749,2.424,750,2.424,751,2.424,752,2.424,753,2.945,754,2.945,755,2.945,756,2.945]],["title/dependencies.html",[406,2.246,757,2.533]],["body/dependencies.html",[14,0.035,19,0.031,20,0.035,21,0.031,406,2.96]],["title/miscellaneous/functions.html",[758,1.57,759,2.983]],["body/miscellaneous/functions.html",[7,0.386,14,0.038,19,0.026,20,0.032,21,0.026,68,1.686,69,1.686,148,2.063,348,2.369,364,1.797,743,3.338,744,4.077,745,4.077,746,3.338,747,4.077,748,3.338,749,4.077,750,4.077,758,2.513,759,3.338,760,4.952,761,4.952,762,4.055,763,4.055,764,4.055,765,4.055,766,4.952,767,4.055,768,4.055,769,4.055]],["title/index.html",[7,0.241,466,1.394,648,1.79]],["body/index.html",[4,0.429,14,0.036,19,0.021,20,0.028,21,0.021,28,2.321,65,1.807,122,1.618,128,2.763,129,2.668,160,1.455,188,1.618,219,2.035,279,2.321,325,2.703,336,3.061,348,1.919,349,2.321,393,2.321,400,2.685,416,3.425,466,1.807,481,3.989,492,3.989,504,3.565,563,2.384,649,2.321,651,3.565,653,2.703,654,2.703,662,2.703,671,3.565,674,2.321,684,4.242,685,4.242,695,2.703,696,2.703,701,2.703,702,2.703,703,2.703,705,2.703,711,3.565,770,3.283,771,3.283,772,4.846,773,3.283,774,3.283,775,4.331,776,3.283,777,3.283,778,2.703,779,3.283,780,3.283,781,3.283,782,3.283,783,3.283,784,3.283,785,3.283,786,3.283,787,3.283,788,3.283,789,3.283,790,3.283,791,5.152,792,3.283,793,3.283,794,4.331,795,3.283,796,3.283,797,3.283,798,4.331,799,3.283,800,3.283,801,3.283,802,3.283,803,3.283,804,3.283,805,3.283,806,3.283,807,3.283,808,3.283,809,3.283,810,3.283,811,3.283,812,3.283,813,3.283,814,3.283,815,3.283,816,3.283,817,3.283,818,3.283,819,3.283,820,3.283,821,3.283,822,3.283,823,3.283,824,3.283,825,3.283]],["title/license.html",[466,1.394,648,1.79,826,2.085]],["body/license.html",[14,0.03,19,0.024,20,0.03,21,0.024,72,2.258,257,2.999,275,2.999,656,2.575,674,3.274,708,2.999,709,2.999,710,2.999,778,2.999,826,2.999,827,3.643,828,5.093,829,3.643,830,3.643,831,3.643,832,4.632,833,3.643,834,3.643,835,3.643,836,3.643,837,3.643,838,3.643,839,4.632,840,5.872,841,3.643,842,3.643,843,5.093,844,3.643,845,4.632,846,3.643,847,3.643,848,3.643,849,3.643,850,3.643,851,3.643,852,3.643,853,3.643,854,4.632,855,3.643,856,3.643,857,3.643,858,3.643,859,3.643,860,3.643,861,4.632,862,4.632,863,3.643,864,3.643,865,3.643,866,3.643,867,3.643,868,3.643,869,3.643,870,3.643,871,3.643,872,3.643,873,3.643,874,3.643,875,3.643,876,3.643,877,3.643,878,3.643,879,3.643,880,3.643,881,3.643,882,3.643,883,3.643,884,3.643,885,3.643,886,3.643,887,3.643,888,3.643,889,3.643]],["title/modules.html",[122,2.017]],["body/modules.html",[14,0.035,19,0.031,20,0.035,21,0.031,122,2.352]],["title/overview.html",[890,3.37]],["body/overview.html",[2,2.087,14,0.035,19,0.03,20,0.035,21,0.03,24,1.255,890,3.878,891,4.71,892,4.71]],["title/miscellaneous/variables.html",[758,1.57,893,2.983]],["body/miscellaneous/variables.html",[7,0.3,13,0.595,14,0.04,19,0.02,20,0.027,21,0.02,38,1.26,40,2.227,44,1.734,48,1.244,62,1.965,63,1.965,67,2.027,87,3.142,114,1.734,115,1.953,121,2.978,122,1.552,124,2.943,128,2.497,147,2.978,149,2.978,150,3.356,280,2.227,349,2.227,388,1.734,400,1.953,416,2.227,420,3.275,433,2.594,531,3.469,552,2.594,560,2.227,563,1.734,714,2.594,716,3.469,738,2.594,739,3.469,740,3.469,741,3.469,742,3.469,751,2.594,752,3.469,758,1.953,893,2.594,894,3.15,895,5.283,896,3.15,897,5.068,898,3.15,899,3.15,900,4.213,901,3.15,902,3.15,903,3.15,904,3.15,905,3.15,906,3.15,907,3.15,908,3.15,909,3.15,910,3.15,911,3.15,912,4.213,913,4.213,914,3.15,915,3.15,916,3.15]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":76,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["0/1",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":753,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":754,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":241,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["10",{"_index":906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["11",{"_index":891,"title":{},"body":{"overview.html":{}}}],["2",{"_index":500,"title":{},"body":{"classes/TcsModule.html":{}}}],["2/4",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":830,"title":{},"body":{"license.html":{}}}],["3/5",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["443",{"_index":474,"title":{},"body":{"classes/TcsModule.html":{}}}],["5/7",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":892,"title":{},"body":{"overview.html":{}}}],["60",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":734,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":486,"title":{},"body":{"classes/TcsModule.html":{}}}],["8/11",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":733,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":730,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":610,"title":{},"body":{"classes/TcsThread.html":{}}}],["_source",{"_index":90,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["above",{"_index":860,"title":{},"body":{"license.html":{}}}],["action",{"_index":257,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["action's",{"_index":282,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["action.actionname",{"_index":296,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata",{"_index":303,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata.inputcontroller",{"_index":306,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actioninput",{"_index":1,"title":{"interfaces/ActionInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["actioninputs",{"_index":245,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actionname",{"_index":9,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["actions",{"_index":679,"title":{},"body":{"contributing.html":{}}}],["activated",{"_index":913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actually",{"_index":578,"title":{},"body":{"classes/TcsThread.html":{}}}],["add",{"_index":219,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["addconfig",{"_index":321,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addconfig(langtoappend",{"_index":326,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addeventhandler",{"_index":208,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["addmoduletogame",{"_index":509,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["addmoduletogame(newmodule",{"_index":514,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["already",{"_index":301,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModuleManager.html":{}}}],["alreadycreated",{"_index":294,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["amount",{"_index":908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":852,"title":{},"body":{"license.html":{}}}],["appear",{"_index":683,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":573,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread",{"_index":553,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread(module",{"_index":570,"title":{},"body":{"classes/TcsThread.html":{}}}],["applyeventhandler",{"_index":184,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["applyeventhandler(data",{"_index":198,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["args",{"_index":79,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arguments",{"_index":80,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arising",{"_index":887,"title":{},"body":{"license.html":{}}}],["array",{"_index":255,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["ask",{"_index":787,"title":{},"body":{"index.html":{}}}],["associated",{"_index":841,"title":{},"body":{"license.html":{}}}],["authors",{"_index":878,"title":{},"body":{"license.html":{}}}],["automatically",{"_index":691,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":594,"title":{},"body":{"classes/TcsThread.html":{}}}],["before",{"_index":655,"title":{},"body":{"contributing.html":{}}}],["benchmark",{"_index":36,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{}}}],["benchmark.stop",{"_index":602,"title":{},"body":{"classes/TcsThread.html":{}}}],["between",{"_index":42,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["bindaction",{"_index":246,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["boolean",{"_index":135,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["brief",{"_index":259,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["buf",{"_index":482,"title":{},"body":{"classes/TcsModule.html":{}}}],["buffer.from(d",{"_index":483,"title":{},"body":{"classes/TcsModule.html":{}}}],["build",{"_index":682,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":829,"title":{},"body":{"license.html":{}}}],["call",{"_index":73,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["callbacks",{"_index":59,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{}}}],["callbacks:serverevent",{"_index":89,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["called",{"_index":190,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["can't",{"_index":528,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["case",{"_index":272,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["catch",{"_index":170,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["category/name",{"_index":427,"title":{},"body":{"classes/TcsModule.html":{}}}],["cb",{"_index":75,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["change",{"_index":290,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["changes",{"_index":694,"title":{},"body":{"contributing.html":{}}}],["charge",{"_index":836,"title":{},"body":{"license.html":{}}}],["check",{"_index":280,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["checkversion",{"_index":379,"title":{},"body":{"classes/TcsModule.html":{}}}],["citizenfx/client",{"_index":702,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["citizenfx/server",{"_index":703,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["claim",{"_index":881,"title":{},"body":{"license.html":{}}}],["class",{"_index":22,"title":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["classes",{"_index":24,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"overview.html":{}}}],["cleartick(this.tick",{"_index":616,"title":{},"body":{"classes/TcsThread.html":{}}}],["clicking",{"_index":803,"title":{},"body":{"index.html":{}}}],["client",{"_index":74,"title":{},"body":{"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["clientcallback",{"_index":52,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["clone",{"_index":792,"title":{},"body":{"index.html":{}}}],["code",{"_index":662,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["color",{"_index":429,"title":{},"body":{"classes/TcsModule.html":{}}}],["come",{"_index":632,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["comes",{"_index":574,"title":{},"body":{"classes/TcsThread.html":{}}}],["command",{"_index":711,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commands",{"_index":816,"title":{},"body":{"index.html":{}}}],["compare",{"_index":410,"title":{},"body":{"classes/TcsModule.html":{}}}],["compared",{"_index":414,"title":{},"body":{"classes/TcsModule.html":{}}}],["comparenumber",{"_index":498,"title":{},"body":{"classes/TcsModule.html":{}}}],["compile",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["compiling",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["compodoc",{"_index":689,"title":{},"body":{"contributing.html":{}}}],["compodoc/compodoc",{"_index":699,"title":{},"body":{"contributing.html":{}}}],["concatened",{"_index":426,"title":{},"body":{"classes/TcsModule.html":{}}}],["concatinputs",{"_index":307,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["concatinputs[key",{"_index":311,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["conditions",{"_index":859,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":784,"title":{},"body":{"index.html":{}}}],["config",{"_index":351,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configuration",{"_index":337,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configured",{"_index":333,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["connection",{"_index":888,"title":{},"body":{"license.html":{}}}],["console",{"_index":150,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["console.error(error",{"_index":494,"title":{},"body":{"classes/TcsModule.html":{}}}],["console.log",{"_index":156,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{}}}],["console.log(`${consolecolors.red}[error",{"_index":178,"title":{},"body":{"classes/TcsCore.html":{}}}],["console.log(consolecolors.red",{"_index":461,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors",{"_index":423,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue",{"_index":502,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue}[debug",{"_index":175,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.blue}[tcs",{"_index":157,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.green",{"_index":457,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.green}ready",{"_index":172,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.red",{"_index":453,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.red}[tcsinputmanager",{"_index":319,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["consolecolors.reset",{"_index":176,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["consolecolors.yellow",{"_index":428,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${newmodule.getid",{"_index":539,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${thread.id}${consolecolors.red",{"_index":600,"title":{},"body":{"classes/TcsThread.html":{}}}],["consolecolors.yellow}[warning",{"_index":180,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.yellow}initializing",{"_index":158,"title":{},"body":{"classes/TcsCore.html":{}}}],["const",{"_index":47,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor",{"_index":31,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor(eventtype",{"_index":186,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["constructor(moduleinfos",{"_index":387,"title":{},"body":{"classes/TcsModule.html":{}}}],["constructor(timer",{"_index":558,"title":{},"body":{"classes/TcsThread.html":{}}}],["contain",{"_index":815,"title":{},"body":{"index.html":{}}}],["contained",{"_index":579,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid",{"_index":554,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid(id",{"_index":576,"title":{},"body":{"classes/TcsThread.html":{}}}],["contract",{"_index":884,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":779,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":649,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":650,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":276,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controller's",{"_index":263,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllerkey",{"_index":262,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllers",{"_index":281,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["copies",{"_index":854,"title":{},"body":{"license.html":{}}}],["copy",{"_index":839,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":828,"title":{},"body":{"license.html":{}}}],["core",{"_index":129,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["correctly",{"_index":456,"title":{},"body":{"classes/TcsModule.html":{}}}],["coverage",{"_index":666,"title":{"coverage.html":{}},"body":{"contributing.html":{},"coverage.html":{}}}],["create",{"_index":188,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["created",{"_index":575,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["creates",{"_index":213,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThreadsManager.html":{}}}],["createthread",{"_index":622,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["createthread(module",{"_index":625,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["current",{"_index":38,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["currently",{"_index":284,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["currentnumber",{"_index":496,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentstep",{"_index":411,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentthread",{"_index":634,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currentthread.appendthread(module",{"_index":640,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currinput",{"_index":310,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["currinput.inputkey",{"_index":318,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["d",{"_index":481,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["damages",{"_index":882,"title":{},"body":{"license.html":{}}}],["data",{"_index":113,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{}}}],["database",{"_index":271,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["date",{"_index":403,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["deal",{"_index":842,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":889,"title":{},"body":{"license.html":{}}}],["deaththreadchecker",{"_index":744,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deaththreadchecker(module",{"_index":763,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debug",{"_index":124,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":142,"title":{},"body":{"classes/TcsCore.html":{}}}],["debugexec",{"_index":547,"title":{},"body":{"classes/TcsThread.html":{}}}],["debugmode",{"_index":902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":62,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delay",{"_index":548,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delete",{"_index":629,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["deleted",{"_index":585,"title":{},"body":{"classes/TcsThread.html":{}}}],["deletes",{"_index":628,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["demo",{"_index":825,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":406,"title":{"dependencies.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"dependencies.html":{}}}],["dependency",{"_index":529,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["depends",{"_index":440,"title":{},"body":{"classes/TcsModule.html":{},"contributing.html":{}}}],["description",{"_index":70,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["destroymethod",{"_index":374,"title":{},"body":{"classes/TcsModule.html":{}}}],["destroymodule",{"_index":380,"title":{},"body":{"classes/TcsModule.html":{}}}],["develop",{"_index":814,"title":{},"body":{"index.html":{}}}],["developped",{"_index":774,"title":{},"body":{"index.html":{}}}],["dict",{"_index":366,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["dictionnary",{"_index":329,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["difference",{"_index":41,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["directly",{"_index":786,"title":{},"body":{"index.html":{}}}],["discution",{"_index":788,"title":{},"body":{"index.html":{}}}],["display",{"_index":144,"title":{},"body":{"classes/TcsCore.html":{}}}],["distribute",{"_index":850,"title":{},"body":{"license.html":{}}}],["doc",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["docdependencies",{"_index":700,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":656,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":369,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["don't",{"_index":782,"title":{},"body":{"index.html":{}}}],["dot",{"_index":419,"title":{},"body":{"classes/TcsModule.html":{}}}],["down",{"_index":452,"title":{},"body":{"classes/TcsModule.html":{}}}],["download",{"_index":492,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["drag",{"_index":807,"title":{},"body":{"index.html":{}}}],["drop",{"_index":808,"title":{},"body":{"index.html":{}}}],["due",{"_index":693,"title":{},"body":{"contributing.html":{}}}],["e",{"_index":458,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["each",{"_index":191,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["emitnet('callbacks:clientevent",{"_index":94,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('callbacks:serverevent",{"_index":97,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('tcs:handleevent",{"_index":238,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["en",{"_index":352,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["encountered",{"_index":599,"title":{},"body":{"classes/TcsThread.html":{}}}],["ensure",{"_index":811,"title":{},"body":{"index.html":{}}}],["enum",{"_index":107,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["environment",{"_index":669,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":125,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["error(error",{"_index":152,"title":{},"body":{"classes/TcsCore.html":{}}}],["errors",{"_index":911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["especially",{"_index":797,"title":{},"body":{"index.html":{}}}],["even",{"_index":912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":72,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"license.html":{}}}],["event.eventtype",{"_index":235,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.target",{"_index":225,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.targetid",{"_index":239,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["eventmanager",{"_index":118,"title":{},"body":{"classes/TcsCore.html":{}}}],["eventname",{"_index":71,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["events",{"_index":193,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["eventsmodulesinfos",{"_index":752,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventtype",{"_index":110,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["example",{"_index":26,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exec",{"_index":571,"title":{},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["execs",{"_index":549,"title":{},"body":{"classes/TcsThread.html":{}}}],["execute",{"_index":563,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["executed",{"_index":195,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["executions",{"_index":561,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exist",{"_index":302,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["exists",{"_index":541,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["expectations",{"_index":664,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":796,"title":{},"body":{"index.html":{}}}],["export",{"_index":819,"title":{},"body":{"index.html":{}}}],["express",{"_index":869,"title":{},"body":{"license.html":{}}}],["extends",{"_index":104,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["extra",{"_index":707,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":171,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{}}}],["files",{"_index":709,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill",{"_index":341,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filled",{"_index":344,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filter((listener",{"_index":233,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["filter((mod",{"_index":524,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["filter((module",{"_index":520,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["find",{"_index":336,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["findmodulebyid",{"_index":507,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["first",{"_index":798,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":874,"title":{},"body":{"license.html":{}}}],["fivem",{"_index":772,"title":{},"body":{"index.html":{}}}],["fivemtcs",{"_index":831,"title":{},"body":{"license.html":{}}}],["fivemtcs/types",{"_index":818,"title":{},"body":{"index.html":{}}}],["fnc",{"_index":897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["folder",{"_index":684,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["follow",{"_index":695,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["following",{"_index":710,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["foreach((listener",{"_index":236,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["foreach((module",{"_index":522,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["forget",{"_index":783,"title":{},"body":{"index.html":{}}}],["format",{"_index":673,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":542,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["foundmodule",{"_index":525,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["foundmodule.modulelaunched",{"_index":533,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["fr",{"_index":900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":773,"title":{},"body":{"index.html":{}}}],["free",{"_index":835,"title":{},"body":{"license.html":{}}}],["fs",{"_index":706,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":67,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":759,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":857,"title":{},"body":{"license.html":{}}}],["g",{"_index":698,"title":{},"body":{"contributing.html":{}}}],["game",{"_index":516,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["gamemodules",{"_index":508,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["get(key",{"_index":334,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace",{"_index":322,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace(key",{"_index":338,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getcurrentresourcename",{"_index":355,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getdependencies",{"_index":381,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["geteventtype",{"_index":185,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["getgametimer",{"_index":46,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["getid",{"_index":382,"title":{},"body":{"classes/TcsModule.html":{}}}],["getinput",{"_index":247,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["getpersonnalinputs",{"_index":248,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["getplayerbyentityid",{"_index":745,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getplayerbyentityid(id",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getthreadtimer",{"_index":555,"title":{},"body":{"classes/TcsThread.html":{}}}],["getting",{"_index":648,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":504,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"index.html":{}}}],["github",{"_index":399,"title":{},"body":{"classes/TcsModule.html":{}}}],["go",{"_index":173,"title":{},"body":{"classes/TcsCore.html":{}}}],["going",{"_index":903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":834,"title":{},"body":{"license.html":{}}}],["guide",{"_index":781,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["handler",{"_index":183,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["handles",{"_index":214,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["here",{"_index":651,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["hereby",{"_index":833,"title":{},"body":{"license.html":{}}}],["holders",{"_index":879,"title":{},"body":{"license.html":{}}}],["hostname",{"_index":471,"title":{},"body":{"classes/TcsModule.html":{}}}],["https",{"_index":468,"title":{},"body":{"classes/TcsModule.html":{}}}],["https.request(options",{"_index":478,"title":{},"body":{"classes/TcsModule.html":{}}}],["https://github.com/fivemtcs/core.git",{"_index":793,"title":{},"body":{"index.html":{}}}],["id",{"_index":364,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":439,"title":{},"body":{"classes/TcsModule.html":{}}}],["ignore",{"_index":100,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["implied",{"_index":870,"title":{},"body":{"license.html":{}}}],["included",{"_index":863,"title":{},"body":{"license.html":{}}}],["including",{"_index":845,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":215,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["informations",{"_index":349,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["init",{"_index":817,"title":{},"body":{"index.html":{}}}],["initialization",{"_index":273,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["initialize",{"_index":58,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["initmodule",{"_index":383,"title":{},"body":{"classes/TcsModule.html":{}}}],["input",{"_index":258,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["input.inputkey",{"_index":315,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["input.inputname",{"_index":317,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["inputalreadyused",{"_index":313,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["inputcontroller",{"_index":10,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputkey",{"_index":18,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputkeyboard",{"_index":11,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputname",{"_index":17,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputs",{"_index":119,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{}}}],["inside",{"_index":821,"title":{},"body":{"index.html":{}}}],["install",{"_index":697,"title":{},"body":{"contributing.html":{}}}],["installed",{"_index":532,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["instance",{"_index":390,"title":{},"body":{"classes/TcsModule.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"overview.html":{}}}],["iscontroljustpressed(0",{"_index":305,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isinputdisabled(2",{"_index":304,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isjustpressed",{"_index":249,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isn't",{"_index":531,"title":{},"body":{"classes/TcsModuleManager.html":{},"miscellaneous/variables.html":{}}}],["ispressed",{"_index":250,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isserversided",{"_index":120,"title":{},"body":{"classes/TcsCore.html":{}}}],["issue",{"_index":802,"title":{},"body":{"index.html":{}}}],["issues",{"_index":794,"title":{},"body":{"index.html":{}}}],["isthreadfull",{"_index":550,"title":{},"body":{"classes/TcsThread.html":{}}}],["isversionsuperior",{"_index":384,"title":{},"body":{"classes/TcsModule.html":{}}}],["isversionsuperior(current",{"_index":409,"title":{},"body":{"classes/TcsModule.html":{}}}],["isweaponinarray",{"_index":749,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isweaponinarray(weaponarray",{"_index":765,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":513,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["json",{"_index":484,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.parse",{"_index":353,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["json.parse(buf.tostring('utf",{"_index":485,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.version",{"_index":487,"title":{},"body":{"classes/TcsModule.html":{}}}],["key",{"_index":268,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{}}}],["keyboard",{"_index":299,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboard's",{"_index":261,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboardkey",{"_index":260,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keys",{"_index":288,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{}}}],["kind",{"_index":868,"title":{},"body":{"license.html":{}}}],["know",{"_index":401,"title":{},"body":{"classes/TcsModule.html":{}}}],["lang",{"_index":121,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["langtoappend",{"_index":330,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["language",{"_index":325,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{}}}],["last",{"_index":279,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"index.html":{}}}],["latest",{"_index":416,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":392,"title":{},"body":{"classes/TcsModule.html":{}}}],["launchmethod",{"_index":375,"title":{},"body":{"classes/TcsModule.html":{}}}],["level",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":883,"title":{},"body":{"license.html":{}}}],["liable",{"_index":880,"title":{},"body":{"license.html":{}}}],["license",{"_index":826,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":846,"title":{},"body":{"license.html":{}}}],["limited",{"_index":871,"title":{},"body":{"license.html":{}}}],["list",{"_index":331,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["listen",{"_index":194,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener",{"_index":189,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener.applyeventhandler(event.data",{"_index":237,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listener.geteventtype",{"_index":234,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listeners",{"_index":209,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["load",{"_index":350,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["loaded",{"_index":512,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadmodulelang",{"_index":323,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadmodulelang(module",{"_index":345,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadresourcefile",{"_index":354,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loads",{"_index":517,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadtcsmoduleinfos",{"_index":739,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction",{"_index":740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction.push(fnc",{"_index":898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":109,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["looking",{"_index":824,"title":{},"body":{"index.html":{}}}],["manager",{"_index":60,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["map",{"_index":343,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxexectimeperthread",{"_index":905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":873,"title":{},"body":{"license.html":{}}}],["merge",{"_index":708,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["message",{"_index":146,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["messagecolor",{"_index":422,"title":{},"body":{"classes/TcsModule.html":{}}}],["method",{"_index":391,"title":{},"body":{"classes/TcsModule.html":{}}}],["methods",{"_index":29,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["miscellaneous",{"_index":758,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":827,"title":{},"body":{"license.html":{}}}],["mod",{"_index":530,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mod.getid",{"_index":544,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mode",{"_index":147,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":848,"title":{},"body":{"license.html":{}}}],["module",{"_index":348,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["module.getid",{"_index":365,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["module.initmodule",{"_index":536,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.modulelaunched",{"_index":521,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.shouldlaunch",{"_index":535,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["moduledependencies",{"_index":438,"title":{},"body":{"classes/TcsModule.html":{}}}],["moduleinfos",{"_index":376,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulelaunched",{"_index":377,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulename",{"_index":436,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["modules",{"_index":122,"title":{"modules.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["moduletype",{"_index":435,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["more",{"_index":823,"title":{},"body":{"index.html":{}}}],["ms",{"_index":40,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["n",{"_index":491,"title":{},"body":{"classes/TcsModule.html":{}}}],["n${e",{"_index":601,"title":{},"body":{"classes/TcsThread.html":{}}}],["name",{"_index":69,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":692,"title":{},"body":{"contributing.html":{}}}],["needed",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":160,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"index.html":{}}}],["newly",{"_index":277,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["newmodule",{"_index":518,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["next",{"_index":809,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":877,"title":{},"body":{"license.html":{}}}],["notice",{"_index":861,"title":{},"body":{"license.html":{}}}],["npm",{"_index":685,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":87,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":15,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["object",{"_index":114,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["objkey",{"_index":360,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["obtaining",{"_index":838,"title":{},"body":{"license.html":{}}}],["one",{"_index":415,"title":{},"body":{"classes/TcsModule.html":{}}}],["onnet",{"_index":88,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('callbacks:clientevent",{"_index":84,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('tcs:handleevent",{"_index":224,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["ontcsloaded",{"_index":741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions",{"_index":742,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions.push(fnc",{"_index":899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":771,"title":{},"body":{"index.html":{}}}],["optional",{"_index":148,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":470,"title":{},"body":{"classes/TcsModule.html":{}}}],["otherwise",{"_index":886,"title":{},"body":{"license.html":{}}}],["out",{"_index":778,"title":{},"body":{"index.html":{},"license.html":{}}}],["outcoming",{"_index":216,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["overview",{"_index":890,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":757,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":777,"title":{},"body":{"index.html":{}}}],["param",{"_index":95,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["parameters",{"_index":68,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["parseint(compare.split('.')[currentstep",{"_index":499,"title":{},"body":{"classes/TcsModule.html":{}}}],["parseint(current.split('.')[currentstep",{"_index":497,"title":{},"body":{"classes/TcsModule.html":{}}}],["particular",{"_index":875,"title":{},"body":{"license.html":{}}}],["path",{"_index":475,"title":{},"body":{"classes/TcsModule.html":{}}}],["permission",{"_index":832,"title":{},"body":{"license.html":{}}}],["permit",{"_index":855,"title":{},"body":{"license.html":{}}}],["person",{"_index":837,"title":{},"body":{"license.html":{}}}],["personalinputs",{"_index":251,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["personalized",{"_index":267,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["persons",{"_index":856,"title":{},"body":{"license.html":{}}}],["place",{"_index":820,"title":{},"body":{"index.html":{}}}],["player",{"_index":270,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["player's",{"_index":266,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["please",{"_index":653,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["port",{"_index":473,"title":{},"body":{"classes/TcsModule.html":{}}}],["portions",{"_index":865,"title":{},"body":{"license.html":{}}}],["possible",{"_index":795,"title":{},"body":{"index.html":{}}}],["precompilerender",{"_index":687,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":425,"title":{},"body":{"classes/TcsModule.html":{}}}],["presentation",{"_index":770,"title":{},"body":{"index.html":{}}}],["pressed",{"_index":278,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["prettier",{"_index":672,"title":{},"body":{"contributing.html":{}}}],["print",{"_index":149,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["printdebug",{"_index":385,"title":{},"body":{"classes/TcsModule.html":{}}}],["printdebug(message",{"_index":421,"title":{},"body":{"classes/TcsModule.html":{}}}],["printed",{"_index":904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":27,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["project",{"_index":701,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":607,"title":{},"body":{"classes/TcsThread.html":{}}}],["promise((resolve",{"_index":609,"title":{},"body":{"classes/TcsThread.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["provided",{"_index":866,"title":{},"body":{"license.html":{}}}],["public",{"_index":51,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["publish",{"_index":849,"title":{},"body":{"license.html":{}}}],["pull",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":876,"title":{},"body":{"license.html":{}}}],["push",{"_index":676,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":785,"title":{},"body":{"index.html":{}}}],["raw.githubusercontent.com",{"_index":472,"title":{},"body":{"classes/TcsModule.html":{}}}],["read",{"_index":654,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reading",{"_index":780,"title":{},"body":{"index.html":{}}}],["readme",{"_index":667,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":117,"title":{},"body":{"classes/TcsCore.html":{}}}],["ready",{"_index":393,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["recovery",{"_index":265,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerkeymapping(actionname",{"_index":298,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerservercallback",{"_index":53,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["release",{"_index":806,"title":{},"body":{"index.html":{}}}],["releases",{"_index":776,"title":{},"body":{"index.html":{}}}],["remainingdependenciestostart",{"_index":523,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remainingdependenciestostart.length",{"_index":534,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remove",{"_index":584,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads",{"_index":556,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads(module",{"_index":582,"title":{},"body":{"classes/TcsThread.html":{}}}],["removethread",{"_index":557,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethread(id",{"_index":586,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule",{"_index":623,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule(module",{"_index":630,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["render",{"_index":690,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":339,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replace[objkey",{"_index":362,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replaceto",{"_index":361,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["report",{"_index":801,"title":{},"body":{"index.html":{}}}],["repository",{"_index":790,"title":{},"body":{"index.html":{}}}],["req",{"_index":477,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.end",{"_index":495,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.on('error",{"_index":493,"title":{},"body":{"classes/TcsModule.html":{}}}],["request",{"_index":681,"title":{},"body":{"contributing.html":{}}}],["requestid",{"_index":54,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["requests",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["require('https",{"_index":469,"title":{},"body":{"classes/TcsModule.html":{}}}],["res",{"_index":479,"title":{},"body":{"classes/TcsModule.html":{}}}],["res.on('data",{"_index":480,"title":{},"body":{"classes/TcsModule.html":{}}}],["reset",{"_index":287,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["resetinputsdefault",{"_index":252,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["resolved",{"_index":608,"title":{},"body":{"classes/TcsThread.html":{}}}],["resource",{"_index":822,"title":{},"body":{"index.html":{}}}],["resources",{"_index":775,"title":{},"body":{"index.html":{}}}],["ressource",{"_index":437,"title":{},"body":{"classes/TcsModule.html":{}}}],["restriction",{"_index":844,"title":{},"body":{"license.html":{}}}],["result",{"_index":19,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["result.replace(`{${objkey",{"_index":363,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":48,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["rights",{"_index":847,"title":{},"body":{"license.html":{}}}],["run",{"_index":686,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":540,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["scheduleresourcetick",{"_index":168,"title":{},"body":{"classes/TcsCore.html":{}}}],["scripts",{"_index":901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":580,"title":{},"body":{"classes/TcsThread.html":{}}}],["section",{"_index":789,"title":{},"body":{"index.html":{}}}],["sell",{"_index":853,"title":{},"body":{"license.html":{}}}],["send",{"_index":201,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["sendevent",{"_index":210,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["sending",{"_index":680,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":65,"title":{},"body":{"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"index.html":{}}}],["server.cfg",{"_index":810,"title":{},"body":{"index.html":{}}}],["servercallback",{"_index":55,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["set",{"_index":433,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["setdestroymodule",{"_index":386,"title":{},"body":{"classes/TcsModule.html":{}}}],["setdestroymodule(destroymethod",{"_index":431,"title":{},"body":{"classes/TcsModule.html":{}}}],["setinput",{"_index":253,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["settick",{"_index":231,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{}}}],["settick(async",{"_index":593,"title":{},"body":{"classes/TcsThread.html":{}}}],["settimeout(resolve",{"_index":611,"title":{},"body":{"classes/TcsThread.html":{}}}],["setup",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":862,"title":{},"body":{"license.html":{}}}],["shoulddeletethread",{"_index":643,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["shouldlaunch",{"_index":378,"title":{},"body":{"classes/TcsModule.html":{}}}],["showerrorsanycase",{"_index":910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showwarningsanycase",{"_index":914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutting",{"_index":460,"title":{},"body":{"classes/TcsModule.html":{}}}],["side",{"_index":66,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["simple",{"_index":805,"title":{},"body":{"index.html":{}}}],["software",{"_index":840,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["sources",{"_index":791,"title":{},"body":{"index.html":{}}}],["specified",{"_index":145,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["splitted",{"_index":418,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/.../cli_death.ts",{"_index":760,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_vehicle.ts",{"_index":762,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_weapon.ts",{"_index":761,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mixed_config.ts",{"_index":896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_main.ts",{"_index":895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_moduleinfos.ts",{"_index":894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/assets/lang/${id}/${language}.json",{"_index":367,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/lang/${tcs_config.lang}.json",{"_index":356,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/mixed_config.ts",{"_index":714,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts",{"_index":25,"title":{},"body":{"classes/TcsBenchmark.html":{},"coverage.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:21",{"_index":37,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:8",{"_index":33,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts",{"_index":50,"title":{},"body":{"classes/TcsCallbackManager.html":{},"coverage.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:10",{"_index":57,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:49",{"_index":78,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:60",{"_index":64,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:8",{"_index":61,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:9",{"_index":77,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts",{"_index":182,"title":{},"body":{"classes/TcsEventListener.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:25",{"_index":202,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:33",{"_index":199,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:8",{"_index":197,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:9",{"_index":187,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts",{"_index":207,"title":{},"body":{"classes/TcsEventManager.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:53",{"_index":220,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:61",{"_index":218,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:8",{"_index":221,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:9",{"_index":212,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/inputs/mixed_inputs.ts",{"_index":6,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts",{"_index":244,"title":{},"body":{"classes/TcsInputManager.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:104",{"_index":289,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:128",{"_index":286,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:146",{"_index":264,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:27",{"_index":256,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:53",{"_index":274,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:70",{"_index":283,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:8",{"_index":285,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:86",{"_index":269,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:9",{"_index":254,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts",{"_index":320,"title":{},"body":{"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:28",{"_index":335,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:44",{"_index":340,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:67",{"_index":347,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:8",{"_index":324,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:98",{"_index":327,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/modules/mixed_module.ts",{"_index":373,"title":{},"body":{"classes/TcsModule.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_module.ts:10",{"_index":395,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:11",{"_index":394,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:115",{"_index":398,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:13",{"_index":397,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:14",{"_index":389,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:160",{"_index":412,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:181",{"_index":424,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:48",{"_index":407,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:56",{"_index":405,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:64",{"_index":432,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:71",{"_index":404,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:9",{"_index":396,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:95",{"_index":408,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts",{"_index":506,"title":{},"body":{"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:50",{"_index":515,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:66",{"_index":511,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:8",{"_index":510,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/threads/mixed_threads.ts",{"_index":546,"title":{},"body":{"classes/TcsThread.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:10",{"_index":569,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:100",{"_index":587,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:11",{"_index":568,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:115",{"_index":583,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:13",{"_index":559,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:132",{"_index":577,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:49",{"_index":581,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:57",{"_index":562,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:74",{"_index":564,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:8",{"_index":567,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:83",{"_index":572,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:9",{"_index":566,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts",{"_index":620,"title":{},"body":{"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:25",{"_index":626,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:46",{"_index":627,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:64",{"_index":631,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:8",{"_index":624,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/mixed_tcs.ts",{"_index":116,"title":{},"body":{"classes/TcsCore.html":{},"coverage.html":{}}}],["src/core/mixed_tcs.ts:10",{"_index":137,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:11",{"_index":141,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:12",{"_index":134,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:13",{"_index":130,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:14",{"_index":127,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:46",{"_index":143,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:59",{"_index":153,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:69",{"_index":155,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:8",{"_index":132,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:9",{"_index":139,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/mixed_main.ts",{"_index":738,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/core/events/client/cli_death.ts",{"_index":743,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_vehicle.ts",{"_index":746,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_weapon.ts",{"_index":748,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/mixed_moduleinfos.ts",{"_index":751,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/events/mixed_events.ts",{"_index":103,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["src/types/modules/mixed_moduleinfos.ts",{"_index":503,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"coverage.html":{}}}],["src/types/threads/mixed_threadinterface.ts",{"_index":619,"title":{},"body":{"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["start",{"_index":28,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["started",{"_index":466,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["starting",{"_index":467,"title":{},"body":{"classes/TcsModule.html":{}}}],["starts",{"_index":34,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{}}}],["statements",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":417,"title":{},"body":{"classes/TcsModule.html":{}}}],["steps",{"_index":696,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["stop",{"_index":30,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["stopped",{"_index":434,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["style",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":858,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":851,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":864,"title":{},"body":{"license.html":{}}}],["superior",{"_index":413,"title":{},"body":{"classes/TcsModule.html":{}}}],["table",{"_index":756,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":755,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":112,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{}}}],["targetid",{"_index":106,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcs",{"_index":128,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tcs.callbacks.servercallback.indexof(eventname",{"_index":91,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["tcs.error",{"_index":527,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["tcs.error(`${key",{"_index":358,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["tcs.error(`actionname",{"_index":300,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcs.isserversided",{"_index":227,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModule.html":{}}}],["tcs.lang.loadmodulelang(this",{"_index":464,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.threads.removethreadbymodule(this",{"_index":454,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.warning",{"_index":368,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config",{"_index":716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcs_config.debugmode",{"_index":174,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config.lang",{"_index":359,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["tcs_config.maxexectimeperthread",{"_index":603,"title":{},"body":{"classes/TcsThread.html":{}}}],["tcs_config.showerrorsanycase",{"_index":177,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.showwarningsanycase",{"_index":179,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.versionningcheck",{"_index":443,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcsbenchmark",{"_index":23,"title":{"classes/TcsBenchmark.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["tcscallbackmanager",{"_index":49,"title":{"classes/TcsCallbackManager.html":{}},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"coverage.html":{}}}],["tcsclientevent",{"_index":102,"title":{"interfaces/TcsClientEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["tcscontrollerinputs",{"_index":309,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcscore",{"_index":115,"title":{"classes/TcsCore.html":{}},"body":{"classes/TcsCore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsdeveloper",{"_index":812,"title":{},"body":{"index.html":{}}}],["tcsevent",{"_index":105,"title":{"interfaces/TcsEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventlistener",{"_index":181,"title":{"classes/TcsEventListener.html":{}},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventmanager",{"_index":131,"title":{"classes/TcsEventManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventslist",{"_index":111,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["tcseventtarget",{"_index":108,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcseventtarget.client",{"_index":229,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.local",{"_index":228,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.server",{"_index":226,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcsinput",{"_index":16,"title":{"interfaces/TcsInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"coverage.html":{}}}],["tcsinputmanager",{"_index":133,"title":{"classes/TcsInputManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"coverage.html":{}}}],["tcskeyboardinputs",{"_index":308,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcslanguagemanager",{"_index":136,"title":{"classes/TcsLanguageManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["tcsmodule",{"_index":346,"title":{"classes/TcsModule.html":{}},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsmoduleinfos",{"_index":388,"title":{"interfaces/TcsModuleInfos.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsmodulemanager",{"_index":138,"title":{"classes/TcsModuleManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["tcsmoduletypes",{"_index":505,"title":{},"body":{"interfaces/TcsModuleInfos.html":{}}}],["tcsthread",{"_index":545,"title":{"classes/TcsThread.html":{}},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsthread(timer",{"_index":638,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["tcsthreadexec",{"_index":604,"title":{"interfaces/TcsThreadExec.html":{}},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["tcsthreadsmanager",{"_index":140,"title":{"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tells",{"_index":39,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.actioninputs",{"_index":292,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.find",{"_index":295,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.push",{"_index":297,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.addconfig(dict",{"_index":372,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.callbacks",{"_index":165,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.checkversion",{"_index":445,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.clientcallback",{"_index":82,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid",{"_index":86,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid](args",{"_index":85,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[this.requestid",{"_index":96,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.debugexec(thread",{"_index":597,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.delay(this.timer",{"_index":595,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.destroymethod",{"_index":447,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.eventmanager",{"_index":159,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.eventtype",{"_index":204,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.execs",{"_index":588,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter",{"_index":617,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter((thread",{"_index":614,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.find((thread",{"_index":618,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.foreach((thread",{"_index":596,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.length",{"_index":612,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.push(thread",{"_index":613,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.findmodulebyid(mod",{"_index":526,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.findmodulebyid(newmodule.getid",{"_index":537,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules",{"_index":519,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.find((mod",{"_index":543,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.push(newmodule",{"_index":538,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.getid",{"_index":490,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.getpersonnalinputs",{"_index":293,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.handler",{"_index":205,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.handler(data",{"_index":206,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.inputs",{"_index":164,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isserversided",{"_index":167,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isthreadfull",{"_index":590,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.isversionsuperior(current",{"_index":501,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.isversionsuperior(json.version",{"_index":488,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.lang",{"_index":162,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{}}}],["this.lang[key",{"_index":357,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.launchmethod",{"_index":446,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.launchmethod(this",{"_index":463,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.listeners",{"_index":223,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.listeners.push(handler",{"_index":243,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.loadmodulelang(module",{"_index":371,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.moduleinfos",{"_index":442,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.dependencies",{"_index":450,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git",{"_index":444,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git}/main/.tcs.json",{"_index":476,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.moduletype}/${this.moduleinfos.modulename",{"_index":449,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.version",{"_index":489,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modulelaunched",{"_index":448,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modules",{"_index":161,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.personalinputs",{"_index":291,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.personalinputs.find",{"_index":316,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.personalinputs.push(currinput",{"_index":312,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.personalinputs.some",{"_index":314,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.printdebug",{"_index":455,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('module",{"_index":465,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('shutting",{"_index":451,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('starting",{"_index":462,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.removethreadbymodule(module",{"_index":647,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.requestid",{"_index":98,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.sendevent(event",{"_index":230,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.servercallback",{"_index":83,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[eventname",{"_index":101,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index",{"_index":92,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index](_source",{"_index":93,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.shouldlaunch",{"_index":441,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.start",{"_index":45,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.threadid",{"_index":591,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.threads",{"_index":163,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.threadslist",{"_index":633,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.find((thread",{"_index":635,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.foreach((thread",{"_index":641,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.push(currentthread",{"_index":639,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.splice(index",{"_index":645,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.tick",{"_index":592,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.timer",{"_index":589,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.waitingevents",{"_index":222,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.foreach((event",{"_index":232,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.push(event",{"_index":242,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.splice(index",{"_index":240,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["thread",{"_index":560,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["thread.containsthreadbyid(id",{"_index":642,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.exec",{"_index":598,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.getthreadtimer",{"_index":636,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.id",{"_index":615,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.id.split",{"_index":605,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.isthreadfull",{"_index":637,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removemodulethreads(module",{"_index":646,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removethread(id",{"_index":644,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["threadid",{"_index":551,"title":{},"body":{"classes/TcsThread.html":{}}}],["threads",{"_index":123,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["threadslist",{"_index":621,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thrown",{"_index":459,"title":{},"body":{"classes/TcsModule.html":{}}}],["tick",{"_index":552,"title":{},"body":{"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":44,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":35,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["times",{"_index":196,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["took",{"_index":606,"title":{},"body":{"classes/TcsThread.html":{}}}],["tools",{"_index":813,"title":{},"body":{"index.html":{}}}],["tort",{"_index":885,"title":{},"body":{"license.html":{}}}],["translation",{"_index":332,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["translations",{"_index":328,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["transmitted",{"_index":81,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["triggered",{"_index":192,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggers",{"_index":200,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggerservercallback",{"_index":56,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["true",{"_index":420,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":166,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["trying",{"_index":370,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["ts",{"_index":99,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"contributing.html":{}}}],["tslint",{"_index":704,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":705,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["undefined",{"_index":169,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{}}}],["up",{"_index":402,"title":{},"body":{"classes/TcsModule.html":{}}}],["update",{"_index":660,"title":{},"body":{"contributing.html":{}}}],["use",{"_index":674,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":217,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{}}}],["uses",{"_index":688,"title":{},"body":{"contributing.html":{}}}],["using",{"_index":671,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["value",{"_index":63,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":342,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["variable",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":893,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehiclethreadchecker",{"_index":747,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["vehiclethreadchecker(module",{"_index":769,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verify",{"_index":800,"title":{},"body":{"index.html":{}}}],["version",{"_index":400,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versionningcheck",{"_index":916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":799,"title":{},"body":{"index.html":{}}}],["very",{"_index":804,"title":{},"body":{"index.html":{}}}],["void",{"_index":151,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["wait",{"_index":565,"title":{},"body":{"classes/TcsThread.html":{}}}],["waiting",{"_index":203,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["waitingevents",{"_index":211,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["warning",{"_index":126,"title":{},"body":{"classes/TcsCore.html":{}}}],["warning(warning",{"_index":154,"title":{},"body":{"classes/TcsCore.html":{}}}],["warnings",{"_index":915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":872,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":867,"title":{},"body":{"license.html":{}}}],["weaponarray",{"_index":767,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponhash",{"_index":766,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponthreadchecker",{"_index":750,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["weaponthreadchecker(module",{"_index":768,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whether",{"_index":275,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["without",{"_index":843,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":430,"title":{},"body":{"classes/TcsModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionInput.html":{"url":"interfaces/ActionInput.html","title":"interface - ActionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionName\n                                \n                                \n                                        inputController\n                                \n                                \n                                        inputKeyboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionName\n                                    \n                                \n                                \n                                    \n                                        actionName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputController\n                                    \n                                \n                                \n                                    \n                                        inputController:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputKeyboard\n                                    \n                                \n                                \n                                    \n                                        inputKeyboard:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsBenchmark.html":{"url":"classes/TcsBenchmark.html","title":"class - TcsBenchmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsBenchmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/benchmark/mixed_benchmark.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n                \n                    \n                            Starts the timer for the benchmark\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:21\n                \n            \n\n\n            \n                \n                    Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time difference in ms\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsBenchmark {\n\tprivate start: number;\n\n\t/**\n\t * Starts the timer for the benchmark\n\t */\n\tconstructor() {\n\t\tthis.start = GetGameTimer();\n\t}\n\n\t/**\n\t * Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\t * @returns The time difference in ms\n\t */\n\tstop() {\n\t\tconst difference = GetGameTimer() - this.start;\n\t\treturn difference;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCallbackManager.html":{"url":"classes/TcsCallbackManager.html","title":"class - TcsCallbackManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCallbackManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/callbacks/mixed_callbackManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ClientCallBack\n                            \n                            \n                                RegisterServerCallback\n                            \n                            \n                                    Public\n                                requestId\n                            \n                            \n                                    Public\n                                ServerCallBack\n                            \n                            \n                                TriggerServerCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize the callbacks manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ClientCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RegisterServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:60\n                            \n                        \n\n                \n                    \n                        Server side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the client side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ServerCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TriggerServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:49\n                            \n                        \n\n                \n                    \n                        Client side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the server side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                arguments to be transmitted on the server side\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsCallbackManager {\n\tpublic ClientCallBack: any[];\n\tpublic ServerCallBack: any[];\n\tpublic requestId = 0;\n\n\t/**\n\t * Initialize the callbacks manager\n\t */\n\tconstructor() {\n\t\tthis.ClientCallBack = [];\n\t\tthis.ServerCallBack = [];\n\n\t\t/**\n\t\t * Client side event\n\t\t */\n\t\tonNet('callbacks:clientEvent', (requestId: number, args: any[]) => {\n\t\t\tthis.ClientCallBack[requestId](args);\n\t\t\tthis.ClientCallBack[requestId] = null;\n\t\t});\n\n\t\t/**\n\t\t * Server side event\n\t\t */\n\t\tonNet(\n\t\t\t'callbacks:serverEvent',\n\t\t\t(eventName: string, requestId: number, args: any) => {\n\t\t\t\tconst _source = source;\n\t\t\t\tconst index = TCS.callbacks.ServerCallBack.indexOf(eventName);\n\t\t\t\tif (this.ServerCallBack[index] != null) {\n\t\t\t\t\tthis.ServerCallBack[index](_source, args);\n\t\t\t\t}\n\t\t\t\temitNet('callbacks:clientEvent', _source, requestId, args);\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Client side function\n\t * @param eventName The name of the event to call on the server side\n\t * @param cb return function\n\t * @param args arguments to be transmitted on the server side\n\t */\n\tTriggerServerCallback = (eventName: string, cb: Function, args: any) => {\n\t\tthis.ClientCallBack[this.requestId] = cb;\n\t\temitNet('callbacks:serverEvent', eventName, this.requestId, args);\n\t\tthis.requestId++;\n\t};\n\n\t/**\n\t * Server side function\n\t * @param eventName The name of the event to call on the client side\n\t * @param cb return function\n\t */\n\tRegisterServerCallback = (eventName: string, cb: Function) => {\n\t\t//@ts-ignore\n\t\tthis.ServerCallBack[eventName] = cb;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsClientEvent.html":{"url":"interfaces/TcsClientEvent.html","title":"interface - TcsClientEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsClientEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TcsEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCore.html":{"url":"classes/TcsCore.html","title":"class - TcsCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mixed_tcs.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                callbacks\n                            \n                            \n                                    Readonly\n                                eventManager\n                            \n                            \n                                    Readonly\n                                inputs\n                            \n                            \n                                    Readonly\n                                isServerSided\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Readonly\n                                modules\n                            \n                            \n                                    Readonly\n                                threads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/mixed_tcs.ts:14\n                            \n                        \n\n                \n                    \n                            Initialize the TCS core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            callbacks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCallbackManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            eventManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsInputManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isServerSided\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsLanguageManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            threads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThreadsManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:46\n                \n            \n\n\n            \n                \n                    Display the specified message if the server is in debug mode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(error: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:59\n                \n            \n\n\n            \n                \n                    Display the specified error in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \nwarning(warning: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:69\n                \n            \n\n\n            \n                \n                    Display the specified warning in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    warning\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Warning to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsCore {\n\treadonly eventManager: TcsEventManager;\n\treadonly modules: TcsModuleManager;\n\treadonly lang: TcsLanguageManager;\n\treadonly threads: TcsThreadsManager;\n\treadonly inputs: TcsInputManager;\n\treadonly callbacks: TcsCallbackManager;\n\treadonly isServerSided: boolean;\n\n\t/**\n\t * Initialize the TCS core\n\t */\n\tconstructor() {\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.YELLOW}Initializing...`,\n\t\t);\n\t\tthis.eventManager = new TcsEventManager();\n\t\tthis.modules = new TcsModuleManager();\n\t\tthis.lang = new TcsLanguageManager();\n\t\tthis.threads = new TcsThreadsManager();\n\t\tthis.inputs = new TcsInputManager();\n\t\tthis.callbacks = new TcsCallbackManager();\n\n\t\ttry {\n\t\t\t//@ts-ignore\n\t\t\tthis.isServerSided = ScheduleResourceTick != undefined;\n\t\t} catch (error) {\n\t\t\tthis.isServerSided = false;\n\t\t}\n\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.GREEN}Ready to go !`,\n\t\t);\n\t}\n\n\t/**\n\t * Display the specified message if the server is in debug mode\n\t * @param message Message to print in the console\n\t */\n\tdebug(message: String) {\n\t\tif (TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE}[debug] ${message}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified error in the console\n\t * @param error Error to print in the console\n\t */\n\terror(error: String) {\n\t\tif (TCS_CONFIG.showErrorsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(`${ConsoleColors.RED}[ERROR] ${error}`, ConsoleColors.RESET);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified warning in the console\n\t * @param warning Warning to print in the console\n\t */\n\twarning(warning: String) {\n\t\tif (TCS_CONFIG.showWarningsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.YELLOW}[WARNING] ${warning}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsEvent.html":{"url":"interfaces/TcsEvent.html","title":"interface - TcsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:         TcsEventsList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventsList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         TcsEventTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventListener.html":{"url":"classes/TcsEventListener.html","title":"class - TcsEventListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventListenerClass.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventType\n                            \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEventHandler\n                            \n                            \n                                getEventType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventType: TcsEventsList, handler: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n                \n                    \n                            Create a listener that will be called each time the specified event is triggered\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        TcsEventsList\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Type of events to listen to\n\n                                                        \n                                                \n                                                \n                                                        handler\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current event handler, that will be executed each times the event is triggered\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventsList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyEventHandler\n                        \n                        \n                    \n                \n            \n            \n                \napplyEventHandler(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:33\n                \n            \n\n\n            \n                \n                    Triggers the event listener function with the specified data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Data to send to the event listener function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventType\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventType()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:25\n                \n            \n\n\n            \n                \n                    Get the current listener event it is waiting for\n\n\n                    \n                    \n                    \n                        Returns :         TcsEventsList\n\n                    \n                    \n                        Current event type name\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventListener {\n\tprivate eventType: TcsEventsList;\n\tprivate handler: Function;\n\n\t/**\n\t * Create a listener that will be called each time the specified event is triggered\n\t * @param eventType Type of events to listen to\n\t * @param handler Current event handler, that will be executed each times the event is triggered\n\t */\n\tconstructor(eventType: TcsEventsList, handler: Function) {\n\t\tthis.eventType = eventType;\n\t\tthis.handler = handler;\n\t}\n\n\t/**\n\t *\tGet the current listener event it is waiting for\n\t * @returns Current event type name\n\t */\n\tgetEventType() {\n\t\treturn this.eventType;\n\t}\n\n\t/**\n\t * Triggers the event listener function with the specified data\n\t * @param data Data to send to the event listener function\n\t */\n\tapplyEventHandler(data: Object = {}) {\n\t\tthis.handler(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventManager.html":{"url":"classes/TcsEventManager.html","title":"class - TcsEventManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEventHandler\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                sendEvent\n                            \n                            \n                                    Private\n                                waitingEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an event manager. It handles all the incoming events and outcoming events.\nShould only be used by the core.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEventHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:61\n                            \n                        \n\n                \n                    \n                        Add an event handler that will be triggered each time the specified event will be triggered\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        handler\n                                                        \n                                                                Handler to add\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventListener[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:53\n                            \n                        \n\n                \n                    \n                        Send the specified event and triggers it for the target\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        event\n                                                        \n                                                                Event to send\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            waitingEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventManager {\n\tprivate waitingEvents: TcsEvent[];\n\tprivate listeners: TcsEventListener[];\n\n\t/**\n\t * Creates an event manager. It handles all the incoming events and outcoming events.\n\t * Should only be used by the core.\n\t */\n\tconstructor() {\n\t\tthis.waitingEvents = [];\n\t\tthis.listeners = [];\n\n\t\tonNet('tcs:handleEvent', (event: TcsEvent) => {\n\t\t\tif (event.target === TcsEventTarget.SERVER) {\n\t\t\t\tif (TCS.isServerSided) event.target = TcsEventTarget.LOCAL;\n\t\t\t\telse event.target = TcsEventTarget.CLIENT;\n\t\t\t}\n\t\t\tif (event.target === TcsEventTarget.CLIENT && !TCS.isServerSided) {\n\t\t\t\tevent.target = TcsEventTarget.LOCAL;\n\t\t\t}\n\t\t\tthis.sendEvent(event);\n\t\t});\n\n\t\tsetTick(() => {\n\t\t\tthis.waitingEvents.forEach((event, index) => {\n\t\t\t\tif (event.target == TcsEventTarget.LOCAL) {\n\t\t\t\t\tthis.listeners\n\t\t\t\t\t\t.filter((listener) => listener.getEventType() == event.eventType)\n\t\t\t\t\t\t.forEach((listener) => listener.applyEventHandler(event.data));\n\t\t\t\t} else {\n\t\t\t\t\tif (!TCS.isServerSided) emitNet('tcs:handleEvent', event);\n\t\t\t\t\telse {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\temitNet('tcs:handleEvent', event.targetId, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.waitingEvents.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send the specified event and triggers it for the target\n\t * @param event Event to send\n\t */\n\tsendEvent = (event: TcsEvent) => {\n\t\tthis.waitingEvents.push(event);\n\t};\n\n\t/**\n\t * Add an event handler that will be triggered each time the specified event will be triggered\n\t * @param handler Handler to add\n\t */\n\taddEventHandler = (handler: TcsEventListener) => {\n\t\tthis.listeners.push(handler);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsInput.html":{"url":"interfaces/TcsInput.html","title":"interface - TcsInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        inputKey\n                                \n                                \n                                        inputName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputKey\n                                    \n                                \n                                \n                                    \n                                        inputKey:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputName\n                                    \n                                \n                                \n                                    \n                                        inputName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsInputManager.html":{"url":"classes/TcsInputManager.html","title":"class - TcsInputManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsInputManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionInputs\n                            \n                            \n                                bindAction\n                            \n                            \n                                getInput\n                            \n                            \n                                getPersonnalInputs\n                            \n                            \n                                isJustPressed\n                            \n                            \n                                isPressed\n                            \n                            \n                                    Private\n                                personalInputs\n                            \n                            \n                                resetInputsDefault\n                            \n                            \n                                setInput\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/inputs/mixed_inputsManager.ts:9\n                            \n                        \n\n                \n                    \n                            Initialize the inputs manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actionInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bindAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:27\n                            \n                        \n\n                \n                    \n                        Create an action from an input\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                name of the action\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                        \n                                                                brief description of the action\n\n                                                        \n                                                \n                                                \n                                                        keyboardKey\n                                                        \n                                                                keyboard's input\n\n                                                        \n                                                \n                                                \n                                                        controllerKey\n                                                        \n                                                                controller's input\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:146\n                            \n                        \n\n                \n                    \n                        Recovery of the player's personalized input\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        inputName\n                                                        \n                                                                name of the key\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPersonnalInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:86\n                            \n                        \n\n                \n                    \n                        Recovery of player data from the database, in case the player is new, initialization of data\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isJustPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:53\n                            \n                        \n\n                \n                    \n                        Returns whether a control was newly pressed since the last check, used only for Controllers\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:70\n                            \n                        \n\n                \n                    \n                        Returns whether a control is currently pressed, used only for Controllers\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            personalInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetInputsDefault\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:128\n                            \n                        \n\n                \n                    \n                        reset all keys to default\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                          \n                                      \n                                      \n                                                \n                                                        inputName\n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:104\n                            \n                        \n\n                \n                    \n                        Change a key\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        inputName\n                                                        \n                                                                key by default\n\n                                                        \n                                                \n                                                \n                                                        inputKey\n                                                        \n                                                                New input\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsInputManager {\n\tprivate personalInputs: Array;\n\tprivate actionInputs: Array;\n\n\t/**\n\t * Initialize the inputs manager\n\t */\n\tconstructor() {\n\t\tthis.personalInputs = [];\n\t\tthis.actionInputs = [];\n\t\tthis.getPersonnalInputs();\n\t}\n\n\t/**\n\t * Create an action from an input\n\t * @param actionName name of the action\n\t * @param description brief description of the action\n\t * @param keyboardKey keyboard's input\n\t * @param controllerKey controller's input\n\t */\n\tbindAction = (\n\t\tactionName: string,\n\t\tdescription: string,\n\t\tkeyboardKey: string,\n\t\tcontrollerKey: number,\n\t) => {\n\t\tconst alreadyCreated = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\t\tif (!alreadyCreated) {\n\t\t\tthis.actionInputs.push({\n\t\t\t\tactionName: actionName,\n\t\t\t\tinputKeyboard: keyboardKey,\n\t\t\t\tinputController: controllerKey,\n\t\t\t});\n\t\t\tRegisterKeyMapping(actionName, description, 'keyboard', keyboardKey);\n\t\t} else {\n\t\t\tTCS.error(`actionName: ${actionName} already exist !`);\n\t\t}\n\t};\n\n\t/**\n\t * Returns whether a control was newly pressed since the last check, used only for Controllers\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisJustPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\n\t\tif (!actionData) return false;\n\n\t\tif (!IsInputDisabled(2)) {\n\t\t\treturn IsControlJustPressed(0, actionData.inputController);\n\t\t}\n\t};\n\n\t/**\n\t * Returns whether a control is currently pressed, used only for Controllers\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\n\t\tif (!actionData) return false;\n\n\t\tif (!IsInputDisabled(2)) {\n\t\t\treturn IsControlJustPressed(0, actionData.inputController);\n\t\t}\n\t\treturn false;\n\t};\n\n\t/**\n\t * Recovery of player data from the database, in case the player is new, initialization of data\n\t */\n\tgetPersonnalInputs = () => {\n\t\tconst concatInputs = { ...TcsKeyboardInputs, ...TcsControllerInputs };\n\t\tfor (let key in concatInputs) {\n\t\t\tconst currInput: TcsInput = {\n\t\t\t\tinputName: key,\n\t\t\t\t//@ts-ignore\n\t\t\t\tinputKey: concatInputs[key],\n\t\t\t};\n\t\t\tthis.personalInputs.push(currInput);\n\t\t}\n\t};\n\n\t/**\n\t * Change a key\n\t * @param inputName key by default\n\t * @param inputKey New input\n\t * @returns boolean\n\t */\n\tsetInput = (inputName: string, inputKey: string | number) => {\n\t\tconst inputAlreadyUsed = this.personalInputs.some(\n\t\t\t(input) => input.inputKey == inputKey,\n\t\t);\n\t\tif (!inputAlreadyUsed) {\n\t\t\tconst currInput = this.personalInputs.find(\n\t\t\t\t(input) => input.inputName == inputName,\n\t\t\t);\n\t\t\tif (!currInput) return false;\n\t\t\tcurrInput.inputKey = inputKey;\n\t\t} else {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.RED}[TcsInputManager] inputKey: ${inputKey} for inputName: ${inputName} already used !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * reset all keys to default\n\t * @param inputName\n\t * @returns\n\t *\n\t * TO CHANGE\n\t */\n\tresetInputsDefault = () => {\n\t\tthis.personalInputs = [];\n\t\tconst concatInputs = { ...TcsKeyboardInputs, ...TcsControllerInputs };\n\t\tfor (let key in concatInputs) {\n\t\t\tconst currInput: TcsInput = {\n\t\t\t\tinputName: key,\n\t\t\t\t//@ts-ignore\n\t\t\t\tinputKey: concatInputs[key],\n\t\t\t};\n\t\t\tthis.personalInputs.push(currInput);\n\t\t}\n\t};\n\n\t/**\n\t * Recovery of the player's personalized input\n\t * @param inputName name of the key\n\t * @returns false or the key\n\t */\n\tgetInput = (inputName: string) => {\n\t\tconst currInput = this.personalInputs.find(\n\t\t\t(input) => input.inputName == inputName,\n\t\t);\n\t\tif (!currInput) return false;\n\n\t\treturn currInput.inputKey;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsLanguageManager.html":{"url":"classes/TcsLanguageManager.html","title":"class - TcsLanguageManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsLanguageManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/language/mixed_languageManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                get\n                            \n                            \n                                getAndReplace\n                            \n                            \n                                loadModuleLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the language manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig(langToAppend: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:98\n                \n            \n\n\n            \n                \n                    Add translations to the current dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    langToAppend\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of keys and their translation in the current configured language\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:28\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Translation in the specified language in the configuration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAndReplace\n                        \n                        \n                    \n                \n            \n            \n                \ngetAndReplace(key: string, replace: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:44\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key and fill it with values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                                \n                                    replace\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Map of key and their values to find and replace in the translation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Translation in the specified language in the configuration, filled with specified values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadModuleLang\n                        \n                        \n                    \n                \n            \n            \n                \nloadModuleLang(module: TcsModule, language: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:67\n                \n            \n\n\n            \n                \n                    Get the translations of the specified module and add it to the dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Module informations to load the lang config from\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en-EN'\n                                    \n\n                                    \n                                        Name of the current language to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsLanguageManager {\n\tprivate lang: object;\n\n\t/**\n\t * Initialize the language manager\n\t */\n\tconstructor() {\n\t\tthis.lang =\n\t\t\tJSON.parse(\n\t\t\t\tLoadResourceFile(\n\t\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t\t`src/assets/lang/${TCS_CONFIG.lang}.json`,\n\t\t\t\t),\n\t\t\t) || {};\n\t}\n\n\t/**\n\t * Get the translation of the specified key\n\t * @param key Translation to find\n\t * @returns Translation in the specified language in the configuration\n\t */\n\tget(key: string): String {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\treturn this.lang[key] || '';\n\t}\n\n\t/**\n\t * Get the translation of the specified key and fill it with values\n\t * @param key Translation to find\n\t * @param replace Map of key and their values to find and replace in the translation\n\t * @returns Translation in the specified language in the configuration, filled with specified values\n\t */\n\tgetAndReplace(key: string, replace: Object): string {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\tlet result = this.lang[key] || '';\n\n\t\tfor (let objKey in replace) {\n\t\t\t//@ts-ignore\n\t\t\tconst replaceTo = replace[objKey];\n\t\t\tresult = result.replace(`{${objKey}}`, replaceTo);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get the translations of the specified module and add it to the dictionnary\n\t * @param module Module informations to load the lang config from\n\t * @param language Name of the current language to load\n\t */\n\tloadModuleLang(module: TcsModule, language: String = 'en-EN') {\n\t\tconst id = module.getId();\n\n\t\tconst dict = JSON.parse(\n\t\t\tLoadResourceFile(\n\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t`src/assets/lang/${id}/${language}.json`,\n\t\t\t),\n\t\t);\n\n\t\tif (!dict) {\n\t\t\tif (language !== 'en-EN') {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}. Trying to load language 'en-EN'...`,\n\t\t\t\t);\n\t\t\t\tthis.loadModuleLang(module);\n\t\t\t} else {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addConfig(dict);\n\t}\n\n\t/**\n\t * Add translations to the current dictionnary\n\t * @param langToAppend List of keys and their translation in the current configured language\n\t */\n\taddConfig(langToAppend: Object) {\n\t\tthis.lang = { ...this.lang, ...langToAppend };\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModule.html":{"url":"classes/TcsModule.html","title":"class - TcsModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_module.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyMethod\n                            \n                            \n                                    Private\n                                launchMethod\n                            \n                            \n                                    Private\n                                moduleInfos\n                            \n                            \n                                moduleLaunched\n                            \n                            \n                                shouldLaunch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkVersion\n                            \n                            \n                                destroyModule\n                            \n                            \n                                getDependencies\n                            \n                            \n                                getId\n                            \n                            \n                                initModule\n                            \n                            \n                                    Private\n                                isVersionSuperior\n                            \n                            \n                                printDebug\n                            \n                            \n                                setDestroyModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n                \n                    \n                            Create a new Tcs module instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleInfos\n                                                  \n                                                        \n                                                                        TcsModuleInfos | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        launchMethod\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Method to launch when the module is ready\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            launchMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleLaunched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldLaunch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:115\n                \n            \n\n\n            \n                \n                    Check with github the last version of the module to know if the current module is up to date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyModule\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:71\n                \n            \n\n\n            \n                \n                    Stop the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ngetDependencies()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:56\n                \n            \n\n\n            \n                \n                    Get the list of the current module dependencies\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        list of current module dependencies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:48\n                \n            \n\n\n            \n                \n                    Get the id of the current module\n\n\n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        id of the current module\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initModule\n                        \n                        \n                    \n                \n            \n            \n                \ninitModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:95\n                \n            \n\n\n            \n                \n                    Starts the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVersionSuperior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVersionSuperior(current: String, compare: String, currentStep: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:160\n                \n            \n\n\n            \n                \n                    Check if the current version is superior at the compared one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    current\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Latest version number of the module\n\n                                    \n                                \n                                \n                                    compare\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Version to compare to\n\n                                    \n                                \n                                \n                                    currentStep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Step on the string version of the module (splitted by dot)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns true if the current version is superior to the compared version. Returns false if not.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printDebug\n                        \n                        \n                    \n                \n            \n            \n                \nprintDebug(message: String, messageColor: ConsoleColors)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:181\n                \n            \n\n\n            \n                \n                    Print a debug message to the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to print in the console, a prefix is concatened to it (category/name)\n\n                                    \n                                \n                                \n                                    messageColor\n                                    \n                                                ConsoleColors\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ConsoleColors.YELLOW\n                                    \n\n                                    \n                                        Color of the current message in the console, yellow by default\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDestroyModule\n                        \n                        \n                    \n                \n            \n            \n                \nsetDestroyModule(destroyMethod: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:64\n                \n            \n\n\n            \n                \n                    Set the method that will be called when the module has to be stopped\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    destroyMethod\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method that will be called when the module is stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModule {\n\t//@ts-ignore\n\tprivate moduleInfos: TcsModuleInfos;\n\tprivate launchMethod: Function;\n\tprivate destroyMethod: Function;\n\n\tmoduleLaunched: Boolean;\n\tshouldLaunch: Boolean;\n\n\t/**\n\t * Create a new Tcs module instance\n\t * @param moduleType Type of the current module\n\t * @param moduleName Name of the current module, as if it was a ressource\n\t * @param launchMethod Method to launch when the module is ready\n\t * @param moduleDependencies List of modules ids this module depends on\n\t */\n\tconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function) {\n\t\tthis.shouldLaunch = true;\n\n\t\tif (moduleInfos != null) {\n\t\t\tthis.moduleInfos = moduleInfos;\n\n\t\t\tif (\n\t\t\t\tTCS_CONFIG.versionningCheck &&\n\t\t\t\tTCS.isServerSided &&\n\t\t\t\tthis.moduleInfos.git\n\t\t\t) {\n\t\t\t\tthis.checkVersion();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t\tthis.launchMethod = launchMethod;\n\t\tthis.destroyMethod = () => {};\n\t\tthis.moduleLaunched = false;\n\t}\n\n\t/**\n\t * Get the id of the current module\n\t * @returns id of the current module\n\t */\n\tgetId(): String {\n\t\treturn `${this.moduleInfos.moduleType}/${this.moduleInfos.moduleName}`;\n\t}\n\n\t/**\n\t * Get the list of the current module dependencies\n\t * @returns list of current module dependencies\n\t */\n\tgetDependencies(): Array {\n\t\treturn this.moduleInfos.dependencies || [];\n\t}\n\n\t/**\n\t * Set the method that will be called when the module has to be stopped\n\t * @param destroyMethod Method that will be called when the module is stopped\n\t */\n\tsetDestroyModule(destroyMethod: Function) {\n\t\tthis.destroyMethod = destroyMethod;\n\t}\n\n\t/**\n\t * Stop the module\n\t */\n\tdestroyModule() {\n\t\tthis.printDebug('Shutting down module !', ConsoleColors.RED);\n\t\ttry {\n\t\t\tTCS.threads.removeThreadByModule(this);\n\t\t\tthis.moduleLaunched = false;\n\t\t\tthis.shouldLaunch = false;\n\t\t\tthis.destroyMethod();\n\t\t\tthis.printDebug(\n\t\t\t\t'Module has been stopped correctly !',\n\t\t\t\tConsoleColors.GREEN,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while shutting down the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Starts the module\n\t */\n\tinitModule() {\n\t\tthis.printDebug('Starting module !');\n\t\ttry {\n\t\t\tthis.launchMethod(this);\n\t\t\tTCS.lang.loadModuleLang(this, TCS_CONFIG.lang);\n\t\t\tthis.moduleLaunched = true;\n\t\t\tthis.printDebug('Module has been started !', ConsoleColors.GREEN);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while starting the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Check with github the last version of the module to know if the current module is up to date.\n\t */\n\tprivate checkVersion() {\n\t\tconst https = require('https');\n\t\tconst options = {\n\t\t\thostname: 'raw.githubusercontent.com',\n\t\t\tport: 443,\n\t\t\tpath: `/${this.moduleInfos.git}/main/.tcs.json`,\n\t\t\tmethod: 'GET',\n\t\t};\n\n\t\tconst req = https.request(options, (res: any) => {\n\t\t\tres.on('data', (d: any) => {\n\t\t\t\tconst buf = Buffer.from(d);\n\t\t\t\tconst json = JSON.parse(buf.toString('utf-8'));\n\n\t\t\t\tif (!json.version) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isVersionSuperior(json.version, this.moduleInfos.version)) {\n\t\t\t\t\tTCS.warning(\n\t\t\t\t\t\t`Module ${this.getId()} has a new version (current: ${\n\t\t\t\t\t\t\tthis.moduleInfos.version\n\t\t\t\t\t\t} | new version : ${json.version}) ! \\n${\n\t\t\t\t\t\t\tConsoleColors.YELLOW\n\t\t\t\t\t\t}You can download it at : ${this.moduleInfos.git}${\n\t\t\t\t\t\t\tConsoleColors.RESET\n\t\t\t\t\t\t}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treq.on('error', (error: any) => {\n\t\t\tconsole.error(error);\n\t\t});\n\n\t\treq.end();\n\t}\n\n\t/**\n\t * Check if the current version is superior at the compared one\n\t * @param current Latest version number of the module\n\t * @param compare Version to compare to\n\t * @param currentStep Step on the string version of the module (splitted by dot)\n\t * @returns Returns true if the current version is superior to the compared version. Returns false if not.\n\t */\n\tprivate isVersionSuperior(\n\t\tcurrent: String,\n\t\tcompare: String,\n\t\tcurrentStep: number = 0,\n\t): boolean {\n\t\tconst currentNumber = parseInt(current.split('.')[currentStep]);\n\t\tconst compareNumber = parseInt(compare.split('.')[currentStep]);\n\n\t\tif (currentNumber == compareNumber) {\n\t\t\tif (currentStep == 2) return false;\n\t\t\treturn this.isVersionSuperior(current, compare, currentStep + 1);\n\t\t} else {\n\t\t\treturn currentNumber > compareNumber;\n\t\t}\n\t}\n\n\t/**\n\t * Print a debug message to the console\n\t * @param message Message to print in the console, a prefix is concatened to it (category/name)\n\t * @param messageColor Color of the current message in the console, yellow by default\n\t */\n\tprintDebug(\n\t\tmessage: String,\n\t\tmessageColor: ConsoleColors = ConsoleColors.YELLOW,\n\t) {\n\t\tif (TCS_CONFIG.debugMode)\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE} [${this.getId()}] ${messageColor}`,\n\t\t\t\tmessage,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsModuleInfos.html":{"url":"interfaces/TcsModuleInfos.html","title":"interface - TcsModuleInfos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsModuleInfos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/modules/mixed_moduleInfos.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dependencies\n                                \n                                \n                                            Optional\n                                        git\n                                \n                                \n                                        moduleName\n                                \n                                \n                                        moduleType\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dependencies\n                                    \n                                \n                                \n                                    \n                                        dependencies:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git\n                                    \n                                \n                                \n                                    \n                                        git:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleName\n                                    \n                                \n                                \n                                    \n                                        moduleName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleType\n                                    \n                                \n                                \n                                    \n                                        moduleType:         TcsModuleTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsModuleTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsModuleInfos {\n\tmoduleType: TcsModuleTypes;\n\tmoduleName: String;\n\tversion: String;\n\n\tgit?: String;\n\tdependencies?: String[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModuleManager.html":{"url":"classes/TcsModuleManager.html","title":"class - TcsModuleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModuleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_modulesManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findModuleById\n                            \n                            \n                                    Private\n                                gameModules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addModuleToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the module manager.\nShould only be called by the core !\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findModuleById\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:66\n                            \n                        \n\n                \n                    \n                        Get a loaded module by it's id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        id\n                                                        \n                                                                Id of the module to find\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToGame\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToGame(newModule: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:50\n                \n            \n\n\n            \n                \n                    Add a module to the current game and loads it when it is ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newModule\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module to add and load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModuleManager {\n\tprivate gameModules: Array;\n\n\t/**\n\t * Initialize the module manager.\n\t * Should only be called by the core !\n\t */\n\tconstructor() {\n\t\tthis.gameModules = [];\n\t\tsetTick(() =>\n\t\t\tthis.gameModules\n\t\t\t\t.filter((module) => !module.moduleLaunched)\n\t\t\t\t.forEach((module) => {\n\t\t\t\t\tconst remainingDependenciesToStart = module\n\t\t\t\t\t\t.getDependencies()\n\t\t\t\t\t\t.filter((mod) => {\n\t\t\t\t\t\t\tconst foundModule = this.findModuleById(mod);\n\n\t\t\t\t\t\t\tif (!foundModule) {\n\t\t\t\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t\t\t\t`Can't start module ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + module.getId() + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} because dependency ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + mod + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} isn't installed.`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn !foundModule.moduleLaunched;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (remainingDependenciesToStart.length == 0 && module.shouldLaunch)\n\t\t\t\t\t\tmodule.initModule();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Add a module to the current game and loads it when it is ready\n\t * @param newModule Module to add and load\n\t */\n\taddModuleToGame(newModule: TcsModule) {\n\t\tif (!this.findModuleById(newModule.getId()))\n\t\t\tthis.gameModules.push(newModule);\n\t\telse\n\t\t\tTCS.error(\n\t\t\t\t`Can't add module ${ConsoleColors.YELLOW}${newModule.getId()}${\n\t\t\t\t\tConsoleColors.RED\n\t\t\t\t} because a module with the same id already exists !`,\n\t\t\t);\n\t}\n\n\t/**\n\t * Get a loaded module by it's id\n\t * @param id Id of the module to find\n\t * @returns The module if found, undefined if it doesn't exist\n\t */\n\tfindModuleById = (id: String): TcsModule | undefined =>\n\t\tthis.gameModules.find((mod) => mod.getId() === id);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThread.html":{"url":"classes/TcsThread.html","title":"class - TcsThread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threads.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugExec\n                            \n                            \n                                delay\n                            \n                            \n                                    Private\n                                execs\n                            \n                            \n                                isThreadFull\n                            \n                            \n                                    Private\n                                threadId\n                            \n                            \n                                    Private\n                                tick\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendThread\n                            \n                            \n                                containsThreadById\n                            \n                            \n                                getThreadTimer\n                            \n                            \n                                removeModuleThreads\n                            \n                            \n                                removeThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timer: number)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n                \n                    \n                            Create a new thread with the specified delay\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timer\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Delay between each executions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debugExec\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:57\n                            \n                        \n\n                \n                    \n                        Execute a thread function in debug mode\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        thread\n                                                        \n                                                                Thread to execute\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:74\n                            \n                        \n\n                \n                    \n                        Wait the specified time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        time\n                                                        \n                                                                Time of the delay\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isThreadFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendThread\n                        \n                        \n                    \n                \n            \n            \n                \nappendThread(module: TcsModule, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:83\n                \n            \n\n\n            \n                \n                    Append a function to execute after the delay in the current thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module the thread comes from\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsThreadById\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsThreadById(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:132\n                \n            \n\n\n            \n                \n                    Get if a thread is actually contained in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the thread is contained, false else\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThreadTimer\n                        \n                        \n                    \n                \n            \n            \n                \ngetThreadTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:49\n                \n            \n\n\n            \n                \n                    Get current thread delay between each executions\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Thread delay\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeModuleThreads\n                        \n                        \n                    \n                \n            \n            \n                \nremoveModuleThreads(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:115\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads have to be stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:100\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThread {\n\tprivate threadId: number;\n\tprivate execs: Array;\n\tprivate timer: number;\n\tprivate tick: number;\n\n\tisThreadFull: boolean;\n\n\t/**\n\t * Create a new thread with the specified delay\n\t * @param timer Delay between each executions\n\t */\n\tconstructor(timer: number) {\n\t\tthis.execs = [];\n\t\tthis.timer = timer;\n\t\tthis.isThreadFull = false;\n\t\tthis.threadId = +new Date();\n\n\t\tthis.tick = setTick(async () => {\n\t\t\tawait this.delay(this.timer);\n\n\t\t\tconst benchmark = new TcsBenchmark();\n\t\t\tthis.execs.forEach((thread) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (TCS_CONFIG.debugMode) this.debugExec(thread);\n\t\t\t\t\telse thread.exec();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t`Error encountered in thread ${ConsoleColors.YELLOW}${thread.id}${ConsoleColors.RED}: \\n${e}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst time = benchmark.stop();\n\n\t\t\tif (time > TCS_CONFIG.maxExecTimePerThread) this.isThreadFull = true;\n\t\t});\n\t}\n\n\t/**\n\t * Get current thread delay between each executions\n\t * @returns Thread delay\n\t */\n\tgetThreadTimer(): number {\n\t\treturn this.timer;\n\t}\n\n\t/**\n\t * Execute a thread function in debug mode\n\t * @param thread Thread to execute\n\t */\n\tdebugExec = (thread: TcsThreadExec) => {\n\t\tconst benchmark = new TcsBenchmark();\n\t\tthread.exec();\n\t\tconst time = benchmark.stop();\n\n\t\tif (time >= 1) {\n\t\t\tTCS.warning(\n\t\t\t\t`Thread ${thread.id.split('-')[1]} took ${time} ms to execute !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Wait the specified time\n\t * @param time Time of the delay\n\t * @returns Promise that is resolved after the delay\n\t */\n\tdelay = (time: number): Promise =>\n\t\tnew Promise((resolve, _) => setTimeout(resolve, time));\n\n\t/**\n\t * Append a function to execute after the delay in the current thread\n\t * @param module Module the thread comes from\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tappendThread(module: TcsModule, exec: Function): String {\n\t\tconst threadId = `${this.threadId}-${module.getId()}-${this.execs.length}`;\n\t\tconst thread: TcsThreadExec = {\n\t\t\tid: threadId,\n\t\t\texec: exec,\n\t\t};\n\n\t\tthis.execs.push(thread);\n\n\t\treturn threadId;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param id Id of the thread to remove\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveThread(id: String): boolean {\n\t\tthis.execs = this.execs.filter((thread) => thread.id !== id);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param module Module from which the threads have to be stopped\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveModuleThreads(module: TcsModule): boolean {\n\t\tthis.execs = this.execs.filter(\n\t\t\t(thread) => thread.id.split('-')[1] !== module.getId(),\n\t\t);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get if a thread is actually contained in\n\t * @param id Id to search for\n\t * @returns True if the thread is contained, false else\n\t */\n\tcontainsThreadById(id: String): boolean {\n\t\treturn this.execs.find((thread) => thread.id === id) != null;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsThreadExec.html":{"url":"interfaces/TcsThreadExec.html","title":"interface - TcsThreadExec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsThreadExec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/threads/mixed_threadInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exec\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsThreadExec {\n\tid: String;\n\texec: Function;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThreadsManager.html":{"url":"classes/TcsThreadsManager.html","title":"class - TcsThreadsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThreadsManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threadsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                threadsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createThread\n                            \n                            \n                                removeThread\n                            \n                            \n                                removeThreadByModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the threads manager\nShould only be called by the core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThread[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createThread\n                        \n                        \n                    \n                \n            \n            \n                \ncreateThread(module: TcsModule, timer: number, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:25\n                \n            \n\n\n            \n                \n                    Create a new thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module that creates the thread\n\n                                    \n                                \n                                \n                                    timer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Delay between each executions\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:46\n                \n            \n\n\n            \n                \n                    Stop and deletes a thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThreadByModule\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThreadByModule(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:64\n                \n            \n\n\n            \n                \n                    Stop all the threads that come from the specified module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads to stop come from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThreadsManager {\n\tprivate threadsList: TcsThread[];\n\n\t/**\n\t * Initialize the threads manager\n\t * Should only be called by the core\n\t */\n\tconstructor() {\n\t\tthis.threadsList = [];\n\t}\n\n\t/**\n\t * Create a new thread\n\t * @param module Module that creates the thread\n\t * @param timer Delay between each executions\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tcreateThread(module: TcsModule, timer: number, exec: Function): String {\n\t\tlet found = false;\n\t\tconst currentThread =\n\t\t\tthis.threadsList.find((thread) => {\n\t\t\t\tif (thread.getThreadTimer() == timer && !thread.isThreadFull) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}) || new TcsThread(timer);\n\t\tif (!found) {\n\t\t\tthis.threadsList.push(currentThread);\n\t\t}\n\n\t\treturn currentThread.appendThread(module, exec);\n\t}\n\n\t/**\n\t * Stop and deletes a thread\n\t * @param id Id of the thread to delete\n\t */\n\tremoveThread(id: String) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tif (thread.containsThreadById(id)) {\n\t\t\t\tconst shouldDeleteThread = thread.removeThread(id);\n\n\t\t\t\tif (shouldDeleteThread) {\n\t\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stop all the threads that come from the specified module\n\t * @param module Module from which the threads to stop come from\n\t */\n\tremoveThreadByModule(module: TcsModule) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tconst shouldDeleteThread = thread.removeModuleThreads(module);\n\n\t\t\tif (shouldDeleteThread) {\n\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\treturn this.removeThreadByModule(module);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContribution\nHere are the contribution guidelines. Please, read it before contributing.\nDocumentation\n\nPull requests for docs update, if needed\nCode-level documentation expectations\n100% documentation coverage for pull requests\nUpdate readme if needed\nUpdate doc if needed\n\n\n\nEnvironment setup\nTCS is using Prettier to format the code. You must use our format style in your push requests.\nCompiling\nYou must compile your TS file with these actions before sending a pull request. The build will appear in the build folder.\nnpm run precompileRender the documentation\nTCS uses compodoc to render the documentation automatically. If you need to update the documentation due to code changes, please follow these steps :\nnpm install -g @compodoc/compodoc\n\nnpm run docDependencies\nThe current project depends on :\n\n@citizenfx/client\n@citizenfx/server\nprettier\ntslint\ntypescript\nfs-extra\nmerge-files\n\nExecute the following command to install them :\nnpm i\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/assets/mixed_config.ts\n            \n            variable\n            TCS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/librairies/benchmark/mixed_benchmark.ts\n            \n            class\n            TcsBenchmark\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/core/librairies/callbacks/mixed_callbackManager.ts\n            \n            class\n            TcsCallbackManager\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventListenerClass.ts\n            \n            class\n            TcsEventListener\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventManager.ts\n            \n            class\n            TcsEventManager\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            ActionInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            TcsInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputsManager.ts\n            \n            class\n            TcsInputManager\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/core/librairies/language/mixed_languageManager.ts\n            \n            class\n            TcsLanguageManager\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_module.ts\n            \n            class\n            TcsModule\n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_modulesManager.ts\n            \n            class\n            TcsModuleManager\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threads.ts\n            \n            class\n            TcsThread\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threadsManager.ts\n            \n            class\n            TcsThreadsManager\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/core/mixed_tcs.ts\n            \n            class\n            TcsCore\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfosFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoadedFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            TCS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            deathThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            GetPlayerByEntityID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_vehicle.ts\n            \n            function\n            vehicleThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            isWeaponInArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            weaponThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/mixed_moduleInfos.ts\n            \n            variable\n            eventsModulesInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsClientEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/modules/mixed_moduleInfos.ts\n            \n            interface\n            TcsModuleInfos\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/threads/mixed_threadInterface.ts\n            \n            interface\n            TcsThreadExec\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deathThreadChecker   (src/.../cli_death.ts)\n                        \n                        \n                            GetPlayerByEntityID   (src/.../cli_death.ts)\n                        \n                        \n                            isWeaponInArray   (src/.../cli_weapon.ts)\n                        \n                        \n                            vehicleThreadChecker   (src/.../cli_vehicle.ts)\n                        \n                        \n                            weaponThreadChecker   (src/.../cli_weapon.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/core/events/client/cli_death.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            deathThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \ndeathThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetPlayerByEntityID\n                        \n                        \n                    \n                \n            \n            \n                \nGetPlayerByEntityID(id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_weapon.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isWeaponInArray\n                        \n                        \n                    \n                \n            \n            \n                \nisWeaponInArray(weaponArray, weaponHash)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weaponArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weaponHash\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            weaponThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nweaponThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_vehicle.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            vehicleThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nvehicleThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTCS Core\n\n    \nPresentation\nTCS is an open source FiveM framework developped with TypeScript language.\nYou can download the last version, ready to start on FiveM resources at the releases page.\nFind out how to contribute by reading the contributing guide.\nDon't forget to read the Code of Conduct.\n\nFor any question about the core, you can directly ask it into the \"discution\" section of this repository\n\nGit sources\nTo download the latest sources of TCS, execute this command :\ngit clone https://github.com/FiveMTCS/Core.git\nIssues\nIt is possible that you experience some issues while using TCS, especially with the first versions of it. Please, first verify that you are using the latest version and then report the issue by clicking here.\nGet started\nIt is very simple to use TCS :\n\nDownload the latest release here\nDrag and drop the folder to your FiveM server resources folder\nAdd the next command to your server.cfg\n\nensure tcsDeveloper tools\nTo develop a new TCS module, follow these steps :\n\nCreate a folder that will contain the sources of your module\n\nExecute these commands :\nnpm init\nnpm i -D @citizenfx/client\nnpm i -D @citizenfx/server\nnpm i -D @fivemtcs/types\n\nExport the sources and place them into the modules/ folder inside the TCS Core resource.\n\nYou can find more informations by looking at the Demo project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 FiveMTCS\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            eventsModulesInfos   (src/.../mixed_moduleInfos.ts)\n                        \n                        \n                            loadTcsModuleInfos   (src/.../mixed_main.ts)\n                        \n                        \n                            loadTcsModuleInfosFunction   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoaded   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoadedFunctions   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS_CONFIG   (src/.../mixed_config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/core/events/mixed_moduleInfos.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventsModulesInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    src/mixed_main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tloadTcsModuleInfosFunction.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfosFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tonTcsLoadedFunctions.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoadedFunctions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TCS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCore\n\n                        \n                    \n\n\n            \n        \n\n    src/assets/mixed_config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TCS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tlang: 'fr-FR', // Current lang the scripts should be on\n\n\tdebugMode: true, // If set to true, debug informations are going to be printed in the console\n\n\tmaxExecTimePerThread: 10, // Maximum amount of time (in ms) a thread should take to execute in a tick\n\n\tshowErrorsAnyCase: true, // Should print errors in console even if debug mode isn't activated ?\n\n\tshowWarningsAnyCase: true, // Should print warnings in console even if debug mode isn't activated ?\n\n\tversionningCheck: true, // Check if modules are at their latest version\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
