var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/ActionInput.html",[0,0.717,1,2.122]],["body/interfaces/ActionInput.html",[0,1.221,1,3.614,2,1.916,3,0.465,4,0.409,5,0.354,6,3.383,7,0.302,8,0.628,9,4.505,10,4.505,11,4.505,12,1.212,13,0.455,14,0.03,15,1.864,16,3.014,17,3.877,18,3.877,19,0.021,20,0.025,21,0.021]],["title/classes/MakeRequest.html",[22,0.014,23,1.464]],["body/classes/MakeRequest.html",[3,0.223,4,0.196,5,0.17,7,0.145,8,0.381,12,1.062,13,0.407,14,0.031,15,1.471,19,0.027,20,0.015,21,0.026,22,0.018,23,2.461,24,0.449,25,1.445,26,4.305,27,2.967,28,2.967,29,3.332,30,3.334,31,0.869,32,3.887,33,2.367,34,3.742,35,3.742,36,2.458,37,0.488,38,2.458,39,2.88,40,1.135,41,3.362,42,0.822,43,0.822,44,0.969,45,2.22,46,1.935,47,2.22,48,2.22,49,2.22,50,1.488,51,2.504,52,2.22,53,2.949,54,2.458,55,2.22,56,3.31,57,3.887,58,1.532,59,2.997,60,0.803,61,2.458,62,2.22,63,2.949,64,2.458,65,2.458,66,2.214,67,2.458,68,1.392,69,1.511,70,1.623,71,1.623,72,1.081,73,3.31,74,1.205,75,2.458,76,1.304,77,1.975,78,0.969,79,2.458,80,1.623,81,1.623,82,1.623,83,1.445,84,3.168,85,2.949,86,1.975,87,1.05,88,1.445,89,2.19,90,1.445,91,1.086,92,0.997,93,1.445,94,1.445,95,1.548,96,1.445,97,1.445,98,1.445,99,1.445,100,1.445,101,1.975,102,2.19,103,2.458,104,2.458,105,1.68,106,1.797,107,1.975,108,2.458,109,1.086,110,1.623,111,0.919,112,1.623,113,1.304,114,1.975,115,1.623,116,2.19,117,1.623,118,1.445,119,1.445,120,1.228,121,1.445,122,1.445,123,1.445,124,2.19,125,1.797,126,1.975,127,2.967,128,1.623,129,1.623,130,1.623,131,1.623,132,1.644,133,2.643,134,2.19,135,2.458,136,1.623,137,1.623]],["title/classes/MakeRequestMongo.html",[22,0.014,113,1.914]],["body/classes/MakeRequestMongo.html",[3,0.213,4,0.187,5,0.162,7,0.138,8,0.367,12,1.048,13,0.413,14,0.031,15,1.44,19,0.026,20,0.015,21,0.025,22,0.017,23,2.726,24,0.428,25,1.377,26,4.258,27,2.88,28,2.88,29,3.307,30,3.101,31,0.838,32,3.822,33,2.441,34,4.043,35,3.672,36,2.369,37,0.465,38,1.546,39,2.848,40,1.179,42,0.797,43,0.797,44,0.941,46,1.906,50,1.493,51,2.638,53,2.876,54,2.369,56,3.228,57,3.822,58,1.509,59,2.956,60,0.774,61,2.369,63,2.876,64,2.369,65,2.369,66,2.16,67,2.369,68,1.342,69,1.456,70,1.546,71,1.546,72,1.054,73,3.228,74,1.187,75,2.369,76,1.242,77,2.315,78,1.137,79,2.369,80,1.546,81,1.546,82,1.546,83,1.377,84,3.101,85,2.876,86,1.904,87,1.019,88,1.377,89,2.11,90,1.377,91,1.034,92,0.95,93,1.377,94,1.377,95,1.519,96,1.377,97,1.377,98,1.377,99,1.377,100,1.377,101,1.904,102,2.11,103,2.369,104,2.369,105,1.631,106,1.732,107,1.904,108,2.369,109,1.034,110,1.546,111,0.875,112,1.546,113,1.904,114,2.797,115,2.369,116,2.876,117,1.546,118,1.377,119,1.377,120,1.191,121,1.377,122,1.377,123,1.377,124,2.11,125,1.732,126,1.904,127,2.88,128,1.546,129,1.546,130,1.546,131,1.546,132,1.585,133,2.566,134,2.11,135,2.369,136,1.546,137,1.546,138,3.24,139,4.52,140,1.772,141,1.772,142,1.772,143,1.772,144,2.115,145,2.115,146,1.772,147,1.772,148,1.772,149,1.772]],["title/classes/MakeRequestSQL.html",[22,0.014,76,1.914]],["body/classes/MakeRequestSQL.html",[3,0.202,4,0.177,5,0.154,7,0.131,8,0.352,12,1.083,13,0.417,14,0.031,15,1.406,19,0.026,20,0.014,21,0.025,22,0.017,23,2.7,24,0.406,25,1.307,26,4.206,27,2.787,28,2.787,29,3.28,30,3.342,31,0.805,32,3.751,33,2.413,34,3.981,35,3.596,36,2.275,37,0.442,38,1.467,39,2.962,40,1.18,42,0.869,43,0.869,44,1.025,46,1.874,50,1.488,51,2.405,53,2.797,54,2.275,56,3.14,57,3.751,58,1.484,59,2.91,60,0.91,61,2.275,63,2.797,64,2.275,65,2.275,66,2.273,67,2.275,68,1.288,69,1.398,70,1.467,71,1.467,72,1.025,73,3.14,74,1.167,75,2.275,76,1.828,77,2.24,78,1.225,79,3.398,80,2.275,81,1.467,82,1.467,83,2.027,84,3.454,85,3.454,86,2.24,87,1.202,88,2.027,89,2.797,90,2.027,91,1.522,92,1.398,93,2.027,94,2.027,95,1.488,96,1.307,97,1.307,98,1.307,99,1.307,100,1.307,101,2.89,102,2.027,103,2.275,104,2.275,105,1.578,106,1.663,107,1.828,108,2.275,109,0.981,110,1.467,111,0.831,112,1.467,113,1.179,114,1.828,115,1.467,116,2.027,117,1.467,118,1.307,119,1.307,120,1.153,121,1.307,122,1.307,123,1.307,124,2.027,125,1.663,126,1.828,127,2.787,128,1.467,129,1.467,130,1.467,131,1.467,132,1.522,133,2.483,134,2.027,135,2.275,136,1.467,137,1.467,139,4.443,140,1.681,141,1.681,142,1.681,143,1.681,146,1.681,147,1.681,148,1.681,149,1.681,150,2.608,151,3.112,152,2.007,153,2.007,154,2.007,155,0.656]],["title/classes/MongoDatabase.html",[22,0.014,156,2.122]],["body/classes/MongoDatabase.html",[3,0.232,4,0.204,5,0.177,7,0.15,8,0.392,12,1.135,13,0.412,14,0.031,19,0.011,20,0.016,21,0.011,22,0.01,23,1.555,24,0.467,29,3.085,31,0.895,37,0.507,39,2.989,40,1.121,42,1.051,43,1.227,44,1.24,46,1.223,50,1.353,51,2.904,58,1.55,59,3.35,60,1.102,72,1.353,74,1.143,78,1.24,95,1.046,101,2.44,105,0.955,106,2.22,114,2.906,116,4.178,118,1.501,119,1.501,120,1.746,121,1.501,122,1.501,123,1.501,124,2.705,125,2.22,126,2.44,132,2.257,133,3.508,134,2.705,156,2.253,157,1.932,158,2.899,159,1.555,160,2.44,161,3.382,162,2.529,163,4.05,164,3.759,165,2.899,166,1.358,167,3.46,168,2.899,169,2.306,170,3.46,171,2.306,172,2.15,173,3.797,174,3.608,175,2.529,176,3.036,177,2.22,178,2.306,179,1.501,180,3.46,181,4.748,182,2.306,183,1.432,184,2.899,185,1.849,186,2.899,187,2.899,188,3.46,189,3.867,190,2.306,191,3.797,192,2.306,193,3.615,194,2.306,195,2.253,196,2.306,197,2.306,198,2.306,199,1.932,200,1.932,201,1.932,202,1.932,203,1.932,204,1.932,205,2.306,206,2.306,207,1.128,208,2.306,209,2.306,210,2.306,211,2.306,212,3.46,213,2.306,214,1.355,215,4.153,216,2.306,217,2.306]],["title/classes/MysqlDatabase.html",[22,0.014,218,2.122]],["body/classes/MysqlDatabase.html",[3,0.167,4,0.147,5,0.127,7,0.108,8,0.303,12,1.164,13,0.42,14,0.031,19,0.023,20,0.012,21,0.008,22,0.007,23,1.204,24,0.336,29,3.057,31,0.693,33,1.6,37,0.365,39,3.007,40,1.065,42,1.037,43,1.219,44,1.223,46,0.947,50,1.381,51,2.763,58,1.388,59,3.197,60,1.185,66,1.89,72,1.366,74,1.092,78,1.308,83,1.745,84,3.628,85,3.231,86,2.491,87,1.233,88,1.745,89,2.517,90,1.745,91,1.31,92,1.204,93,1.745,94,1.745,95,1.73,96,1.082,97,1.745,98,1.082,99,1.082,100,1.082,101,3.091,106,0.888,107,2.491,111,0.688,114,1.574,120,1.501,125,1.8,126,1.979,150,2.245,155,0.543,158,2.245,159,1.513,160,1.979,161,3.105,162,1.959,163,3.746,164,3.426,165,2.245,166,1.101,168,2.245,172,2.269,173,3.314,174,3.569,175,1.959,176,3.846,177,1.8,179,4.209,181,4.293,183,2.227,184,2.245,185,1.432,186,2.245,187,2.245,189,3.552,191,3.314,193,3.099,195,1.745,200,1.392,201,1.392,202,1.392,203,1.392,204,1.392,207,0.812,214,0.976,218,1.745,219,1.392,220,2.68,221,2.68,222,2.68,223,2.68,224,1.661,225,2.245,226,2.68,227,2.68,228,2.245,229,1.661,230,1.661,231,1.959,232,2.663,233,2.68,234,1.661,235,2.825,236,2.68,237,1.661,238,2.245,239,1.661,240,1.661,241,1.392,242,1.661,243,1.661,244,1.661,245,1.661,246,1.661,247,1.214,248,1.661,249,1.392,250,1.661,251,1.661,252,1.661,253,1.661,254,2.68,255,1.661,256,1.661,257,1.661,258,1.661,259,2.245,260,1.204,261,1.661,262,1.661,263,1.661,264,2.68,265,1.661,266,1.661,267,1.661,268,2.245,269,1.661,270,1.661,271,1.661,272,0.976,273,1.661,274,1.661,275,2.68,276,1.661,277,3.368,278,1.392,279,1.661,280,1.661,281,1.661,282,1.661,283,1.661,284,1.661]],["title/classes/TcsBenchmark.html",[22,0.014,285,2.122]],["body/classes/TcsBenchmark.html",[3,0.42,4,0.369,5,0.32,7,0.272,8,0.59,13,0.32,14,0.031,15,1.718,19,0.019,20,0.024,21,0.019,22,0.019,24,0.845,31,1.348,37,1.25,40,1.15,50,1.244,58,1.458,74,0.919,78,1.356,91,2.549,95,1.263,285,3.394,286,3.499,287,1.476,288,4.475,289,4.169,290,5.211,291,4.366,292,4.349,293,4.984,294,4.176,295,5.211,296,4.349,297,6.244,298,3.062,299,5.211,300,5.211]],["title/classes/TcsCallbackManager.html",[22,0.014,301,2.122]],["body/classes/TcsCallbackManager.html",[3,0.311,4,0.378,5,0.237,7,0.279,8,0.485,12,0.911,13,0.376,14,0.031,15,1.484,19,0.014,20,0.02,21,0.014,22,0.014,24,0.627,37,1.08,40,1.163,42,0.867,43,1.163,60,1.022,68,1.282,69,1.392,72,1.326,74,1.165,78,1.454,87,1.269,95,1.295,105,1.772,111,1.772,155,1.604,160,3.264,166,2.016,287,1.094,301,2.788,302,2.595,303,4.906,304,4.906,305,5.745,306,4.906,307,4.906,308,4.281,309,2.288,310,3.587,311,2.288,312,3.097,313,3.097,314,3.46,315,6.282,316,6.001,317,3.741,318,4.434,319,6.001,320,3.097,321,3.097,322,6.001,323,4.281,324,4.281,325,3.097,326,3.097,327,3.097,328,3.097,329,3.097,330,3.097,331,3.097,332,4.281,333,3.097,334,3.097,335,3.097,336,3.097,337,3.097,338,3.097,339,4.281,340,3.097]],["title/interfaces/TcsClientEvent.html",[0,0.717,341,2.122]],["body/interfaces/TcsClientEvent.html",[0,1.216,2,1.903,3,0.462,4,0.406,5,0.352,7,0.3,8,0.626,13,0.352,14,0.031,15,1.792,19,0.021,20,0.025,21,0.021,46,1.624,77,3.247,160,3.247,185,2.456,314,3.247,341,3.599,342,3.359,343,3.482,344,5.152,345,3.359,346,4.965,347,4.63,348,3.359,349,3.359,350,3.359,351,3.85]],["title/classes/TcsCore.html",[22,0.014,352,2.122]],["body/classes/TcsCore.html",[3,0.273,4,0.24,5,0.208,7,0.177,8,0.442,12,1.098,13,0.465,14,0.031,19,0.012,20,0.018,21,0.012,22,0.012,24,0.55,31,1.009,37,1.005,40,1.242,42,0.925,43,0.925,44,1.091,50,1.091,60,1.091,68,1.125,69,1.221,72,1.091,87,0.702,111,2.067,120,1.716,132,2.934,155,0.888,159,2.052,172,2.28,287,0.96,301,2.975,309,2.086,310,3.827,314,2.293,352,2.542,353,2.276,354,6.509,355,4.568,356,3.827,357,4.568,358,3.339,359,2.441,360,3.339,361,3.252,362,5.911,363,3.903,364,2.086,365,2.293,366,2.716,367,2.975,368,2.716,369,2.975,370,2.716,371,2.975,372,2.716,373,2.293,374,2.975,375,2.716,376,2.975,377,2.716,378,2.975,379,2.716,380,3.903,381,2.716,382,5.506,383,4.753,384,2.853,385,4.025,386,4.385,387,2.052,388,3.903,389,2.716,390,3.903,391,2.716,392,4.184,393,3.903,394,2.716,395,2.716,396,2.716,397,2.276,398,2.716,399,2.716,400,2.716,401,1.986,402,4.568,403,2.716,404,2.276,405,2.716,406,1.986,407,1.328,408,2.716,409,2.716,410,3.339,411,2.716,412,3.827,413,2.716,414,2.716,415,2.716,416,2.716]],["title/classes/TcsDatabaseManager.html",[22,0.014,367,2.122]],["body/classes/TcsDatabaseManager.html",[3,0.382,4,0.335,5,0.291,7,0.248,8,0.556,13,0.44,14,0.031,19,0.017,20,0.022,21,0.017,22,0.017,24,0.769,31,1.269,37,1.196,40,1.255,42,0.769,43,0.769,44,0.906,50,1.298,74,1.08,78,1.515,120,1.484,156,2.473,159,2.785,166,1.944,207,1.857,218,2.473,367,3.195,373,2.882,387,2.204,407,1.857,417,3.181,418,5.435,419,5.435,420,5.435,421,5.745,422,4.906,423,4.906,424,3.797,425,3.797,426,3.797,427,3.797,428,4.906,429,3.797,430,3.973,431,3.797,432,5.435,433,3.797,434,5.745,435,4.906,436,3.797,437,3.797]],["title/interfaces/TcsEvent.html",[0,0.717,343,1.914]],["body/interfaces/TcsEvent.html",[0,1.196,2,1.851,3,0.449,4,0.395,5,0.342,7,0.292,8,0.615,13,0.448,14,0.031,15,1.352,19,0.02,20,0.025,21,0.02,46,2.069,77,2.626,160,3.193,185,3.256,314,3.193,341,2.911,342,3.268,343,3.44,344,3.745,345,3.268,346,5.23,347,4.553,348,4.453,349,4.281,350,4.453,351,3.745]],["title/classes/TcsEventListener.html",[22,0.014,438,2.122]],["body/classes/TcsEventListener.html",[3,0.341,4,0.299,5,0.26,7,0.221,8,0.516,13,0.469,14,0.031,19,0.015,20,0.021,21,0.015,22,0.015,24,0.686,31,1.178,37,0.746,40,1.16,42,0.922,43,1.112,44,1.087,46,1.817,50,1.227,58,1.651,60,1.087,72,1.227,74,0.746,78,1.409,87,0.877,92,2.469,155,1.108,166,2.03,172,2.275,183,1.885,185,3.155,287,1.198,298,2.675,317,4.2,348,4.315,349,4.315,387,1.524,438,2.965,439,2.841,440,4.587,441,4.554,442,5.496,443,4.554,444,4.554,445,6.13,446,2.965,447,4.605,448,3.815,449,4.554,450,3.815,451,4.554,452,3.391,453,4.554,454,3.391,455,3.815,456,3.815,457,3.391,458,4.554,459,4.554,460,3.391,461,3.391]],["title/classes/TcsEventManager.html",[22,0.014,369,2.122]],["body/classes/TcsEventManager.html",[3,0.324,4,0.284,5,0.246,7,0.287,8,0.498,13,0.337,14,0.031,19,0.015,20,0.02,21,0.015,22,0.014,24,0.652,37,1.102,40,1.14,42,0.89,43,0.89,60,1.049,68,1.333,69,1.446,72,1.049,74,0.708,78,1.388,87,1.137,92,1.975,109,1.574,155,1.437,172,2.227,272,3.16,287,1.137,298,2.583,311,2.35,317,4.209,343,3.16,350,3.213,365,2.583,369,2.863,438,3.26,440,4.349,447,4.507,448,4.507,455,3.683,456,4.507,462,2.697,463,5.006,464,5.006,465,5.006,466,5.006,467,4.396,468,3.683,469,4.396,470,4.396,471,4.396,472,3.683,473,3.219,474,3.219,475,3.219,476,3.219,477,4.396,478,3.219,479,5.813,480,3.219,481,4.194,482,5.006,483,4.396,484,3.219,485,2.697,486,3.219,487,3.219,488,3.219,489,3.219,490,3.219,491,3.219,492,4.396,493,3.219,494,3.219,495,3.219,496,3.219]],["title/interfaces/TcsInput.html",[0,0.717,16,2.122]],["body/interfaces/TcsInput.html",[0,1.226,1,3.035,2,1.93,3,0.469,4,0.412,5,0.357,6,3.407,7,0.304,8,0.631,9,3.407,10,3.407,11,3.407,12,1.213,13,0.427,14,0.03,15,1.868,16,3.629,17,5.176,18,5.176,19,0.021,20,0.025,21,0.021]],["title/classes/TcsInputManager.html",[22,0.014,371,2.122]],["body/classes/TcsInputManager.html",[3,0.258,4,0.227,5,0.197,7,0.168,8,0.425,9,4.67,10,1.879,11,1.879,12,1.003,13,0.339,14,0.031,15,0.778,19,0.012,20,0.017,21,0.012,22,0.011,24,0.52,37,0.974,39,2.38,40,1.157,42,0.985,43,1.229,50,1.29,60,1.415,72,1.365,74,1.071,78,1.392,87,1.258,95,1.339,155,1.591,166,1.692,183,1.553,232,1.51,287,0.908,309,2.004,311,2.004,318,4.527,356,3.142,371,2.442,373,2.203,407,2.165,430,1.879,440,3.236,450,3.142,472,3.142,497,2.154,498,4.427,499,4.427,500,4.427,501,4.427,502,4.427,503,4.427,504,4.427,505,3.75,506,2.442,507,2.571,508,2.571,509,5.136,510,5.403,511,3.75,512,5.175,513,3.75,514,4.867,515,3.75,516,2.571,517,4.078,518,4.867,519,3.75,520,4.867,521,2.742,522,2.742,523,3.75,524,5.403,525,2.571,526,3.75,527,2.571,528,2.571,529,3.75,530,2.571,531,2.571,532,2.571,533,3.75,534,4.427,535,4.427,536,2.571,537,2.571,538,2.571,539,2.571,540,2.571,541,2.571,542,2.571,543,2.154,544,2.571,545,4.867,546,3.75,547,2.571,548,3.75,549,2.571]],["title/classes/TcsLanguageManager.html",[22,0.014,374,2.122]],["body/classes/TcsLanguageManager.html",[3,0.255,4,0.224,5,0.336,7,0.166,8,0.421,12,1.136,13,0.394,14,0.031,19,0.022,20,0.017,21,0.012,22,0.011,24,0.514,31,0.961,37,0.967,40,1.153,42,0.979,43,1.089,44,1.155,46,2.013,50,1.284,58,1.505,60,1.155,66,1.817,68,2.131,69,2.313,72,1.284,74,0.967,78,1.049,86,3.471,87,0.656,95,1.329,155,0.829,172,2.507,174,3.502,232,2.183,235,2.716,260,1.974,272,2.842,278,3.112,287,0.897,309,1.986,311,1.986,358,3.763,374,2.419,387,1.669,397,3.682,550,2.126,551,3.715,552,3.715,553,3.715,554,3.715,555,5.344,556,3.715,557,2.538,558,4.837,559,4.837,560,4.394,561,6.253,562,3.715,563,3.715,564,2.538,565,3.932,566,4.837,567,3.715,568,5.556,569,2.538,570,3.715,571,3.112,572,3.715,573,3.715,574,2.149,575,2.538,576,2.786,577,2.716,578,4.313,579,4.837,580,5.697,581,3.715,582,3.715,583,3.715,584,2.538,585,4.837,586,3.715,587,3.112,588,2.538,589,3.715,590,2.538,591,2.538,592,1.855,593,3.715,594,2.538,595,2.716,596,2.538,597,2.538,598,2.538]],["title/classes/TcsModule.html",[22,0.014,574,1.593]],["body/classes/TcsModule.html",[3,0.176,4,0.155,5,0.134,7,0.114,8,0.316,12,1.048,13,0.409,14,0.031,15,1.316,19,0.008,20,0.013,21,0.008,22,0.008,24,0.354,31,0.722,37,0.385,40,1.158,42,0.806,43,0.881,44,0.951,50,1.382,53,1.819,58,1.709,60,0.951,66,2.129,68,0.724,69,0.786,72,1.276,74,1.021,78,1.382,87,0.722,95,1.473,105,1.157,109,0.856,111,1.649,120,1.204,132,1.706,155,1.302,166,1.748,183,1.157,207,1.947,214,1.641,247,1.279,260,1.789,287,0.618,289,1.819,291,2.341,359,0.935,361,1.819,364,1.493,373,2.726,383,4.48,385,2.911,386,3.392,387,1.956,392,1.466,401,2.042,406,2.042,407,2.55,410,1.279,412,3.336,446,2.593,481,1.466,506,1.819,521,2.042,522,2.911,574,1.366,576,3.138,587,1.466,595,1.279,599,1.466,600,4.64,601,5.058,602,4.64,603,3.488,604,3.488,605,3.982,606,3.982,607,3.336,608,3.982,609,3.982,610,3.488,611,3.488,612,2.794,613,2.794,614,2.557,615,2.794,616,2.794,617,4.87,618,2.794,619,2.042,620,1.75,621,1.75,622,1.75,623,1.75,624,1.75,625,2.794,626,3.808,627,2.794,628,2.794,629,2.042,630,1.75,631,1.75,632,2.593,633,1.75,634,1.75,635,1.75,636,4.87,637,4.64,638,1.75,639,3.982,640,3.982,641,2.042,642,2.794,643,2.794,644,2.794,645,1.75,646,4.352,647,3.488,648,1.75,649,2.794,650,2.794,651,2.794,652,2.922,653,2.794,654,2.794,655,2.794,656,1.75,657,3.647,658,1.466,659,1.466,660,1.75,661,1.75,662,1.75,663,1.466,664,4.352,665,1.75,666,1.75,667,2.794,668,1.75,669,1.75,670,3.488,671,3.488,672,1.75,673,1.75,674,1.75,675,2.794,676,2.922,677,1.75,678,3.488,679,1.75,680,2.794,681,3.336,682,2.794,683,1.75,684,2.794,685,1.75,686,1.75,687,1.75,688,1.75,689,1.028,690,1.75,691,1.75,692,1.75,693,1.75,694,1.75,695,1.75,696,1.75,697,1.75,698,1.75,699,1.75,700,1.75,701,1.75,702,1.75,703,1.466,704,1.75,705,1.75,706,1.75,707,1.75,708,1.466,709,2.794,710,1.75,711,2.794,712,2.794,713,1.75,714,1.466,715,1.75,716,1.75,717,1.75,718,3.488,719,1.75,720,3.488,721,1.75,722,1.75,723,1.75,724,1.75]],["title/interfaces/TcsModuleInfos.html",[0,0.717,614,1.914]],["body/interfaces/TcsModuleInfos.html",[0,0.99,2,1.863,3,0.452,4,0.398,5,0.345,7,0.294,8,0.618,12,1.231,13,0.479,14,0.03,19,0.021,20,0.025,21,0.021,44,1.458,614,3.206,626,3.976,632,3.976,658,5.116,659,5.116,725,3.771,726,5.116,727,5.873]],["title/classes/TcsModuleManager.html",[22,0.014,376,2.122]],["body/classes/TcsModuleManager.html",[3,0.327,4,0.288,5,0.249,7,0.212,8,0.502,12,0.605,13,0.339,14,0.031,19,0.015,20,0.02,21,0.015,22,0.014,24,0.659,31,1.146,37,1.108,40,1.094,42,0.897,43,0.897,44,0.777,50,1.058,58,1.239,60,1.058,72,1.058,74,0.975,78,1.202,87,0.842,95,1.34,105,1.348,155,1.064,195,2.121,225,3.712,232,1.913,235,2.38,259,2.728,260,2.767,272,3.322,287,1.151,288,2.38,309,2.368,311,2.368,365,2.603,376,2.885,387,1.463,404,3.712,407,1.592,446,2.885,485,2.728,506,2.885,543,2.728,565,3.239,574,2.643,576,3.152,578,3.712,592,2.38,607,2.728,619,3.239,652,3.712,676,4.219,728,2.728,729,5.036,730,5.036,731,4.431,732,4.431,733,3.256,734,4.431,735,4.431,736,3.256,737,4.431,738,4.431,739,4.431,740,4.431,741,3.256,742,3.256,743,3.256,744,3.256,745,3.256,746,4.431,747,3.256,748,3.712,749,4.431,750,3.256,751,3.256,752,2.728,753,3.256,754,3.256,755,3.256,756,3.256,757,3.256,758,3.256,759,3.256,760,3.256,761,3.256,762,3.256,763,3.256]],["title/classes/TcsThread.html",[22,0.014,764,2.122]],["body/classes/TcsThread.html",[3,0.201,4,0.177,5,0.153,7,0.13,8,0.351,12,0.984,13,0.426,14,0.031,15,1.738,19,0.009,20,0.014,21,0.009,22,0.009,24,0.405,31,0.802,33,2.252,37,0.44,40,1.179,42,1.037,43,1.037,44,1.108,50,1.351,51,1.517,58,1.482,60,1.223,72,1.264,74,1.128,78,1.372,87,0.802,91,2.096,92,1.926,95,1.485,105,1.284,106,1.068,107,1.174,109,1.86,111,0.827,120,1.485,125,1.068,132,0.977,155,1.014,166,1.778,172,2.193,183,1.284,207,2.66,260,2.617,285,2.02,287,0.706,289,2.791,292,3.59,293,2.599,296,1.461,298,3.422,360,2.268,361,2.02,373,3.112,384,2.268,401,1.461,406,1.461,407,2.66,410,1.461,506,2.02,574,2.401,576,2.59,592,2.268,595,1.461,629,1.461,657,2.599,681,1.674,748,1.674,764,2.02,765,1.674,766,3.802,767,5.03,768,3.802,769,3.802,770,4.91,771,3.186,772,3.102,773,3.102,774,4.286,775,3.102,776,2.599,777,3.102,778,3.102,779,4.749,780,3.591,781,1.999,782,1.999,783,3.102,784,1.999,785,1.999,786,1.999,787,1.999,788,3.102,789,3.59,790,1.999,791,3.102,792,3.102,793,2.599,794,3.102,795,1.999,796,3.102,797,4.286,798,3.102,799,1.999,800,3.102,801,1.999,802,4.91,803,4.286,804,2.599,805,1.999,806,3.802,807,3.102,808,3.102,809,3.102,810,1.999,811,1.999,812,1.999,813,1.999,814,1.999,815,3.102,816,1.999,817,1.999,818,1.999,819,3.102,820,1.999,821,2.02,822,3.102,823,1.999,824,1.999,825,1.999,826,3.802,827,1.999,828,1.999,829,3.102,830,3.102,831,1.999,832,1.999]],["title/interfaces/TcsThreadExec.html",[0,0.717,821,2.122]],["body/interfaces/TcsThreadExec.html",[0,1.066,2,2.006,3,0.487,4,0.428,5,0.371,7,0.316,8,0.646,12,1.125,13,0.437,14,0.03,19,0.022,20,0.026,21,0.022,166,1.981,260,2.811,789,4.574,821,3.714,833,4.059]],["title/classes/TcsThreadsManager.html",[22,0.014,378,2.122]],["body/classes/TcsThreadsManager.html",[3,0.301,4,0.264,5,0.229,7,0.314,8,0.473,12,1.019,13,0.399,14,0.031,15,1.457,19,0.014,20,0.019,21,0.014,22,0.013,24,0.606,31,1.081,33,1.731,37,1.06,40,1.111,42,0.975,43,0.975,44,1.15,50,1.245,60,1.15,72,1.31,74,1.207,78,1.15,91,2.045,92,1.879,95,1.457,109,2.045,120,1.457,161,2.723,166,1.793,172,1.731,183,1.731,195,3.138,207,2.045,260,2.554,287,1.058,289,3.702,292,4.011,309,2.235,311,2.235,360,4.155,365,2.456,378,2.723,387,1.879,407,2.045,446,2.723,468,3.503,574,2.78,576,2.995,764,2.723,767,3.503,776,3.503,779,4.477,780,3.503,789,4.011,793,3.503,804,3.503,834,2.508,835,4.818,836,4.181,837,4.181,838,4.181,839,4.181,840,2.993,841,2.993,842,4.181,843,4.181,844,2.993,845,5.215,846,2.993,847,2.993,848,2.993,849,2.993,850,2.993,851,2.993,852,2.993,853,2.993,854,4.181,855,2.993,856,5.215,857,2.993,858,4.181,859,2.993,860,2.993]],["title/contributing.html",[689,1.603,861,1.994,862,1.994]],["body/contributing.html",[5,0.317,14,0.028,19,0.019,20,0.024,21,0.019,33,1.714,58,1.158,59,2.213,68,1.714,164,3.862,364,2.771,663,3.469,862,3.027,863,5.184,864,3.469,865,4.141,866,4.343,867,3.469,868,5.184,869,4.554,870,5.659,871,5.659,872,4.141,873,5.659,874,4.741,875,4.141,876,4.141,877,4.141,878,3.027,879,4.141,880,4.141,881,4.141,882,4.141,883,3.469,884,5.184,885,5.184,886,3.027,887,4.141,888,4.141,889,4.141,890,4.141,891,4.141,892,4.141,893,5.184,894,4.141,895,3.469,896,4.969,897,5.184,898,4.141,899,4.141,900,4.141,901,4.141,902,4.141,903,3.469,904,4.141,905,4.141,906,3.469,907,3.469,908,5.184,909,4.141,910,4.141,911,4.141,912,3.469,913,3.469,914,3.469,915,4.141,916,3.469,917,4.141,918,4.141,919,3.469,920,3.469,921,3.469,922,3.469]],["title/coverage.html",[878,3.24]],["body/coverage.html",[0,1.332,1,2.093,5,0.246,6,3.21,13,0.246,14,0.031,16,2.093,19,0.015,20,0.02,21,0.015,22,0.029,23,1.444,25,3.257,76,1.888,105,2.719,113,1.888,120,0.972,156,2.093,157,2.692,159,1.444,166,1.84,177,1.718,179,2.093,218,2.093,219,2.692,285,2.093,286,2.692,301,2.093,302,2.692,341,2.093,342,3.21,343,1.888,352,2.093,353,2.692,364,1.718,367,2.093,369,2.093,371,2.093,374,2.093,376,2.093,378,2.093,417,2.692,438,2.093,439,2.692,462,2.692,497,2.692,550,2.692,574,1.572,599,2.692,614,1.888,725,2.692,728,2.692,764,2.093,765,2.692,821,2.093,833,2.692,834,2.692,869,2.349,878,2.349,923,3.214,924,3.214,925,2.692,926,6.055,927,2.692,928,6.364,929,2.692,930,2.692,931,5.002,932,3.214,933,3.214,934,3.214,935,3.214,936,3.214,937,3.214,938,3.214,939,3.214,940,3.214,941,4.391,942,4.391,943,3.214,944,3.214,945,3.214,946,4.391,947,4.391,948,5.002,949,3.214,950,3.214,951,3.214,952,3.214,953,4.391,954,3.214,955,3.214,956,3.214,957,3.214,958,3.214,959,3.214,960,4.715,961,2.692,962,2.692,963,2.692,964,2.692,965,3.679,966,2.692,967,2.692,968,2.692,969,2.692,970,3.679,971,2.692,972,2.692,973,2.692,974,2.692,975,2.692,976,3.214,977,3.214,978,2.692,979,3.214,980,3.214,981,3.214]],["title/interfaces/database.html",[0,0.717,159,1.464]],["body/interfaces/database.html",[0,0.603,2,1.134,3,0.275,4,0.242,5,0.21,7,0.179,12,1.168,13,0.435,14,0.031,19,0.013,20,0.018,21,0.013,23,1.764,29,3.441,30,3.596,31,1.015,39,3.075,40,1.074,42,1.074,43,1.151,44,1.267,46,1.951,50,1.267,51,2.7,58,1.545,60,1.267,66,1.92,72,1.452,87,1.296,102,3.264,120,1.187,159,2.481,161,3.788,162,2.87,163,4.252,164,3.857,172,2.488,173,4.394,174,4.003,175,2.87,176,4.394,177,2.453,179,4.231,183,2.075,191,2.87,193,3.664,214,2.307,228,3.29,231,2.87,232,2.307,238,3.29,241,2.295,387,1.764,975,2.295,982,2.739,983,6.01,984,2.739,985,3.926,986,2.739,987,3.926,988,2.739,989,2.739,990,3.926]],["title/dependencies.html",[632,2.549,991,2.728]],["body/dependencies.html",[14,0.029,19,0.024,20,0.027,21,0.024,199,4.314,632,3.353,992,5.149,993,5.149,994,5.149]],["title/miscellaneous/functions.html",[995,1.776,996,3.28]],["body/miscellaneous/functions.html",[7,0.3,14,0.03,19,0.021,20,0.025,21,0.021,42,1.273,43,1.273,44,1.502,260,2.065,576,2.898,965,3.85,966,4.63,967,4.63,968,3.85,969,4.63,970,3.85,971,4.63,972,4.63,995,2.993,996,3.85,997,5.526,998,5.526,999,4.596,1000,4.596,1001,4.596,1002,4.596,1003,5.526,1004,4.596,1005,4.596,1006,4.596]],["title/index.html",[7,0.178,689,1.603,861,1.994]],["body/index.html",[4,0.322,14,0.028,19,0.017,20,0.022,21,0.017,33,1.977,120,1.102,159,1.636,183,1.508,231,2.662,272,2.14,288,2.662,314,2.14,359,2.847,364,3.366,365,3.13,521,2.662,555,3.052,565,3.49,571,3.052,576,2.335,577,2.662,619,2.662,626,3.469,641,4.133,689,2.14,703,4.463,714,4.918,726,4,862,2.662,864,4.463,866,4,867,3.052,874,3.052,883,4,886,2.662,895,4.737,896,4.737,903,3.052,906,3.052,907,3.052,912,3.052,913,3.052,914,3.052,916,3.052,922,4,1007,3.642,1008,3.642,1009,5.327,1010,3.642,1011,3.642,1012,4.775,1013,3.642,1014,3.642,1015,3.052,1016,3.642,1017,3.642,1018,3.642,1019,3.642,1020,3.642,1021,3.642,1022,3.642,1023,3.642,1024,3.642,1025,3.642,1026,3.642,1027,3.642,1028,3.642,1029,5.327,1030,3.642,1031,3.642,1032,3.642,1033,3.642,1034,5.327,1035,4.775,1036,3.642,1037,4.775,1038,3.642,1039,3.642,1040,5.654,1041,3.642,1042,3.642,1043,4.775,1044,3.642,1045,3.642,1046,3.642,1047,4.775,1048,3.642,1049,3.642,1050,3.642,1051,3.642,1052,3.642,1053,3.642,1054,3.642,1055,3.642,1056,3.642,1057,3.642,1058,3.642,1059,3.642,1060,4.775,1061,3.642,1062,3.642,1063,3.642,1064,3.642,1065,3.642,1066,3.642,1067,3.642,1068,3.642,1069,3.642,1070,3.642,1071,3.642,1072,3.642]],["title/license.html",[689,1.603,861,1.994,1073,2.285]],["body/license.html",[14,0.024,19,0.019,20,0.024,21,0.019,317,2.743,509,3.529,517,3.529,869,3.079,886,3.83,919,3.529,920,3.529,921,3.529,1015,3.529,1073,3.529,1074,4.212,1075,5.703,1076,4.212,1077,4.212,1078,4.212,1079,5.239,1080,4.212,1081,4.212,1082,4.212,1083,4.212,1084,4.212,1085,4.212,1086,5.239,1087,6.466,1088,4.212,1089,4.212,1090,5.703,1091,4.212,1092,5.239,1093,4.212,1094,4.212,1095,4.212,1096,4.212,1097,4.212,1098,4.212,1099,4.212,1100,4.212,1101,5.239,1102,4.212,1103,4.212,1104,4.212,1105,4.212,1106,4.212,1107,4.212,1108,5.239,1109,5.239,1110,4.212,1111,4.212,1112,4.212,1113,4.212,1114,4.212,1115,4.212,1116,4.212,1117,4.212,1118,4.212,1119,4.212,1120,4.212,1121,4.212,1122,4.212,1123,4.212,1124,4.212,1125,4.212,1126,4.212,1127,4.212,1128,4.212,1129,4.212,1130,4.212,1131,4.212,1132,4.212,1133,4.212,1134,4.212,1135,4.212,1136,4.212]],["title/modules.html",[359,2.369]],["body/modules.html",[14,0.027,19,0.024,20,0.027,21,0.024,359,2.796]],["title/overview.html",[1137,3.713]],["body/overview.html",[2,2.143,14,0.027,19,0.024,20,0.027,21,0.024,24,1.048,708,4.337,1137,4.337,1138,5.176]],["title/interfaces/sqlColumn.html",[0,0.717,177,1.741]],["body/interfaces/sqlColumn.html",[0,0.951,2,1.79,3,0.435,4,0.382,5,0.331,7,0.282,8,0.603,12,1.118,13,0.482,14,0.031,19,0.02,20,0.024,21,0.02,177,2.846,185,2.31,268,5.045,345,3.16,629,3.892,978,3.622,1139,6.022,1140,4.323,1141,4.323,1142,4.323,1143,4.323,1144,4.323,1145,4.323,1146,4.323,1147,4.323,1148,4.323,1149,4.323,1150,4.323,1151,4.323,1152,4.323,1153,4.323,1154,4.323,1155,4.323,1156,4.323,1157,5.324,1158,4.323,1159,4.323,1160,4.323,1161,5.324,1162,5.324]],["title/miscellaneous/variables.html",[995,1.776,1163,3.28]],["body/miscellaneous/variables.html",[7,0.23,13,0.457,14,0.031,19,0.016,20,0.021,21,0.016,33,1.462,46,1.653,58,0.988,63,2.299,74,1.029,87,1.575,111,2.312,155,1.991,166,1.826,207,2.92,214,2.075,247,2.581,249,2.958,296,2.581,298,2.075,352,2.299,358,3.42,359,1.887,361,3.417,364,3.106,384,3.42,385,3.42,386,3.835,430,4.083,522,2.581,577,2.581,614,2.075,626,2.299,641,2.581,752,3.92,771,2.958,779,2.581,925,2.958,927,3.92,929,2.958,930,3.92,960,2.958,961,3.92,962,3.92,963,3.92,964,3.92,973,2.958,974,3.92,995,2.299,1163,2.958,1164,3.531,1165,3.531,1166,5.811,1167,3.531,1168,3.531,1169,3.531,1170,3.531,1171,4.678,1172,3.531,1173,3.531,1174,3.531,1175,3.531,1176,3.531,1177,3.531,1178,3.531,1179,4.678,1180,3.531,1181,3.531,1182,3.531,1183,3.531,1184,3.531,1185,3.531,1186,3.531,1187,3.531,1188,3.531,1189,3.531,1190,3.531,1191,4.678,1192,4.678,1193,3.531,1194,3.531,1195,3.531]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":105,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["0/1",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":979,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":947,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":980,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":945,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":109,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsEventManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["10",{"_index":1185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":877,"title":{},"body":{"contributing.html":{}}}],["17",{"_index":1138,"title":{},"body":{"overview.html":{}}}],["2",{"_index":722,"title":{},"body":{"classes/TcsModule.html":{}}}],["2.2.5",{"_index":994,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":253,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["2021",{"_index":1077,"title":{},"body":{"license.html":{}}}],["27707",{"_index":1172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":1160,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["3.6.6",{"_index":992,"title":{},"body":{"dependencies.html":{}}}],["3/5",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":946,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":934,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["3307",{"_index":1171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["35",{"_index":943,"title":{},"body":{"coverage.html":{}}}],["4/10",{"_index":940,"title":{},"body":{"coverage.html":{}}}],["4/13",{"_index":942,"title":{},"body":{"coverage.html":{}}}],["4/6",{"_index":959,"title":{},"body":{"coverage.html":{}}}],["4/9",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":933,"title":{},"body":{"coverage.html":{}}}],["44",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["443",{"_index":696,"title":{},"body":{"classes/TcsModule.html":{}}}],["5/14",{"_index":944,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":952,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":950,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":953,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":708,"title":{},"body":{"classes/TcsModule.html":{},"overview.html":{}}}],["8/11",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":957,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["9/15",{"_index":954,"title":{},"body":{"coverage.html":{}}}],["_",{"_index":106,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{}}}],["_source",{"_index":332,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["above",{"_index":1107,"title":{},"body":{"license.html":{}}}],["abstract",{"_index":32,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["action",{"_index":509,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["action's",{"_index":524,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["action.actionname",{"_index":535,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata",{"_index":545,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actiondata.inputcontroller",{"_index":548,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actionhandlers",{"_index":498,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actioninput",{"_index":1,"title":{"interfaces/ActionInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["actioninputs",{"_index":499,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["actionname",{"_index":9,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["actions",{"_index":891,"title":{},"body":{"contributing.html":{}}}],["activated",{"_index":1192,"title":{},"body":{"miscellaneous/variables.html":{}}}],["actually",{"_index":796,"title":{},"body":{"classes/TcsThread.html":{}}}],["add",{"_index":272,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["addconfig",{"_index":551,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addconfig(langtoappend",{"_index":556,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addeventhandler",{"_index":463,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["addmoduletogame",{"_index":731,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["addmoduletogame(newmodule",{"_index":735,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["address",{"_index":1169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["adds",{"_index":529,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["already",{"_index":543,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModuleManager.html":{}}}],["alreadycreated",{"_index":533,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["alter",{"_index":271,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["amount",{"_index":1187,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":1099,"title":{},"body":{"license.html":{}}}],["appear",{"_index":894,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":791,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread",{"_index":772,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread(module",{"_index":788,"title":{},"body":{"classes/TcsThread.html":{}}}],["applyeventhandler",{"_index":441,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["applyeventhandler(data",{"_index":453,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["args",{"_index":322,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arguments",{"_index":323,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["arising",{"_index":1134,"title":{},"body":{"license.html":{}}}],["array",{"_index":506,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["ask",{"_index":1023,"title":{},"body":{"index.html":{}}}],["associated",{"_index":1088,"title":{},"body":{"license.html":{}}}],["async",{"_index":101,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["asyncquery",{"_index":220,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["asyncquery(sql",{"_index":223,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["authors",{"_index":1125,"title":{},"body":{"license.html":{}}}],["auto_increment",{"_index":262,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["automatically",{"_index":902,"title":{},"body":{"contributing.html":{}}}],["await",{"_index":107,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{}}}],["basic",{"_index":1035,"title":{},"body":{"index.html":{}}}],["before",{"_index":868,"title":{},"body":{"contributing.html":{}}}],["benchmark",{"_index":293,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{}}}],["benchmark.stop",{"_index":819,"title":{},"body":{"classes/TcsThread.html":{}}}],["between",{"_index":91,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["binary",{"_index":1153,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["binary(255",{"_index":1154,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["bindaction",{"_index":500,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["boolean",{"_index":373,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["brief",{"_index":511,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["buf",{"_index":704,"title":{},"body":{"classes/TcsModule.html":{}}}],["buffer.from(d",{"_index":705,"title":{},"body":{"classes/TcsModule.html":{}}}],["build",{"_index":893,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":1076,"title":{},"body":{"license.html":{}}}],["call",{"_index":318,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsInputManager.html":{}}}],["callbacks",{"_index":310,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{}}}],["callbacks:serverevent",{"_index":331,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["called",{"_index":446,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["can't",{"_index":749,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["catch",{"_index":406,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["category/name",{"_index":651,"title":{},"body":{"classes/TcsModule.html":{}}}],["cb",{"_index":319,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["changes",{"_index":905,"title":{},"body":{"contributing.html":{}}}],["char",{"_index":1141,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["char(255",{"_index":1142,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["charge",{"_index":1083,"title":{},"body":{"license.html":{}}}],["check",{"_index":522,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["checkversion",{"_index":605,"title":{},"body":{"classes/TcsModule.html":{}}}],["citizenfx/client",{"_index":913,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["citizenfx/server",{"_index":914,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["claim",{"_index":1128,"title":{},"body":{"license.html":{}}}],["class",{"_index":22,"title":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["classes",{"_index":24,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"overview.html":{}}}],["cleartick(this.tick",{"_index":830,"title":{},"body":{"classes/TcsThread.html":{}}}],["clicking",{"_index":1052,"title":{},"body":{"index.html":{}}}],["client",{"_index":160,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["clientcallback",{"_index":303,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["clone",{"_index":1041,"title":{},"body":{"index.html":{}}}],["code",{"_index":874,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["collection",{"_index":116,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["collection(collection",{"_index":212,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["collection(this.tables[0",{"_index":136,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["collection.length",{"_index":118,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["color",{"_index":653,"title":{},"body":{"classes/TcsModule.html":{}}}],["column",{"_index":268,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/sqlColumn.html":{}}}],["column.column",{"_index":269,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["column.type",{"_index":270,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["columns",{"_index":176,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["columns.map",{"_index":267,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["come",{"_index":845,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["comes",{"_index":792,"title":{},"body":{"classes/TcsThread.html":{}}}],["command",{"_index":922,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["commands",{"_index":1065,"title":{},"body":{"index.html":{}}}],["compare",{"_index":636,"title":{},"body":{"classes/TcsModule.html":{}}}],["compared",{"_index":640,"title":{},"body":{"classes/TcsModule.html":{}}}],["comparenumber",{"_index":720,"title":{},"body":{"classes/TcsModule.html":{}}}],["compile",{"_index":890,"title":{},"body":{"contributing.html":{}}}],["compiling",{"_index":889,"title":{},"body":{"contributing.html":{}}}],["compodoc",{"_index":900,"title":{},"body":{"contributing.html":{}}}],["compodoc/compodoc",{"_index":910,"title":{},"body":{"contributing.html":{}}}],["con",{"_index":79,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["concatened",{"_index":650,"title":{},"body":{"classes/TcsModule.html":{}}}],["conditions",{"_index":1106,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":1020,"title":{},"body":{"index.html":{}}}],["config",{"_index":579,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configuration",{"_index":566,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configured",{"_index":562,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["connect",{"_index":1033,"title":{},"body":{"index.html":{}}}],["connected",{"_index":418,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["connection",{"_index":1135,"title":{},"body":{"license.html":{}}}],["connectionlimit",{"_index":252,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["connectionparameters",{"_index":245,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["connectionurl",{"_index":198,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["connecttodb",{"_index":254,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["console",{"_index":386,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["console.error(err.message",{"_index":209,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["console.error(error",{"_index":716,"title":{},"body":{"classes/TcsModule.html":{}}}],["console.log",{"_index":392,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["console.log(`${consolecolors.red}[error",{"_index":414,"title":{},"body":{"classes/TcsCore.html":{}}}],["console.log(consolecolors.red",{"_index":684,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors",{"_index":647,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue",{"_index":724,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue}[debug",{"_index":411,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.blue}[tcs",{"_index":393,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.green",{"_index":680,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.green}ready",{"_index":408,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.red",{"_index":676,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.reset",{"_index":412,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["consolecolors.yellow",{"_index":652,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${newmodule.getid",{"_index":760,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["consolecolors.yellow}${thread.id}${consolecolors.red",{"_index":817,"title":{},"body":{"classes/TcsThread.html":{}}}],["consolecolors.yellow}[warning",{"_index":416,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.yellow}initializing",{"_index":394,"title":{},"body":{"classes/TcsCore.html":{}}}],["const",{"_index":95,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor",{"_index":37,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor(con",{"_index":80,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["constructor(db",{"_index":115,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["constructor(eventtype",{"_index":443,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["constructor(moduleinfos",{"_index":613,"title":{},"body":{"classes/TcsModule.html":{}}}],["constructor(onconnectiondone",{"_index":165,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["constructor(tables",{"_index":38,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["constructor(timer",{"_index":777,"title":{},"body":{"classes/TcsThread.html":{}}}],["contain",{"_index":1064,"title":{},"body":{"index.html":{}}}],["contained",{"_index":797,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid",{"_index":773,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid(id",{"_index":794,"title":{},"body":{"classes/TcsThread.html":{}}}],["contract",{"_index":1131,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1016,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":862,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":863,"title":{},"body":{"contributing.html":{}}}],["control",{"_index":518,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controller's",{"_index":515,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllerkey",{"_index":514,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["controllers",{"_index":523,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["converts",{"_index":83,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["copies",{"_index":1101,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1086,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1075,"title":{},"body":{"license.html":{}}}],["core",{"_index":365,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["correctly",{"_index":679,"title":{},"body":{"classes/TcsModule.html":{}}}],["corresponding",{"_index":187,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["count",{"_index":57,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["coverage",{"_index":878,"title":{"coverage.html":{}},"body":{"contributing.html":{},"coverage.html":{}}}],["create",{"_index":183,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"index.html":{}}}],["created",{"_index":793,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["creates",{"_index":468,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThreadsManager.html":{}}}],["createthread",{"_index":836,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["createthread(module",{"_index":839,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["current",{"_index":58,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"contributing.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["currentdb",{"_index":419,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["currently",{"_index":526,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["currentnumber",{"_index":718,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentrequest",{"_index":127,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentrequest.limit(this.limitcount",{"_index":129,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentrequest.sort(this.orderbylist",{"_index":130,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentrequest.toarray((err",{"_index":131,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["currentstep",{"_index":637,"title":{},"body":{"classes/TcsModule.html":{}}}],["currentthread",{"_index":847,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currentthread.appendthread(module",{"_index":853,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["d",{"_index":703,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["damages",{"_index":1129,"title":{},"body":{"license.html":{}}}],["data",{"_index":185,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"interfaces/sqlColumn.html":{}}}],["database",{"_index":159,"title":{"interfaces/database.html":{}},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"coverage.html":{},"interfaces/database.html":{},"index.html":{}}}],["database_config",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database_config.address",{"_index":202,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["database_config.databasename",{"_index":250,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["database_config.nosql",{"_index":433,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["database_config.port",{"_index":203,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["database_config.username",{"_index":200,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["databasename",{"_index":1176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":629,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/sqlColumn.html":{}}}],["datetime",{"_index":1161,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["db",{"_index":114,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["deal",{"_index":1089,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1136,"title":{},"body":{"license.html":{}}}],["deaththreadchecker",{"_index":966,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["deaththreadchecker(module",{"_index":1000,"title":{},"body":{"miscellaneous/functions.html":{}}}],["debug",{"_index":361,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":380,"title":{},"body":{"classes/TcsCore.html":{}}}],["debugexec",{"_index":766,"title":{},"body":{"classes/TcsThread.html":{}}}],["debugmode",{"_index":1181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decimal",{"_index":1158,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["decimal(10",{"_index":1159,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["declares",{"_index":1030,"title":{},"body":{"index.html":{}}}],["default",{"_index":155,"title":{},"body":{"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":40,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["delay",{"_index":767,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delete",{"_index":161,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["delete(collection",{"_index":170,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["delete(table",{"_index":228,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["deleted",{"_index":803,"title":{},"body":{"classes/TcsThread.html":{}}}],["deletes",{"_index":842,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["demo",{"_index":1072,"title":{},"body":{"index.html":{}}}],["dependencies",{"_index":632,"title":{"dependencies.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"dependencies.html":{}}}],["dependency",{"_index":750,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["depends",{"_index":663,"title":{},"body":{"classes/TcsModule.html":{},"contributing.html":{}}}],["description",{"_index":60,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["designed",{"_index":122,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["destroymethod",{"_index":600,"title":{},"body":{"classes/TcsModule.html":{}}}],["destroymodule",{"_index":606,"title":{},"body":{"classes/TcsModule.html":{}}}],["develop",{"_index":1063,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1061,"title":{},"body":{"index.html":{}}}],["developped",{"_index":1011,"title":{},"body":{"index.html":{}}}],["dict",{"_index":593,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["dictionnary",{"_index":559,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["difference",{"_index":297,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["directly",{"_index":1022,"title":{},"body":{"index.html":{}}}],["discution",{"_index":1024,"title":{},"body":{"index.html":{}}}],["display",{"_index":382,"title":{},"body":{"classes/TcsCore.html":{}}}],["distribute",{"_index":1097,"title":{},"body":{"license.html":{}}}],["doc",{"_index":880,"title":{},"body":{"contributing.html":{}}}],["docdependencies",{"_index":911,"title":{},"body":{"contributing.html":{}}}],["docs",{"_index":872,"title":{},"body":{"contributing.html":{}}}],["document",{"_index":191,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["documentation",{"_index":869,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["documents",{"_index":173,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["doesn't",{"_index":235,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["don't",{"_index":231,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{},"index.html":{}}}],["dot",{"_index":644,"title":{},"body":{"classes/TcsModule.html":{}}}],["down",{"_index":675,"title":{},"body":{"classes/TcsModule.html":{}}}],["download",{"_index":714,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["drag",{"_index":1056,"title":{},"body":{"index.html":{}}}],["drop",{"_index":1057,"title":{},"body":{"index.html":{}}}],["due",{"_index":904,"title":{},"body":{"contributing.html":{}}}],["during",{"_index":123,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["e",{"_index":681,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["each",{"_index":92,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["emitnet('callbacks:clientevent",{"_index":336,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('callbacks:serverevent",{"_index":338,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["emitnet('tcs:handleevent",{"_index":492,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["en",{"_index":580,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["encodeuricomponent(database_config.password",{"_index":201,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["encountered",{"_index":816,"title":{},"body":{"classes/TcsThread.html":{}}}],["ensure",{"_index":1060,"title":{},"body":{"index.html":{}}}],["ensurecolumns",{"_index":162,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["ensurecolumns(table",{"_index":175,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["ensuretables",{"_index":221,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["ensuretables(table",{"_index":233,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["enum",{"_index":345,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/sqlColumn.html":{}}}],["environment",{"_index":881,"title":{},"body":{"contributing.html":{}}}],["equation",{"_index":85,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["err",{"_index":133,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["error",{"_index":132,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["error('no",{"_index":121,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["error(error",{"_index":388,"title":{},"body":{"classes/TcsCore.html":{}}}],["errors",{"_index":1190,"title":{},"body":{"miscellaneous/variables.html":{}}}],["especially",{"_index":1046,"title":{},"body":{"index.html":{}}}],["even",{"_index":1191,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event",{"_index":317,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"license.html":{}}}],["event.eventtype",{"_index":489,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.target",{"_index":479,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.targetid",{"_index":493,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["eventmanager",{"_index":355,"title":{},"body":{"classes/TcsCore.html":{}}}],["eventname",{"_index":316,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["events",{"_index":448,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["eventsmodulesinfos",{"_index":974,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventtype",{"_index":348,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["example",{"_index":287,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exec",{"_index":789,"title":{},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["execs",{"_index":768,"title":{},"body":{"classes/TcsThread.html":{}}}],["execute",{"_index":33,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["executed",{"_index":450,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{}}}],["executeone",{"_index":34,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["executions",{"_index":780,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exist",{"_index":232,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"interfaces/database.html":{}}}],["exists",{"_index":259,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsModuleManager.html":{}}}],["expectations",{"_index":876,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":1045,"title":{},"body":{"index.html":{}}}],["export",{"_index":1068,"title":{},"body":{"index.html":{}}}],["exports('tcseventtarget",{"_index":351,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["express",{"_index":1116,"title":{},"body":{"license.html":{}}}],["extends",{"_index":77,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["extra",{"_index":918,"title":{},"body":{"contributing.html":{}}}],["false",{"_index":407,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["fetch",{"_index":987,"title":{},"body":{"interfaces/database.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["files",{"_index":920,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["fill",{"_index":570,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filled",{"_index":572,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["filter((listener",{"_index":487,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["filter((mod",{"_index":745,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["filter((module",{"_index":741,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["find",{"_index":565,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["findmodulebyid",{"_index":729,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["findone(this.query",{"_index":137,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["first",{"_index":1047,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":1121,"title":{},"body":{"license.html":{}}}],["fivem",{"_index":1009,"title":{},"body":{"index.html":{}}}],["fivemtcs",{"_index":1078,"title":{},"body":{"license.html":{}}}],["fivemtcs/types",{"_index":1067,"title":{},"body":{"index.html":{}}}],["fnc",{"_index":430,"title":{},"body":{"classes/TcsDatabaseManager.html":{},"classes/TcsInputManager.html":{},"miscellaneous/variables.html":{}}}],["folder",{"_index":895,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["follow",{"_index":906,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["following",{"_index":921,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["foreach((listener",{"_index":490,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["foreach((module",{"_index":743,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["forget",{"_index":1019,"title":{},"body":{"index.html":{}}}],["format",{"_index":885,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":195,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["foundmodule",{"_index":746,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["foundmodule.modulelaunched",{"_index":754,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["fr",{"_index":1179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":1010,"title":{},"body":{"index.html":{}}}],["free",{"_index":1082,"title":{},"body":{"license.html":{}}}],["fs",{"_index":917,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":166,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":996,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1104,"title":{},"body":{"license.html":{}}}],["g",{"_index":909,"title":{},"body":{"contributing.html":{}}}],["game",{"_index":737,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["gamemodules",{"_index":730,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["gametype",{"_index":1028,"title":{},"body":{"index.html":{}}}],["get(collection",{"_index":180,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["get(key",{"_index":563,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["get(table",{"_index":236,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["get(tables",{"_index":985,"title":{},"body":{"interfaces/database.html":{}}}],["getandreplace",{"_index":552,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getandreplace(key",{"_index":567,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getcurrentresourcename",{"_index":583,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getdependencies",{"_index":607,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["geteventtype",{"_index":442,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["getgametimer",{"_index":300,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["getid",{"_index":608,"title":{},"body":{"classes/TcsModule.html":{}}}],["getplayerbyentityid",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getplayerbyentityid(id",{"_index":1001,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gets",{"_index":184,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["getthreadtimer",{"_index":774,"title":{},"body":{"classes/TcsThread.html":{}}}],["getting",{"_index":861,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":726,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"index.html":{}}}],["github",{"_index":625,"title":{},"body":{"classes/TcsModule.html":{}}}],["give",{"_index":65,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["go",{"_index":409,"title":{},"body":{"classes/TcsCore.html":{}}}],["going",{"_index":1182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":1081,"title":{},"body":{"license.html":{}}}],["guide",{"_index":1018,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":865,"title":{},"body":{"contributing.html":{}}}],["handler",{"_index":440,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{}}}],["handles",{"_index":469,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["here",{"_index":864,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["hereby",{"_index":1080,"title":{},"body":{"license.html":{}}}],["holders",{"_index":1126,"title":{},"body":{"license.html":{}}}],["host",{"_index":246,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["hostname",{"_index":694,"title":{},"body":{"classes/TcsModule.html":{}}}],["https",{"_index":691,"title":{},"body":{"classes/TcsModule.html":{}}}],["https.request(options",{"_index":700,"title":{},"body":{"classes/TcsModule.html":{}}}],["https://github.com/fivemtcs/core.git",{"_index":1042,"title":{},"body":{"index.html":{}}}],["id",{"_index":260,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{}}}],["identifier",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":662,"title":{},"body":{"classes/TcsModule.html":{}}}],["ignore",{"_index":69,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["implements",{"_index":158,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["implied",{"_index":1117,"title":{},"body":{"license.html":{}}}],["important",{"_index":1027,"title":{},"body":{"index.html":{}}}],["included",{"_index":1110,"title":{},"body":{"license.html":{}}}],["including",{"_index":1092,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":470,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["informations",{"_index":577,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["inherited",{"_index":139,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["init",{"_index":1066,"title":{},"body":{"index.html":{}}}],["initialize",{"_index":309,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["initmodule",{"_index":609,"title":{},"body":{"classes/TcsModule.html":{}}}],["input",{"_index":510,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["inputcontroller",{"_index":10,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputkey",{"_index":18,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{}}}],["inputkeyboard",{"_index":11,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{}}}],["inputname",{"_index":17,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{}}}],["inputs",{"_index":356,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{}}}],["insert",{"_index":163,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["insert(collection",{"_index":188,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["insert(table",{"_index":238,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["insertone(newdocument",{"_index":217,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["inside",{"_index":1070,"title":{},"body":{"index.html":{}}}],["install",{"_index":908,"title":{},"body":{"contributing.html":{}}}],["installed",{"_index":753,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["instance",{"_index":616,"title":{},"body":{"classes/TcsModule.html":{}}}],["int",{"_index":1157,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["int(11",{"_index":261,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"interfaces/TcsModuleInfos.html":{},"interfaces/TcsThreadExec.html":{},"interfaces/database.html":{},"overview.html":{},"interfaces/sqlColumn.html":{}}}],["iscontroljustpressed(0",{"_index":547,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["iscontrolpressed(0",{"_index":549,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isjustpressed",{"_index":501,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isn't",{"_index":752,"title":{},"body":{"classes/TcsModuleManager.html":{},"miscellaneous/variables.html":{}}}],["ispressed",{"_index":502,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["isserversided",{"_index":357,"title":{},"body":{"classes/TcsCore.html":{}}}],["issue",{"_index":1051,"title":{},"body":{"index.html":{}}}],["issues",{"_index":1043,"title":{},"body":{"index.html":{}}}],["isthreadfull",{"_index":769,"title":{},"body":{"classes/TcsThread.html":{}}}],["isversionsuperior",{"_index":610,"title":{},"body":{"classes/TcsModule.html":{}}}],["isversionsuperior(current",{"_index":635,"title":{},"body":{"classes/TcsModule.html":{}}}],["isweaponinarray",{"_index":971,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isweaponinarray(weaponarray",{"_index":1002,"title":{},"body":{"miscellaneous/functions.html":{}}}],["it's",{"_index":225,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsModuleManager.html":{}}}],["json",{"_index":706,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.parse",{"_index":581,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["json.parse(buf.tostring('utf",{"_index":707,"title":{},"body":{"classes/TcsModule.html":{}}}],["json.version",{"_index":709,"title":{},"body":{"classes/TcsModule.html":{}}}],["key",{"_index":86,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{}}}],["keyboard",{"_index":538,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboard's",{"_index":513,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboardactions",{"_index":503,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keyboardkey",{"_index":512,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["keys",{"_index":278,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{}}}],["keys.join",{"_index":283,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["keys.push(key",{"_index":280,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["kind",{"_index":1115,"title":{},"body":{"license.html":{}}}],["know",{"_index":627,"title":{},"body":{"classes/TcsModule.html":{}}}],["lang",{"_index":358,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["langtoappend",{"_index":560,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["language",{"_index":555,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{}}}],["last",{"_index":521,"title":{},"body":{"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"index.html":{}}}],["latest",{"_index":641,"title":{},"body":{"classes/TcsModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["launch",{"_index":618,"title":{},"body":{"classes/TcsModule.html":{}}}],["launchmethod",{"_index":601,"title":{},"body":{"classes/TcsModule.html":{}}}],["learn",{"_index":1036,"title":{},"body":{"index.html":{}}}],["level",{"_index":875,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":1130,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1127,"title":{},"body":{"license.html":{}}}],["license",{"_index":1073,"title":{"license.html":{}},"body":{"license.html":{}}}],["limit",{"_index":35,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["limit(count",{"_index":54,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["limitation",{"_index":1093,"title":{},"body":{"license.html":{}}}],["limitcount",{"_index":27,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["limited",{"_index":1118,"title":{},"body":{"license.html":{}}}],["list",{"_index":66,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/database.html":{}}}],["listen",{"_index":449,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener",{"_index":445,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener.applyeventhandler(event.data",{"_index":491,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listener.geteventtype",{"_index":488,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listeners",{"_index":464,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["load",{"_index":578,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{}}}],["loaded",{"_index":734,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadmodulelang",{"_index":553,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadmodulelang(module",{"_index":573,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loadreadylist",{"_index":421,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["loadresourcefile",{"_index":582,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loads",{"_index":738,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadtcsmoduleinfos",{"_index":961,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadtcsmoduleinfosfunction.push(fnc",{"_index":1177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["local",{"_index":347,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["localhost",{"_index":1170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["longtext",{"_index":1151,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["longtext(4294967295",{"_index":1152,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["looking",{"_index":1071,"title":{},"body":{"index.html":{}}}],["make",{"_index":186,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["makerequest",{"_index":23,"title":{"classes/MakeRequest.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"coverage.html":{},"interfaces/database.html":{}}}],["makerequest:19",{"_index":148,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:2",{"_index":143,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:29",{"_index":149,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:3",{"_index":142,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:38",{"_index":146,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:44",{"_index":147,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:5",{"_index":140,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequest:7",{"_index":141,"title":{},"body":{"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["makerequestmongo",{"_index":113,"title":{"classes/MakeRequestMongo.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"coverage.html":{}}}],["makerequestmongo(this.db",{"_index":211,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["makerequestsql",{"_index":76,"title":{"classes/MakeRequestSQL.html":{}},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"coverage.html":{}}}],["makerequestsql(this.client",{"_index":274,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["management",{"_index":1039,"title":{},"body":{"index.html":{}}}],["manager",{"_index":311,"title":{},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["map",{"_index":571,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{}}}],["mariadb",{"_index":1173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["maxexectimeperthread",{"_index":1184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":1186,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mediumtext",{"_index":1149,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["mediumtext(16777215",{"_index":1150,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["merchantability",{"_index":1120,"title":{},"body":{"license.html":{}}}],["merge",{"_index":919,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["message",{"_index":383,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["messagecolor",{"_index":646,"title":{},"body":{"classes/TcsModule.html":{}}}],["method",{"_index":617,"title":{},"body":{"classes/TcsModule.html":{}}}],["methods",{"_index":31,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["miscellaneous",{"_index":995,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1074,"title":{},"body":{"license.html":{}}}],["mod",{"_index":751,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mod.getid",{"_index":763,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mode",{"_index":384,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["modify",{"_index":1095,"title":{},"body":{"license.html":{}}}],["module",{"_index":576,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["module.getid",{"_index":592,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["module.initmodule",{"_index":757,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.modulelaunched",{"_index":742,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.shouldlaunch",{"_index":756,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["moduledependencies",{"_index":661,"title":{},"body":{"classes/TcsModule.html":{}}}],["moduleinfos",{"_index":602,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulelaunched",{"_index":603,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulename",{"_index":659,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["modules",{"_index":359,"title":{"modules.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["moduletype",{"_index":658,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{}}}],["mongo",{"_index":63,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"miscellaneous/variables.html":{}}}],["mongoclient",{"_index":196,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["mongoclient(connectionurl",{"_index":205,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["mongodatabase",{"_index":156,"title":{"classes/MongoDatabase.html":{}},"body":{"classes/MongoDatabase.html":{},"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["mongodb",{"_index":199,"title":{},"body":{"classes/MongoDatabase.html":{},"dependencies.html":{}}}],["more",{"_index":1037,"title":{},"body":{"index.html":{}}}],["ms",{"_index":296,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["mysql",{"_index":243,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["mysql.createpool(connectionparameters",{"_index":256,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["mysql2",{"_index":993,"title":{},"body":{"dependencies.html":{}}}],["mysqldatabase",{"_index":218,"title":{"classes/MysqlDatabase.html":{}},"body":{"classes/MysqlDatabase.html":{},"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["n",{"_index":713,"title":{},"body":{"classes/TcsModule.html":{}}}],["n${e",{"_index":818,"title":{},"body":{"classes/TcsThread.html":{}}}],["name",{"_index":43,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{}}}],["need",{"_index":903,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["needed",{"_index":873,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":120,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"interfaces/database.html":{},"index.html":{}}}],["newdocument",{"_index":189,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["newdocument[key",{"_index":279,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["newly",{"_index":519,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["newmodule",{"_index":739,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["newvalues",{"_index":193,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["next",{"_index":1058,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":1124,"title":{},"body":{"license.html":{}}}],["nosql",{"_index":1168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["notice",{"_index":1108,"title":{},"body":{"license.html":{}}}],["npm",{"_index":896,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["null",{"_index":111,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":15,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["objkey",{"_index":588,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["obtaining",{"_index":1085,"title":{},"body":{"license.html":{}}}],["onactionjustpressed",{"_index":504,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["onconnectiondone",{"_index":168,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["ondatabaseready",{"_index":422,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["ondatabaseready(fnc",{"_index":428,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["ondatabasereadylist",{"_index":420,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["one",{"_index":53,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsModule.html":{}}}],["onnet",{"_index":330,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('callbacks:clientevent",{"_index":327,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["onnet('tcs:handleevent",{"_index":478,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["ontcsloaded",{"_index":963,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ontcsloadedfunctions.push(fnc",{"_index":1178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":1008,"title":{},"body":{"index.html":{}}}],["optional",{"_index":44,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":693,"title":{},"body":{"classes/TcsModule.html":{}}}],["order",{"_index":64,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["orderby",{"_index":36,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["orderby(list",{"_index":61,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["orderbylist",{"_index":28,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["otherwise",{"_index":1133,"title":{},"body":{"license.html":{}}}],["out",{"_index":1015,"title":{},"body":{"index.html":{},"license.html":{}}}],["outcoming",{"_index":471,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["overview",{"_index":1137,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":991,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":1014,"title":{},"body":{"index.html":{}}}],["param",{"_index":72,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"miscellaneous/functions.html":{}}}],["parseint(compare.split('.')[currentstep",{"_index":721,"title":{},"body":{"classes/TcsModule.html":{}}}],["parseint(current.split('.')[currentstep",{"_index":719,"title":{},"body":{"classes/TcsModule.html":{}}}],["particular",{"_index":1122,"title":{},"body":{"license.html":{}}}],["password",{"_index":249,"title":{},"body":{"classes/MysqlDatabase.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":697,"title":{},"body":{"classes/TcsModule.html":{}}}],["permission",{"_index":1079,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1102,"title":{},"body":{"license.html":{}}}],["person",{"_index":1084,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1103,"title":{},"body":{"license.html":{}}}],["place",{"_index":1069,"title":{},"body":{"index.html":{}}}],["please",{"_index":866,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["points",{"_index":1032,"title":{},"body":{"index.html":{}}}],["pool",{"_index":255,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["pool.promise",{"_index":257,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["port",{"_index":247,"title":{},"body":{"classes/MysqlDatabase.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["portions",{"_index":1112,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1044,"title":{},"body":{"index.html":{}}}],["precompilerender",{"_index":898,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":649,"title":{},"body":{"classes/TcsModule.html":{}}}],["presentation",{"_index":1007,"title":{},"body":{"index.html":{}}}],["pressed",{"_index":520,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["prettier",{"_index":884,"title":{},"body":{"contributing.html":{}}}],["primary",{"_index":263,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["print",{"_index":385,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["printdebug",{"_index":611,"title":{},"body":{"classes/TcsModule.html":{}}}],["printdebug(message",{"_index":645,"title":{},"body":{"classes/TcsModule.html":{}}}],["printed",{"_index":1183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":78,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["project",{"_index":912,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promise",{"_index":51,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{},"interfaces/database.html":{}}}],["promise((resolve",{"_index":125,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsThread.html":{}}}],["properties",{"_index":8,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/sqlColumn.html":{}}}],["protected",{"_index":26,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["provided",{"_index":1113,"title":{},"body":{"license.html":{}}}],["publish",{"_index":1096,"title":{},"body":{"license.html":{}}}],["pull",{"_index":870,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":1123,"title":{},"body":{"license.html":{}}}],["push",{"_index":888,"title":{},"body":{"contributing.html":{}}}],["query",{"_index":29,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["query's",{"_index":227,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["question",{"_index":1021,"title":{},"body":{"index.html":{}}}],["raw.githubusercontent.com",{"_index":695,"title":{},"body":{"classes/TcsModule.html":{}}}],["read",{"_index":867,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reading",{"_index":1017,"title":{},"body":{"index.html":{}}}],["readme",{"_index":879,"title":{},"body":{"contributing.html":{}}}],["readonly",{"_index":354,"title":{},"body":{"classes/TcsCore.html":{}}}],["ready",{"_index":619,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["record",{"_index":39,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsInputManager.html":{},"interfaces/database.html":{}}}],["record[key",{"_index":96,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["recordtosqlstring",{"_index":150,"title":{},"body":{"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["recordtosqlstring(record",{"_index":94,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["registercommand",{"_index":540,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerkeymapping",{"_index":537,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["registerservercallback",{"_index":304,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["reject",{"_index":126,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["reject(err",{"_index":134,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["release",{"_index":1055,"title":{},"body":{"index.html":{}}}],["releases",{"_index":1013,"title":{},"body":{"index.html":{}}}],["remainingdependenciestostart",{"_index":744,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remainingdependenciestostart.length",{"_index":755,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remove",{"_index":802,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads",{"_index":775,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads(module",{"_index":800,"title":{},"body":{"classes/TcsThread.html":{}}}],["removethread",{"_index":776,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethread(id",{"_index":804,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule",{"_index":837,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule(module",{"_index":843,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["render",{"_index":901,"title":{},"body":{"contributing.html":{}}}],["replace",{"_index":568,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replace[objkey",{"_index":590,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["replaceto",{"_index":589,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["report",{"_index":1050,"title":{},"body":{"index.html":{}}}],["repository",{"_index":1026,"title":{},"body":{"index.html":{}}}],["req",{"_index":699,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.end",{"_index":717,"title":{},"body":{"classes/TcsModule.html":{}}}],["req.on('error",{"_index":715,"title":{},"body":{"classes/TcsModule.html":{}}}],["request",{"_index":59,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"contributing.html":{}}}],["requestid",{"_index":305,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["requests",{"_index":871,"title":{},"body":{"contributing.html":{}}}],["require('https",{"_index":692,"title":{},"body":{"classes/TcsModule.html":{}}}],["require('mongodb').mongoclient",{"_index":197,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["require('mysql2",{"_index":244,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["res",{"_index":701,"title":{},"body":{"classes/TcsModule.html":{}}}],["res.on('data",{"_index":702,"title":{},"body":{"classes/TcsModule.html":{}}}],["resolve",{"_index":215,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["resolve(result",{"_index":135,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["resolved",{"_index":824,"title":{},"body":{"classes/TcsThread.html":{}}}],["resolving",{"_index":226,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["resource",{"_index":1029,"title":{},"body":{"index.html":{}}}],["resources",{"_index":1012,"title":{},"body":{"index.html":{}}}],["ressource",{"_index":660,"title":{},"body":{"classes/TcsModule.html":{}}}],["restriction",{"_index":1091,"title":{},"body":{"license.html":{}}}],["result",{"_index":19,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["result.join(sep",{"_index":100,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["result.length",{"_index":110,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["result.push(`${key}=${value",{"_index":99,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["result.push(`${key}='${value",{"_index":98,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["result.replace(`{${objkey",{"_index":591,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["result[0",{"_index":112,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["results",{"_index":21,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"interfaces/database.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":74,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":50,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["rights",{"_index":1094,"title":{},"body":{"license.html":{}}}],["root",{"_index":1175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rows",{"_index":983,"title":{},"body":{"interfaces/database.html":{}}}],["run",{"_index":897,"title":{},"body":{"contributing.html":{}}}],["same",{"_index":761,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["scheduleresourcetick",{"_index":403,"title":{},"body":{"classes/TcsCore.html":{}}}],["scripts",{"_index":1180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":798,"title":{},"body":{"classes/TcsThread.html":{}}}],["section",{"_index":1025,"title":{},"body":{"index.html":{}}}],["select",{"_index":102,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"interfaces/database.html":{}}}],["selected",{"_index":990,"title":{},"body":{"interfaces/database.html":{}}}],["selector",{"_index":181,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["sell",{"_index":1100,"title":{},"body":{"license.html":{}}}],["send",{"_index":456,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["sendevent",{"_index":465,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["sending",{"_index":892,"title":{},"body":{"contributing.html":{}}}],["sep",{"_index":89,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["separator",{"_index":90,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["server",{"_index":314,"title":{},"body":{"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"index.html":{}}}],["server.cfg",{"_index":1059,"title":{},"body":{"index.html":{}}}],["servercallback",{"_index":306,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["set",{"_index":214,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsModule.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["setdestroymodule",{"_index":612,"title":{},"body":{"classes/TcsModule.html":{}}}],["setdestroymodule(destroymethod",{"_index":655,"title":{},"body":{"classes/TcsModule.html":{}}}],["sets",{"_index":56,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["settick",{"_index":485,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{}}}],["settick(async",{"_index":811,"title":{},"body":{"classes/TcsThread.html":{}}}],["settimeout(resolve",{"_index":825,"title":{},"body":{"classes/TcsThread.html":{}}}],["setup",{"_index":882,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":1109,"title":{},"body":{"license.html":{}}}],["shoulddeletethread",{"_index":856,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["shouldlaunch",{"_index":604,"title":{},"body":{"classes/TcsModule.html":{}}}],["showerrorsanycase",{"_index":1189,"title":{},"body":{"miscellaneous/variables.html":{}}}],["showwarningsanycase",{"_index":1193,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shutting",{"_index":683,"title":{},"body":{"classes/TcsModule.html":{}}}],["side",{"_index":315,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["simple",{"_index":1054,"title":{},"body":{"index.html":{}}}],["software",{"_index":1087,"title":{},"body":{"license.html":{}}}],["sort",{"_index":67,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"index.html":{},"interfaces/sqlColumn.html":{}}}],["sources",{"_index":1040,"title":{},"body":{"index.html":{}}}],["spawn",{"_index":1031,"title":{},"body":{"index.html":{}}}],["specified",{"_index":172,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["splitted",{"_index":643,"title":{},"body":{"classes/TcsModule.html":{}}}],["sql",{"_index":84,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["sqlcolumn",{"_index":177,"title":{"interfaces/sqlColumn.html":{}},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["sqlcolumns",{"_index":266,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["sqlcolumns.join",{"_index":273,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["sqltypes",{"_index":1139,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["src/.../cli_death.ts",{"_index":997,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_vehicle.ts",{"_index":999,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../cli_weapon.ts",{"_index":998,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../mixed_config.ts",{"_index":1167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_main.ts",{"_index":1166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_moduleinfos.ts",{"_index":1165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../srv_databaseconfig.ts",{"_index":1164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/assets/lang/${id}/${language}.json",{"_index":594,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/lang/${tcs_config.lang}.json",{"_index":584,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/mixed_config.ts",{"_index":925,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/assets/srv_databaseconfig.ts",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts",{"_index":286,"title":{},"body":{"classes/TcsBenchmark.html":{},"coverage.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:21",{"_index":294,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:8",{"_index":290,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts",{"_index":302,"title":{},"body":{"classes/TcsCallbackManager.html":{},"coverage.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:10",{"_index":308,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:49",{"_index":321,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:60",{"_index":313,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:8",{"_index":312,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/callbacks/mixed_callbackmanager.ts:9",{"_index":320,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts",{"_index":157,"title":{},"body":{"classes/MongoDatabase.html":{},"coverage.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:2",{"_index":169,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:25",{"_index":178,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:3",{"_index":167,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:35",{"_index":182,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:46",{"_index":194,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:70",{"_index":171,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/mongo/srv_mongo.ts:85",{"_index":190,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts",{"_index":219,"title":{},"body":{"classes/MysqlDatabase.html":{},"coverage.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:107",{"_index":242,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:128",{"_index":229,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:145",{"_index":239,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:2",{"_index":222,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:31",{"_index":224,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:42",{"_index":240,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:62",{"_index":234,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:76",{"_index":230,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/sql/srv_mysql.ts:96",{"_index":237,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["src/core/librairies/database/srv_database.ts",{"_index":417,"title":{},"body":{"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["src/core/librairies/database/srv_database.ts:2",{"_index":425,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:20",{"_index":427,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:25",{"_index":429,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:3",{"_index":424,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:34",{"_index":426,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_database.ts:4",{"_index":423,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["src/core/librairies/database/srv_makerequest.ts",{"_index":25,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"coverage.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:101",{"_index":138,"title":{},"body":{"classes/MakeRequestMongo.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:111",{"_index":144,"title":{},"body":{"classes/MakeRequestMongo.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:131",{"_index":145,"title":{},"body":{"classes/MakeRequestMongo.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:19",{"_index":55,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:2",{"_index":48,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:29",{"_index":62,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:3",{"_index":47,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:38",{"_index":49,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:44",{"_index":52,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:48",{"_index":151,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:5",{"_index":45,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:61",{"_index":154,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:7",{"_index":41,"title":{},"body":{"classes/MakeRequest.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:77",{"_index":152,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/database/srv_makerequest.ts:88",{"_index":153,"title":{},"body":{"classes/MakeRequestSQL.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts",{"_index":439,"title":{},"body":{"classes/TcsEventListener.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:25",{"_index":457,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:33",{"_index":454,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:8",{"_index":452,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:9",{"_index":444,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts",{"_index":462,"title":{},"body":{"classes/TcsEventManager.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:53",{"_index":474,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:61",{"_index":473,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:8",{"_index":475,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:9",{"_index":467,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/inputs/mixed_inputs.ts",{"_index":6,"title":{},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts",{"_index":497,"title":{},"body":{"classes/TcsInputManager.html":{},"coverage.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:10",{"_index":505,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:28",{"_index":508,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:68",{"_index":528,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:77",{"_index":516,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:8",{"_index":507,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:9",{"_index":527,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/inputs/mixed_inputsmanager.ts:93",{"_index":525,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts",{"_index":550,"title":{},"body":{"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:28",{"_index":564,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:44",{"_index":569,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:67",{"_index":575,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:8",{"_index":554,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:98",{"_index":557,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/modules/mixed_module.ts",{"_index":599,"title":{},"body":{"classes/TcsModule.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_module.ts:10",{"_index":621,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:11",{"_index":620,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:115",{"_index":624,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:13",{"_index":623,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:14",{"_index":615,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:160",{"_index":638,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:181",{"_index":648,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:48",{"_index":633,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:56",{"_index":631,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:64",{"_index":656,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:71",{"_index":630,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:9",{"_index":622,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:95",{"_index":634,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts",{"_index":728,"title":{},"body":{"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:50",{"_index":736,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:66",{"_index":733,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:8",{"_index":732,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/threads/mixed_threads.ts",{"_index":765,"title":{},"body":{"classes/TcsThread.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:10",{"_index":787,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:100",{"_index":805,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:11",{"_index":786,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:115",{"_index":801,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:13",{"_index":778,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:132",{"_index":795,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:49",{"_index":799,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:57",{"_index":781,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:74",{"_index":782,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:8",{"_index":785,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:83",{"_index":790,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:9",{"_index":784,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts",{"_index":834,"title":{},"body":{"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:25",{"_index":840,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:46",{"_index":841,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:64",{"_index":844,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:8",{"_index":838,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/mixed_tcs.ts",{"_index":353,"title":{},"body":{"classes/TcsCore.html":{},"coverage.html":{}}}],["src/core/mixed_tcs.ts:10",{"_index":375,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:11",{"_index":379,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:12",{"_index":372,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:13",{"_index":366,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:14",{"_index":368,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:15",{"_index":363,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:51",{"_index":381,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:64",{"_index":389,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:74",{"_index":391,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:8",{"_index":370,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:9",{"_index":377,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/mixed_main.ts",{"_index":960,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/core/events/client/cli_death.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_vehicle.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/client/cli_weapon.ts",{"_index":970,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/core/events/mixed_moduleinfos.ts",{"_index":973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/database/srv_database.ts",{"_index":975,"title":{},"body":{"coverage.html":{},"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:14",{"_index":986,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:22",{"_index":989,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:33",{"_index":988,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:40",{"_index":982,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_database.ts:7",{"_index":984,"title":{},"body":{"interfaces/database.html":{}}}],["src/types/database/srv_sqlcolumn.ts",{"_index":978,"title":{},"body":{"coverage.html":{},"interfaces/sqlColumn.html":{}}}],["src/types/events/mixed_events.ts",{"_index":342,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["src/types/modules/mixed_moduleinfos.ts",{"_index":725,"title":{},"body":{"interfaces/TcsModuleInfos.html":{},"coverage.html":{}}}],["src/types/threads/mixed_threadinterface.ts",{"_index":833,"title":{},"body":{"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["start",{"_index":288,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["started",{"_index":689,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["starting",{"_index":690,"title":{},"body":{"classes/TcsModule.html":{}}}],["starts",{"_index":291,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{}}}],["statements",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["step",{"_index":642,"title":{},"body":{"classes/TcsModule.html":{}}}],["steps",{"_index":907,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["stop",{"_index":289,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["stopped",{"_index":657,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["string",{"_index":12,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{}}}],["style",{"_index":887,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":1105,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1098,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1111,"title":{},"body":{"license.html":{}}}],["such",{"_index":1038,"title":{},"body":{"index.html":{}}}],["super(collection",{"_index":117,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["super(tables",{"_index":81,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["superior",{"_index":639,"title":{},"body":{"classes/TcsModule.html":{}}}],["table",{"_index":179,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"coverage.html":{},"interfaces/database.html":{}}}],["tables",{"_index":30,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"interfaces/database.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":981,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1188,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":350,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{}}}],["targetid",{"_index":344,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcs",{"_index":364,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tcs.callbacks.servercallback.indexof(eventname",{"_index":333,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["tcs.error",{"_index":748,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["tcs.error(`${key",{"_index":586,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["tcs.error(`actionname",{"_index":542,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["tcs.isserversided",{"_index":481,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModule.html":{}}}],["tcs.lang.loadmodulelang(this",{"_index":687,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.threads.removethreadbymodule(this",{"_index":677,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs.warning",{"_index":595,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config",{"_index":927,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcs_config.debugmode",{"_index":410,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config.lang",{"_index":587,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["tcs_config.maxexectimeperthread",{"_index":820,"title":{},"body":{"classes/TcsThread.html":{}}}],["tcs_config.showerrorsanycase",{"_index":413,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.showwarningsanycase",{"_index":415,"title":{},"body":{"classes/TcsCore.html":{}}}],["tcs_config.versionningcheck",{"_index":666,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs_map",{"_index":1034,"title":{},"body":{"index.html":{}}}],["tcsbenchmark",{"_index":285,"title":{"classes/TcsBenchmark.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["tcscallbackmanager",{"_index":301,"title":{"classes/TcsCallbackManager.html":{}},"body":{"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"coverage.html":{}}}],["tcsclientevent",{"_index":341,"title":{"interfaces/TcsClientEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["tcscore",{"_index":352,"title":{"classes/TcsCore.html":{}},"body":{"classes/TcsCore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsdatabasemanager",{"_index":367,"title":{"classes/TcsDatabaseManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"coverage.html":{}}}],["tcsevent",{"_index":343,"title":{"interfaces/TcsEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventlistener",{"_index":438,"title":{"classes/TcsEventListener.html":{}},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventmanager",{"_index":369,"title":{"classes/TcsEventManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventslist",{"_index":349,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["tcseventtarget",{"_index":346,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcseventtarget.client",{"_index":483,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.local",{"_index":482,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.server",{"_index":480,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcsinput",{"_index":16,"title":{"interfaces/TcsInput.html":{}},"body":{"interfaces/ActionInput.html":{},"interfaces/TcsInput.html":{},"coverage.html":{}}}],["tcsinputmanager",{"_index":371,"title":{"classes/TcsInputManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsInputManager.html":{},"coverage.html":{}}}],["tcslanguagemanager",{"_index":374,"title":{"classes/TcsLanguageManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["tcsmodule",{"_index":574,"title":{"classes/TcsModule.html":{}},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsmoduleinfos",{"_index":614,"title":{"interfaces/TcsModuleInfos.html":{}},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsmodulemanager",{"_index":376,"title":{"classes/TcsModuleManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["tcsmoduletypes",{"_index":727,"title":{},"body":{"interfaces/TcsModuleInfos.html":{}}}],["tcsthread",{"_index":764,"title":{"classes/TcsThread.html":{}},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsthread(timer",{"_index":851,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["tcsthreadexec",{"_index":821,"title":{"interfaces/TcsThreadExec.html":{}},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["tcsthreadsmanager",{"_index":378,"title":{"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tells",{"_index":295,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["text",{"_index":1147,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["text(65535",{"_index":1148,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["this.actionhandlers",{"_index":532,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actionhandlers[actionname",{"_index":539,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actionhandlers[actionname].foreach((fnc",{"_index":541,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actionhandlers[actionname].push(handler",{"_index":544,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs",{"_index":530,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.find",{"_index":534,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.actioninputs.push",{"_index":536,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.addconfig(dict",{"_index":598,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.asyncquery(request",{"_index":264,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.asyncquery(sql).then(resolve).catch(reject",{"_index":277,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.callbacks",{"_index":400,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.checkversion",{"_index":668,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.client",{"_index":204,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{}}}],["this.client.connect((err",{"_index":208,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["this.client.db(database_config.databasename",{"_index":210,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["this.client.execute(sql",{"_index":258,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.clientcallback",{"_index":325,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid",{"_index":329,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[requestid](args",{"_index":328,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.clientcallback[this.requestid",{"_index":337,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.con",{"_index":82,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.con.execute(sql",{"_index":108,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.connected",{"_index":432,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.currentdb",{"_index":434,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.database",{"_index":405,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.db",{"_index":124,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["this.db.collection(collection).deletemany(query",{"_index":216,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["this.db.collection(this.tables[0]).find(this.query",{"_index":128,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.debugexec(thread",{"_index":814,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.delay(this.timer",{"_index":812,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.destroymethod",{"_index":670,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.ensuretables(table",{"_index":265,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.eventmanager",{"_index":395,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.eventtype",{"_index":459,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.execs",{"_index":806,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter",{"_index":831,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter((thread",{"_index":828,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.find((thread",{"_index":832,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.foreach((thread",{"_index":813,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.length",{"_index":826,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.push(thread",{"_index":827,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.findmodulebyid(mod",{"_index":747,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.findmodulebyid(newmodule.getid",{"_index":758,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules",{"_index":740,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.find((mod",{"_index":762,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.push(newmodule",{"_index":759,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.getid",{"_index":712,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.handler",{"_index":460,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.handler(data",{"_index":461,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.inputs",{"_index":399,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isserversided",{"_index":402,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isthreadfull",{"_index":808,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.isversionsuperior(current",{"_index":723,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.isversionsuperior(json.version",{"_index":710,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.keyboardactions",{"_index":531,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.keyboardactions[actionname",{"_index":546,"title":{},"body":{"classes/TcsInputManager.html":{}}}],["this.lang",{"_index":397,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{}}}],["this.lang[key",{"_index":585,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.launchmethod",{"_index":669,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.launchmethod(this",{"_index":686,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.limitcount",{"_index":73,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.listeners",{"_index":477,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.listeners.push(handler",{"_index":496,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.loadmodulelang(module",{"_index":597,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.loadreadylist",{"_index":435,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.moduleinfos",{"_index":665,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.dependencies",{"_index":673,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git",{"_index":667,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.git}/main/.tcs.json",{"_index":698,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.moduletype}/${this.moduleinfos.modulename",{"_index":672,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduleinfos.version",{"_index":711,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modulelaunched",{"_index":671,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modules",{"_index":396,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.ondatabasereadylist",{"_index":431,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.ondatabasereadylist.foreach((fnc",{"_index":436,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.ondatabasereadylist.push(fnc",{"_index":437,"title":{},"body":{"classes/TcsDatabaseManager.html":{}}}],["this.orderbylist",{"_index":75,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.printdebug",{"_index":678,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('module",{"_index":688,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('shutting",{"_index":674,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('starting",{"_index":685,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.query",{"_index":71,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.recordtosqlstring",{"_index":275,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.recordtosqlstring(selector",{"_index":276,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["this.recordtosqlstring(this.query",{"_index":104,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.removethreadbymodule(module",{"_index":860,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.requestid",{"_index":339,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.sendevent(event",{"_index":484,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.servercallback",{"_index":326,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[eventname",{"_index":340,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index",{"_index":334,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.servercallback[index](_source",{"_index":335,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["this.shouldlaunch",{"_index":664,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.start",{"_index":299,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.tables",{"_index":70,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.tables.join",{"_index":103,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{}}}],["this.threadid",{"_index":809,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.threads",{"_index":398,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.threadslist",{"_index":846,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.find((thread",{"_index":848,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.foreach((thread",{"_index":854,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.push(currentthread",{"_index":852,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.splice(index",{"_index":858,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.tick",{"_index":810,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.timer",{"_index":807,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.waitingevents",{"_index":476,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.foreach((event",{"_index":486,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.push(event",{"_index":495,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.splice(index",{"_index":494,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["thread",{"_index":779,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["thread.containsthreadbyid(id",{"_index":855,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.exec",{"_index":815,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.getthreadtimer",{"_index":849,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.id",{"_index":829,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.id.split",{"_index":822,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.isthreadfull",{"_index":850,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removemodulethreads(module",{"_index":859,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removethread(id",{"_index":857,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["threadid",{"_index":770,"title":{},"body":{"classes/TcsThread.html":{}}}],["threads",{"_index":360,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["threadslist",{"_index":835,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["throw",{"_index":119,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{}}}],["thrown",{"_index":682,"title":{},"body":{"classes/TcsModule.html":{}}}],["tick",{"_index":771,"title":{},"body":{"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":298,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":292,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["times",{"_index":451,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["timestamp",{"_index":1162,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["tinytext",{"_index":1145,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["tinytext(255",{"_index":1146,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["took",{"_index":823,"title":{},"body":{"classes/TcsThread.html":{}}}],["tools",{"_index":1062,"title":{},"body":{"index.html":{}}}],["tort",{"_index":1132,"title":{},"body":{"license.html":{}}}],["transform",{"_index":88,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["transformed",{"_index":93,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["translation",{"_index":561,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["translations",{"_index":558,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["transmitted",{"_index":324,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["triggered",{"_index":447,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggers",{"_index":455,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggerservercallback",{"_index":307,"title":{},"body":{"classes/TcsCallbackManager.html":{}}}],["true",{"_index":207,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":401,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["trying",{"_index":596,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["ts",{"_index":68,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"contributing.html":{}}}],["tslint",{"_index":915,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":13,"title":{},"body":{"interfaces/ActionInput.html":{},"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsBenchmark.html":{},"classes/TcsCallbackManager.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"interfaces/TcsInput.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"interfaces/database.html":{},"interfaces/sqlColumn.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":97,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{}}}],["types",{"_index":1140,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["typescript",{"_index":916,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["undefined",{"_index":404,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{}}}],["up",{"_index":628,"title":{},"body":{"classes/TcsModule.html":{}}}],["update",{"_index":164,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"contributing.html":{},"interfaces/database.html":{}}}],["update(collection",{"_index":192,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["update(table",{"_index":241,"title":{},"body":{"classes/MysqlDatabase.html":{},"interfaces/database.html":{}}}],["updatemany(selector",{"_index":213,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["use",{"_index":886,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":472,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{}}}],["user",{"_index":248,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["username",{"_index":1174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["uses",{"_index":899,"title":{},"body":{"contributing.html":{}}}],["useunifiedtopology",{"_index":206,"title":{},"body":{"classes/MongoDatabase.html":{}}}],["using",{"_index":883,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["value",{"_index":87,"title":{},"body":{"classes/MakeRequest.html":{},"classes/MakeRequestMongo.html":{},"classes/MakeRequestSQL.html":{},"classes/MysqlDatabase.html":{},"classes/TcsCallbackManager.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsInputManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/database.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":174,"title":{},"body":{"classes/MongoDatabase.html":{},"classes/MysqlDatabase.html":{},"classes/TcsLanguageManager.html":{},"interfaces/database.html":{}}}],["values.join",{"_index":284,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["values.push(`${value",{"_index":282,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["values.push(`'${value",{"_index":281,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["varbinary",{"_index":1155,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["varbinary(255",{"_index":1156,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["varchar",{"_index":1143,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["varchar(255",{"_index":1144,"title":{},"body":{"interfaces/sqlColumn.html":{}}}],["variable",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1163,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vehiclethreadchecker",{"_index":969,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["vehiclethreadchecker(module",{"_index":1006,"title":{},"body":{"miscellaneous/functions.html":{}}}],["verify",{"_index":1049,"title":{},"body":{"index.html":{}}}],["version",{"_index":626,"title":{},"body":{"classes/TcsModule.html":{},"interfaces/TcsModuleInfos.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["versionningcheck",{"_index":1195,"title":{},"body":{"miscellaneous/variables.html":{}}}],["versions",{"_index":1048,"title":{},"body":{"index.html":{}}}],["very",{"_index":1053,"title":{},"body":{"index.html":{}}}],["void",{"_index":387,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsDatabaseManager.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"interfaces/database.html":{}}}],["wait",{"_index":783,"title":{},"body":{"classes/TcsThread.html":{}}}],["waitforconnections",{"_index":251,"title":{},"body":{"classes/MysqlDatabase.html":{}}}],["waiting",{"_index":458,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["waitingevents",{"_index":466,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["warning",{"_index":362,"title":{},"body":{"classes/TcsCore.html":{}}}],["warning(warning",{"_index":390,"title":{},"body":{"classes/TcsCore.html":{}}}],["warnings",{"_index":1194,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warranties",{"_index":1119,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1114,"title":{},"body":{"license.html":{}}}],["weaponarray",{"_index":1004,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponhash",{"_index":1003,"title":{},"body":{"miscellaneous/functions.html":{}}}],["weaponthreadchecker",{"_index":972,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["weaponthreadchecker(module",{"_index":1005,"title":{},"body":{"miscellaneous/functions.html":{}}}],["whether",{"_index":517,"title":{},"body":{"classes/TcsInputManager.html":{},"license.html":{}}}],["without",{"_index":1090,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":654,"title":{},"body":{"classes/TcsModule.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActionInput.html":{"url":"interfaces/ActionInput.html","title":"interface - ActionInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        actionName\n                                \n                                \n                                        inputController\n                                \n                                \n                                        inputKeyboard\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        actionName\n                                    \n                                \n                                \n                                    \n                                        actionName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputController\n                                    \n                                \n                                \n                                    \n                                        inputController:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputKeyboard\n                                    \n                                \n                                \n                                    \n                                        inputKeyboard:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequest.html":{"url":"classes/MakeRequest.html","title":"class - MakeRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_MakeRequest.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                limitCount\n                            \n                            \n                                    Protected\n                                orderByList\n                            \n                            \n                                    Protected\n                                query\n                            \n                            \n                                    Protected\n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                execute\n                            \n                            \n                                    Abstract\n                                executeOne\n                            \n                            \n                                limit\n                            \n                            \n                                orderBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tables: String[], query: Record)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_MakeRequest.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tables\n                                                  \n                                                        \n                                                                    String[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            limitCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            orderByList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:2\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:38\n                \n            \n\n\n            \n                \n                    Execute the query\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns the query results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:44\n                \n            \n\n\n            \n                \n                    Execute the query but returns only one result\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns one result from the query\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            limit\n                        \n                        \n                    \n                \n            \n            \n                \nlimit(count: Number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:19\n                \n            \n\n\n            \n                \n                    Sets the results count limit to the current request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Results count\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderBy\n                        \n                        \n                    \n                \n            \n            \n                \norderBy(list: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:29\n                \n            \n\n\n            \n                \n                    ONLY FOR MONGO | Sets the current order to give to the results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mongo sort request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        abstract class MakeRequest {\n\tprotected tables: String[];\n\tprotected query: Record;\n\t//@ts-ignore\n\tprotected limitCount: Number;\n\t//@ts-ignore\n\tprotected orderByList: Object;\n\n\tconstructor(tables: String[], query: Record) {\n\t\tthis.tables = tables;\n\t\tthis.query = query;\n\t}\n\n\t/**\n\t * Sets the results count limit to the current request\n\t * @param count Results count\n\t * @returns Returns the current request\n\t */\n\tlimit(count: Number): MakeRequest {\n\t\tthis.limitCount = count;\n\t\treturn this;\n\t}\n\n\t/**\n\t * ONLY FOR MONGO | Sets the current order to give to the results\n\t * @param list Mongo sort request object\n\t * @returns Returns the current request\n\t */\n\torderBy(list: Object): MakeRequest {\n\t\tthis.orderByList = list;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Execute the query\n\t * @returns Returns the query results\n\t */\n\tabstract execute(): Promise;\n\n\t/**\n\t * Execute the query but returns only one result\n\t * @returns Returns one result from the query\n\t */\n\tabstract executeOne(): Promise;\n}\n\nclass MakeRequestSQL extends MakeRequest {\n\tprivate con: any;\n\tconstructor(con: any, tables: String[], query: Record) {\n\t\tsuper(tables, query);\n\n\t\tthis.con = con;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\tasync execute() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} ${\n\t\t\tthis.limitCount > 0 ? `LIMIT ${this.limitCount}` : ''\n\t\t};`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\t\treturn result;\n\t}\n\n\tasync executeOne() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} LIMIT 1;`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\n\t\tif (result.length == 0) return null;\n\t\treturn result[0];\n\t}\n}\n\nclass MakeRequestMongo extends MakeRequest {\n\tprivate db: any;\n\tconstructor(db: any, collection: String[], query: Record) {\n\t\tsuper(collection, query);\n\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during get request.');\n\n\t\tthis.db = db;\n\t}\n\n\texecute(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet currentRequest = this.db.collection(this.tables[0]).find(this.query);\n\n\t\t\tif (this.limitCount) {\n\t\t\t\tcurrentRequest = currentRequest.limit(this.limitCount);\n\t\t\t}\n\n\t\t\tif (this.orderByList) {\n\t\t\t\tcurrentRequest = currentRequest.sort(this.orderByList);\n\t\t\t}\n\n\t\t\tcurrentRequest.toArray((err: Error, result: any[]) => {\n\t\t\t\tif (err) reject(err);\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\texecuteOne(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(this.tables[0])\n\t\t\t\t.findOne(this.query, (err: Error, result: Object) => {\n\t\t\t\t\tif (err) reject(err);\n\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequestMongo.html":{"url":"classes/MakeRequestMongo.html","title":"class - MakeRequestMongo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequestMongo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_MakeRequest.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MakeRequest\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Protected\n                                limitCount\n                            \n                            \n                                    Protected\n                                orderByList\n                            \n                            \n                                    Protected\n                                query\n                            \n                            \n                                    Protected\n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                execute\n                            \n                            \n                                executeOne\n                            \n                            \n                                    Abstract\n                                execute\n                            \n                            \n                                    Abstract\n                                executeOne\n                            \n                            \n                                limit\n                            \n                            \n                                orderBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(db: any, collection: String[], query: Record)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_MakeRequest.ts:101\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        db\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collection\n                                                  \n                                                        \n                                                                    String[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:101\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            limitCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            orderByList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:2\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \nexecute()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \nexecuteOne()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:131\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:38\n\n                \n            \n\n\n            \n                \n                    Execute the query\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns the query results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:44\n\n                \n            \n\n\n            \n                \n                    Execute the query but returns only one result\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns one result from the query\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            limit\n                        \n                        \n                    \n                \n            \n            \n                \nlimit(count: Number)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:19\n\n                \n            \n\n\n            \n                \n                    Sets the results count limit to the current request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Results count\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderBy\n                        \n                        \n                    \n                \n            \n            \n                \norderBy(list: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:29\n\n                \n            \n\n\n            \n                \n                    ONLY FOR MONGO | Sets the current order to give to the results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mongo sort request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        abstract class MakeRequest {\n\tprotected tables: String[];\n\tprotected query: Record;\n\t//@ts-ignore\n\tprotected limitCount: Number;\n\t//@ts-ignore\n\tprotected orderByList: Object;\n\n\tconstructor(tables: String[], query: Record) {\n\t\tthis.tables = tables;\n\t\tthis.query = query;\n\t}\n\n\t/**\n\t * Sets the results count limit to the current request\n\t * @param count Results count\n\t * @returns Returns the current request\n\t */\n\tlimit(count: Number): MakeRequest {\n\t\tthis.limitCount = count;\n\t\treturn this;\n\t}\n\n\t/**\n\t * ONLY FOR MONGO | Sets the current order to give to the results\n\t * @param list Mongo sort request object\n\t * @returns Returns the current request\n\t */\n\torderBy(list: Object): MakeRequest {\n\t\tthis.orderByList = list;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Execute the query\n\t * @returns Returns the query results\n\t */\n\tabstract execute(): Promise;\n\n\t/**\n\t * Execute the query but returns only one result\n\t * @returns Returns one result from the query\n\t */\n\tabstract executeOne(): Promise;\n}\n\nclass MakeRequestSQL extends MakeRequest {\n\tprivate con: any;\n\tconstructor(con: any, tables: String[], query: Record) {\n\t\tsuper(tables, query);\n\n\t\tthis.con = con;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\tasync execute() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} ${\n\t\t\tthis.limitCount > 0 ? `LIMIT ${this.limitCount}` : ''\n\t\t};`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\t\treturn result;\n\t}\n\n\tasync executeOne() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} LIMIT 1;`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\n\t\tif (result.length == 0) return null;\n\t\treturn result[0];\n\t}\n}\n\nclass MakeRequestMongo extends MakeRequest {\n\tprivate db: any;\n\tconstructor(db: any, collection: String[], query: Record) {\n\t\tsuper(collection, query);\n\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during get request.');\n\n\t\tthis.db = db;\n\t}\n\n\texecute(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet currentRequest = this.db.collection(this.tables[0]).find(this.query);\n\n\t\t\tif (this.limitCount) {\n\t\t\t\tcurrentRequest = currentRequest.limit(this.limitCount);\n\t\t\t}\n\n\t\t\tif (this.orderByList) {\n\t\t\t\tcurrentRequest = currentRequest.sort(this.orderByList);\n\t\t\t}\n\n\t\t\tcurrentRequest.toArray((err: Error, result: any[]) => {\n\t\t\t\tif (err) reject(err);\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\texecuteOne(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(this.tables[0])\n\t\t\t\t.findOne(this.query, (err: Error, result: Object) => {\n\t\t\t\t\tif (err) reject(err);\n\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MakeRequestSQL.html":{"url":"classes/MakeRequestSQL.html","title":"class - MakeRequestSQL","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MakeRequestSQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_MakeRequest.ts\n        \n\n\n            \n                Extends\n            \n            \n                        MakeRequest\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                con\n                            \n                            \n                                    Protected\n                                limitCount\n                            \n                            \n                                    Protected\n                                orderByList\n                            \n                            \n                                    Protected\n                                query\n                            \n                            \n                                    Protected\n                                tables\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                execute\n                            \n                            \n                                    Async\n                                executeOne\n                            \n                            \n                                    Private\n                                recordToSqlString\n                            \n                            \n                                    Abstract\n                                execute\n                            \n                            \n                                    Abstract\n                                executeOne\n                            \n                            \n                                limit\n                            \n                            \n                                orderBy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(con: any, tables: String[], query: Record)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_MakeRequest.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        con\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        tables\n                                                  \n                                                        \n                                                                    String[]\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        query\n                                                  \n                                                        \n                                                                    Record\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            con\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_MakeRequest.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            limitCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Number\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:5\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            orderByList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Object\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            query\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:3\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tables\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     String[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from         MakeRequest\n\n                                \n                            \n                        \n                            \n                                    Defined in         MakeRequest:2\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            recordToSqlString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recordToSqlString(record: Record, sep: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_MakeRequest.ts:61\n                \n            \n\n\n            \n                \n                    Converts a record to a SQL equation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        List of key / value to transform in sql equation\n\n                                    \n                                \n                                \n                                    sep\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ' '\n                                    \n\n                                    \n                                        Separator between each equation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        The record transformed in a SQL equation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            execute\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:38\n\n                \n            \n\n\n            \n                \n                    Execute the query\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns the query results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Abstract\n                            executeOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeOne()\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:44\n\n                \n            \n\n\n            \n                \n                    Execute the query but returns only one result\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        Returns one result from the query\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            limit\n                        \n                        \n                    \n                \n            \n            \n                \nlimit(count: Number)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:19\n\n                \n            \n\n\n            \n                \n                    Sets the results count limit to the current request\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                Number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Results count\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            orderBy\n                        \n                        \n                    \n                \n            \n            \n                \norderBy(list: Object)\n                \n            \n\n\n            \n                \n                    Inherited from         MakeRequest\n\n                \n            \n            \n                \n                        Defined in         MakeRequest:29\n\n                \n            \n\n\n            \n                \n                    ONLY FOR MONGO | Sets the current order to give to the results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mongo sort request object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        Returns the current request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        abstract class MakeRequest {\n\tprotected tables: String[];\n\tprotected query: Record;\n\t//@ts-ignore\n\tprotected limitCount: Number;\n\t//@ts-ignore\n\tprotected orderByList: Object;\n\n\tconstructor(tables: String[], query: Record) {\n\t\tthis.tables = tables;\n\t\tthis.query = query;\n\t}\n\n\t/**\n\t * Sets the results count limit to the current request\n\t * @param count Results count\n\t * @returns Returns the current request\n\t */\n\tlimit(count: Number): MakeRequest {\n\t\tthis.limitCount = count;\n\t\treturn this;\n\t}\n\n\t/**\n\t * ONLY FOR MONGO | Sets the current order to give to the results\n\t * @param list Mongo sort request object\n\t * @returns Returns the current request\n\t */\n\torderBy(list: Object): MakeRequest {\n\t\tthis.orderByList = list;\n\t\treturn this;\n\t}\n\n\t/**\n\t * Execute the query\n\t * @returns Returns the query results\n\t */\n\tabstract execute(): Promise;\n\n\t/**\n\t * Execute the query but returns only one result\n\t * @returns Returns one result from the query\n\t */\n\tabstract executeOne(): Promise;\n}\n\nclass MakeRequestSQL extends MakeRequest {\n\tprivate con: any;\n\tconstructor(con: any, tables: String[], query: Record) {\n\t\tsuper(tables, query);\n\n\t\tthis.con = con;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\tasync execute() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} ${\n\t\t\tthis.limitCount > 0 ? `LIMIT ${this.limitCount}` : ''\n\t\t};`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\t\treturn result;\n\t}\n\n\tasync executeOne() {\n\t\tconst sql = `SELECT * FROM ${this.tables.join(\n\t\t\t',',\n\t\t)} WHERE ${this.recordToSqlString(this.query)} LIMIT 1;`;\n\n\t\tconst [result, _] = await this.con.execute(sql);\n\n\t\tif (result.length == 0) return null;\n\t\treturn result[0];\n\t}\n}\n\nclass MakeRequestMongo extends MakeRequest {\n\tprivate db: any;\n\tconstructor(db: any, collection: String[], query: Record) {\n\t\tsuper(collection, query);\n\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during get request.');\n\n\t\tthis.db = db;\n\t}\n\n\texecute(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet currentRequest = this.db.collection(this.tables[0]).find(this.query);\n\n\t\t\tif (this.limitCount) {\n\t\t\t\tcurrentRequest = currentRequest.limit(this.limitCount);\n\t\t\t}\n\n\t\t\tif (this.orderByList) {\n\t\t\t\tcurrentRequest = currentRequest.sort(this.orderByList);\n\t\t\t}\n\n\t\t\tcurrentRequest.toArray((err: Error, result: any[]) => {\n\t\t\t\tif (err) reject(err);\n\n\t\t\t\tresolve(result);\n\t\t\t});\n\t\t});\n\t}\n\n\texecuteOne(): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(this.tables[0])\n\t\t\t\t.findOne(this.query, (err: Error, result: Object) => {\n\t\t\t\t\tif (err) reject(err);\n\n\t\t\t\t\tresolve(result);\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MongoDatabase.html":{"url":"classes/MongoDatabase.html","title":"class - MongoDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MongoDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/mongo/srv_Mongo.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            database\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                    Async\n                                ensureColumns\n                            \n                            \n                                get\n                            \n                            \n                                insert\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(onConnectionDone: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/mongo/srv_Mongo.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onConnectionDone\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:3\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(collection: string, query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:70\n                \n            \n\n\n            \n                \n                    Delete the specified documents of the collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to delete the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ensureColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureColumns(table: string, columns: sqlColumn[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    columns\n                                    \n                                                sqlColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(collection: string[], selector: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:35\n                \n            \n\n\n            \n                \n                    Create a new db request that gets the data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to get the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        A make request object corresponding to the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(collection: string, newDocument: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:85\n                \n            \n\n\n            \n                \n                    Insert the specified document in the collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to insert the document to\n\n                                    \n                                \n                                \n                                    newDocument\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new document to insert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(collection: string, selector: Record, newValues: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/mongo/srv_Mongo.ts:46\n                \n            \n\n\n            \n                \n                    Update the specified documents of the collection\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    collection\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the collection to update the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                                \n                                    newValues\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Values of the found documents to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class MongoDatabase implements database {\n\tprivate client;\n\tprivate db: any;\n\n\tconstructor(onConnectionDone: Function) {\n\t\tconst mongoClient = require('mongodb').MongoClient;\n\t\tconst connectionUrl = `mongodb://${\n\t\t\tDATABASE_CONFIG.username\n\t\t}:${encodeURIComponent(DATABASE_CONFIG.password)}@${\n\t\t\tDATABASE_CONFIG.address\n\t\t}:${DATABASE_CONFIG.port}/`;\n\n\t\tthis.client = new mongoClient(connectionUrl, { useUnifiedTopology: true });\n\t\tthis.client.connect((err: Error) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.db = this.client.db(DATABASE_CONFIG.databaseName);\n\t\t\tonConnectionDone();\n\t\t});\n\t}\n\n\tasync ensureColumns(table: string, columns: sqlColumn[]) {\n\t\treturn;\n\t}\n\n\t/**\n\t * Create a new db request that gets the data\n\t * @param collection Name of the collection to get the values from\n\t * @param selector Query of the current request\n\t * @returns A make request object corresponding to the current request\n\t */\n\tget(collection: string[], selector: Record): MakeRequest {\n\t\treturn new MakeRequestMongo(this.db, collection, selector);\n\t}\n\n\t/**\n\t * Update the specified documents of the collection\n\t * @param collection Name of the collection to update the values from\n\t * @param selector Query of the current request\n\t * @param newValues Values of the found documents to update\n\t * @returns A promise from the request\n\t */\n\tupdate(\n\t\tcollection: string,\n\t\tselector: Record,\n\t\tnewValues: Record,\n\t): Promise {\n\t\tif (collection.length == 0)\n\t\t\tthrow new Error('No collection designed during update request.');\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(collection)\n\t\t\t\t.updateMany(selector, { $set: newValues }, (err: Error, _: any) => {\n\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Delete the specified documents of the collection\n\t * @param collection Name of the collection to delete the values from\n\t * @param query Query of the current request\n\t * @returns A promise from the request\n\t */\n\tdelete(collection: string, query: Record): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db.collection(collection).deleteMany(query, (err: Error, _: any) => {\n\t\t\t\tif (err) reject(err);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Insert the specified document in the collection\n\t * @param collection Name of the collection to insert the document to\n\t * @param newDocument The new document to insert\n\t * @returns A promise from the request\n\t */\n\tinsert(collection: string, newDocument: Record): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tthis.db\n\t\t\t\t.collection(collection)\n\t\t\t\t.insertOne(newDocument, (err: Error, _: any) => {\n\t\t\t\t\tif (err) reject(err);\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MysqlDatabase.html":{"url":"classes/MysqlDatabase.html","title":"class - MysqlDatabase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MysqlDatabase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/sql/srv_Mysql.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            database\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                client\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                asyncQuery\n                            \n                            \n                                delete\n                            \n                            \n                                    Async\n                                ensureColumns\n                            \n                            \n                                    Private\n                                    Async\n                                ensureTables\n                            \n                            \n                                get\n                            \n                            \n                                insert\n                            \n                            \n                                    Private\n                                recordToSqlString\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(onConnectionDone: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/sql/srv_Mysql.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        onConnectionDone\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:2\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            asyncQuery\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    asyncQuery(sql: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:31\n                \n            \n\n\n            \n                \n                    Execute the specified query and returns it's result\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sql\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Sql query to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        A promise resolving the query's result\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(table: string, query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:128\n                \n            \n\n\n            \n                \n                    Delete the specified documents of the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to delete the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            ensureColumns\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureColumns(table: string, columns: sqlColumn[])\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:76\n                \n            \n\n\n            \n                \n                    Will create the table with the specified columns if they don't exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to create the columns in\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                                sqlColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of the columns, specified by their name and values type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            ensureTables\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ensureTables(table: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:62\n                \n            \n\n\n            \n                \n                    Will create the table if it doesn't exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to create if it doesn't exist\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(table: string[], selector: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:96\n                \n            \n\n\n            \n                \n                    Create a new db request that gets the data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to get the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        A make request object corresponding to the current request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(table: string, newDocument: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:145\n                \n            \n\n\n            \n                \n                    Insert the specified document in the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to insert the document to\n\n                                    \n                                \n                                \n                                    newDocument\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new document to insert\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            recordToSqlString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    recordToSqlString(record: Record, sep: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:42\n                \n            \n\n\n            \n                \n                    Converts a record to a SQL equation\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    record\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        List of key / value to transform in sql equation\n\n                                    \n                                \n                                \n                                    sep\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ' '\n                                    \n\n                                    \n                                        Separator between each equation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        The record transformed in a SQL equation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(table: string, selector: Record, newValues: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/sql/srv_Mysql.ts:107\n                \n            \n\n\n            \n                \n                    Update the specified documents of the table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Name of the table to update the values from\n\n                                    \n                                \n                                \n                                    selector\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Query of the current request\n\n                                    \n                                \n                                \n                                    newValues\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Values of the found documents to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise from the request\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class MysqlDatabase implements database {\n\tprivate client: any;\n\n\tconstructor(onConnectionDone: Function) {\n\t\tconst mysql = require('mysql2');\n\t\tconst connectionParameters = {\n\t\t\thost: DATABASE_CONFIG.address,\n\t\t\tport: DATABASE_CONFIG.port,\n\t\t\tuser: DATABASE_CONFIG.username,\n\t\t\tpassword: encodeURIComponent(DATABASE_CONFIG.password),\n\t\t\tdatabase: DATABASE_CONFIG.databaseName,\n\n\t\t\twaitForConnections: true,\n\t\t\tconnectionLimit: 20,\n\t\t};\n\n\t\tconst connectToDb = async () => {\n\t\t\tconst pool = await mysql.createPool(connectionParameters);\n\t\t\tthis.client = pool.promise();\n\t\t\tonConnectionDone();\n\t\t};\n\n\t\tconnectToDb();\n\t}\n\n\t/**\n\t * Execute the specified query and returns it's result\n\t * @param sql Sql query to execute\n\t * @returns A promise resolving the query's result\n\t */\n\tprivate async asyncQuery(sql: string) {\n\t\tconst [result, _] = await this.client.execute(sql);\n\t\treturn result;\n\t}\n\n\t/**\n\t * Converts a record to a SQL equation\n\t * @param record List of key / value to transform in sql equation\n\t * @param sep Separator between each equation\n\t * @returns The record transformed in a SQL equation\n\t */\n\tprivate recordToSqlString(record: Record, sep = ' '): String {\n\t\tlet result: string[] = [];\n\n\t\tfor (const key in record) {\n\t\t\tconst value = record[key];\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tresult.push(`${key}='${value}'`);\n\t\t\t} else {\n\t\t\t\tresult.push(`${key}=${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn result.join(sep);\n\t}\n\n\t/**\n\t * Will create the table if it doesn't exist\n\t * @param table Name of the table to create if it doesn't exist\n\t */\n\tprivate async ensureTables(table: string) {\n\t\tif (table) {\n\t\t\tconst request = `CREATE TABLE IF NOT EXISTS \\`${table}\\` (\\`id\\` int(11) NOT NULL auto_increment, PRIMARY KEY  (\\`id\\`));`;\n\n\t\t\tawait this.asyncQuery(request);\n\t\t}\n\t\treturn;\n\t}\n\n\t/**\n\t * Will create the table with the specified columns if they don't exist\n\t * @param table Table to create the columns in\n\t * @param columns List of the columns, specified by their name and values type\n\t */\n\tasync ensureColumns(table: string, columns: sqlColumn[]) {\n\t\tawait this.ensureTables(table);\n\t\tconst sqlColumns = columns.map(\n\t\t\t(column) => `${column.column} ${column.type}`,\n\t\t);\n\t\tconst request = `ALTER TABLE ${table} ADD COLUMN IF NOT EXISTS (${sqlColumns.join(\n\t\t\t', ',\n\t\t)});`;\n\n\t\tawait this.asyncQuery(request);\n\n\t\treturn;\n\t}\n\n\t/**\n\t * Create a new db request that gets the data\n\t * @param table Name of the table to get the values from\n\t * @param selector Query of the current request\n\t * @returns A make request object corresponding to the current request\n\t */\n\tget(table: string[], selector: Record): MakeRequest {\n\t\treturn new MakeRequestSQL(this.client, table, selector);\n\t}\n\n\t/**\n\t * Update the specified documents of the table\n\t * @param table Name of the table to update the values from\n\t * @param selector Query of the current request\n\t * @param newValues Values of the found documents to update\n\t * @returns A promise from the request\n\t */\n\tupdate(\n\t\ttable: string,\n\t\tselector: Record,\n\t\tnewValues: Record,\n\t): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sql = `UPDATE ${table} SET ${this.recordToSqlString(\n\t\t\t\tnewValues,\n\t\t\t\t', ',\n\t\t\t)} WHERE ${this.recordToSqlString(selector, ' AND ')};`;\n\n\t\t\tthis.asyncQuery(sql).then(resolve).catch(reject);\n\t\t});\n\t}\n\n\t/**\n\t * Delete the specified documents of the table\n\t * @param table Name of the table to delete the values from\n\t * @param query Query of the current request\n\t * @returns A promise from the request\n\t */\n\tdelete(table: string, query: Record): Promise {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sql = `DELETE FROM ${table} WHERE ${this.recordToSqlString(\n\t\t\t\tquery,\n\t\t\t\t', ',\n\t\t\t)};`;\n\n\t\t\tthis.asyncQuery(sql).then(resolve).catch(reject);\n\t\t});\n\t}\n\n\t/**\n\t * Insert the specified document in the table\n\t * @param table Name of the table to insert the document to\n\t * @param newDocument The new document to insert\n\t * @returns A promise from the request\n\t */\n\tinsert(table: string, newDocument: Record): Promise {\n\t\tlet keys: string[] = [];\n\t\tlet values: string[] = [];\n\n\t\tfor (const key in newDocument) {\n\t\t\tconst value = newDocument[key];\n\n\t\t\tkeys.push(key);\n\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tvalues.push(`'${value}'`);\n\t\t\t} else {\n\t\t\t\tvalues.push(`${value}`);\n\t\t\t}\n\t\t}\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst sql = `INSERT INTO ${table} (${keys.join(\n\t\t\t\t',',\n\t\t\t)}) VALUES (${values.join(',')});`;\n\n\t\t\tthis.asyncQuery(sql).then(resolve).catch(reject);\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsBenchmark.html":{"url":"classes/TcsBenchmark.html","title":"class - TcsBenchmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsBenchmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/benchmark/mixed_benchmark.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n                \n                    \n                            Starts the timer for the benchmark\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:21\n                \n            \n\n\n            \n                \n                    Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time difference in ms\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsBenchmark {\n\tprivate start: number;\n\n\t/**\n\t * Starts the timer for the benchmark\n\t */\n\tconstructor() {\n\t\tthis.start = GetGameTimer();\n\t}\n\n\t/**\n\t * Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\t * @returns The time difference in ms\n\t */\n\tstop() {\n\t\tconst difference = GetGameTimer() - this.start;\n\t\treturn difference;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCallbackManager.html":{"url":"classes/TcsCallbackManager.html","title":"class - TcsCallbackManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCallbackManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/callbacks/mixed_callbackManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                ClientCallBack\n                            \n                            \n                                RegisterServerCallback\n                            \n                            \n                                    Private\n                                requestId\n                            \n                            \n                                    Private\n                                ServerCallBack\n                            \n                            \n                                TriggerServerCallback\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize the callbacks manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ClientCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            RegisterServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:60\n                            \n                        \n\n                \n                    \n                        Server side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the client side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            ServerCallBack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TriggerServerCallback\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/callbacks/mixed_callbackManager.ts:49\n                            \n                        \n\n                \n                    \n                        Client side function\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        eventName\n                                                        \n                                                                The name of the event to call on the server side\n\n                                                        \n                                                \n                                                \n                                                        cb\n                                                        \n                                                                return function\n\n                                                        \n                                                \n                                                \n                                                        args\n                                                        \n                                                                arguments to be transmitted on the server side\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsCallbackManager {\n\tprivate ClientCallBack: any[];\n\tprivate ServerCallBack: any[];\n\tprivate requestId = 0;\n\n\t/**\n\t * Initialize the callbacks manager\n\t */\n\tconstructor() {\n\t\tthis.ClientCallBack = [];\n\t\tthis.ServerCallBack = [];\n\n\t\t/**\n\t\t * Client side event\n\t\t */\n\t\tonNet('callbacks:clientEvent', (requestId: number, args: any[]) => {\n\t\t\tthis.ClientCallBack[requestId](args);\n\t\t\tthis.ClientCallBack[requestId] = null;\n\t\t});\n\n\t\t/**\n\t\t * Server side event\n\t\t */\n\t\tonNet(\n\t\t\t'callbacks:serverEvent',\n\t\t\t(eventName: string, requestId: number, args: any) => {\n\t\t\t\tconst _source = source;\n\t\t\t\tconst index = TCS.callbacks.ServerCallBack.indexOf(eventName);\n\t\t\t\tif (this.ServerCallBack[index] != null) {\n\t\t\t\t\tthis.ServerCallBack[index](_source, args);\n\t\t\t\t}\n\t\t\t\temitNet('callbacks:clientEvent', _source, requestId, args);\n\t\t\t},\n\t\t);\n\t}\n\n\t/**\n\t * Client side function\n\t * @param eventName The name of the event to call on the server side\n\t * @param cb return function\n\t * @param args arguments to be transmitted on the server side\n\t */\n\tTriggerServerCallback = (eventName: string, cb: Function, args: any) => {\n\t\tthis.ClientCallBack[this.requestId] = cb;\n\t\temitNet('callbacks:serverEvent', eventName, this.requestId, args);\n\t\tthis.requestId++;\n\t};\n\n\t/**\n\t * Server side function\n\t * @param eventName The name of the event to call on the client side\n\t * @param cb return function\n\t */\n\tRegisterServerCallback = (eventName: string, cb: Function) => {\n\t\t//@ts-ignore\n\t\tthis.ServerCallBack[eventName] = cb;\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsClientEvent.html":{"url":"interfaces/TcsClientEvent.html","title":"interface - TcsClientEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsClientEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TcsEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\nexports('TcsEventTarget', () => TcsEventTarget);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCore.html":{"url":"classes/TcsCore.html","title":"class - TcsCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mixed_tcs.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                callbacks\n                            \n                            \n                                    Readonly\n                                database\n                            \n                            \n                                    Readonly\n                                eventManager\n                            \n                            \n                                    Readonly\n                                inputs\n                            \n                            \n                                    Readonly\n                                isServerSided\n                            \n                            \n                                    Readonly\n                                lang\n                            \n                            \n                                    Readonly\n                                modules\n                            \n                            \n                                    Readonly\n                                threads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                warning\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/mixed_tcs.ts:15\n                            \n                        \n\n                \n                    \n                            Initialize the TCS core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            callbacks\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCallbackManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            database\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsDatabaseManager | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            eventManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            inputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsInputManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            isServerSided\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsLanguageManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            threads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThreadsManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:51\n                \n            \n\n\n            \n                \n                    Display the specified message if the server is in debug mode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            error\n                        \n                        \n                    \n                \n            \n            \n                \nerror(error: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:64\n                \n            \n\n\n            \n                \n                    Display the specified error in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Error to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            warning\n                        \n                        \n                    \n                \n            \n            \n                \nwarning(warning: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:74\n                \n            \n\n\n            \n                \n                    Display the specified warning in the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    warning\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Warning to print in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsCore {\n\treadonly eventManager: TcsEventManager;\n\treadonly modules: TcsModuleManager;\n\treadonly lang: TcsLanguageManager;\n\treadonly threads: TcsThreadsManager;\n\treadonly inputs: TcsInputManager;\n\treadonly callbacks: TcsCallbackManager;\n\treadonly database: TcsDatabaseManager | null = null;\n\treadonly isServerSided: boolean;\n\n\t/**\n\t * Initialize the TCS core\n\t */\n\tconstructor() {\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.YELLOW}Initializing...`,\n\t\t);\n\t\tthis.eventManager = new TcsEventManager();\n\t\tthis.modules = new TcsModuleManager();\n\t\tthis.lang = new TcsLanguageManager();\n\t\tthis.threads = new TcsThreadsManager();\n\t\tthis.inputs = new TcsInputManager();\n\t\tthis.callbacks = new TcsCallbackManager();\n\n\t\ttry {\n\t\t\t//@ts-ignore\n\t\t\tthis.isServerSided = ScheduleResourceTick != undefined;\n\n\t\t\tif (this.isServerSided) {\n\t\t\t\tthis.database = new TcsDatabaseManager();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tthis.isServerSided = false;\n\t\t}\n\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.GREEN}Ready to go !`,\n\t\t);\n\t}\n\n\t/**\n\t * Display the specified message if the server is in debug mode\n\t * @param message Message to print in the console\n\t */\n\tdebug(message: String) {\n\t\tif (TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE}[debug] ${message}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified error in the console\n\t * @param error Error to print in the console\n\t */\n\terror(error: String) {\n\t\tif (TCS_CONFIG.showErrorsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(`${ConsoleColors.RED}[ERROR] ${error}`, ConsoleColors.RESET);\n\t\t}\n\t}\n\n\t/**\n\t * Display the specified warning in the console\n\t * @param warning Warning to print in the console\n\t */\n\twarning(warning: String) {\n\t\tif (TCS_CONFIG.showWarningsAnyCase || TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.YELLOW}[WARNING] ${warning}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsDatabaseManager.html":{"url":"classes/TcsDatabaseManager.html","title":"class - TcsDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/database/srv_database.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                connected\n                            \n                            \n                                    Private\n                                currentDb\n                            \n                            \n                                    Private\n                                onDatabaseReadyList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                database\n                            \n                            \n                                loadReadyList\n                            \n                            \n                                onDatabaseReady\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/database/srv_database.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            connected\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_database.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            currentDb\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         database\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_database.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            onDatabaseReadyList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/database/srv_database.ts:4\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            database\n                        \n                        \n                    \n                \n            \n            \n                \ndatabase()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_database.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         database\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadReadyList\n                        \n                        \n                    \n                \n            \n            \n                \nloadReadyList()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_database.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onDatabaseReady\n                        \n                        \n                    \n                \n            \n            \n                \nonDatabaseReady(fnc: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/database/srv_database.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fnc\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsDatabaseManager {\n\tprivate currentDb: database;\n\tprivate connected: boolean;\n\tprivate onDatabaseReadyList: Function[];\n\n\tconstructor() {\n\t\tthis.onDatabaseReadyList = [];\n\t\tthis.connected = false;\n\t\tif (DATABASE_CONFIG.nosql) {\n\t\t\tthis.currentDb = new MongoDatabase(() => {\n\t\t\t\tthis.loadReadyList();\n\t\t\t});\n\t\t} else {\n\t\t\tthis.currentDb = new MysqlDatabase(() => {\n\t\t\t\tthis.loadReadyList();\n\t\t\t});\n\t\t}\n\t}\n\n\tloadReadyList() {\n\t\tthis.connected = true;\n\t\tthis.onDatabaseReadyList.forEach((fnc) => fnc());\n\t}\n\n\tonDatabaseReady(fnc: Function) {\n\t\tif (!this.currentDb || !this.connected) {\n\t\t\tthis.onDatabaseReadyList.push(fnc);\n\t\t\treturn;\n\t\t}\n\n\t\tfnc();\n\t}\n\n\tdatabase() {\n\t\treturn this.currentDb;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsEvent.html":{"url":"interfaces/TcsEvent.html","title":"interface - TcsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:         TcsEventsList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventsList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         TcsEventTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\nexports('TcsEventTarget', () => TcsEventTarget);\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventListener.html":{"url":"classes/TcsEventListener.html","title":"class - TcsEventListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventListenerClass.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventType\n                            \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEventHandler\n                            \n                            \n                                getEventType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventType: TcsEventsList, handler: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n                \n                    \n                            Create a listener that will be called each time the specified event is triggered\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        TcsEventsList\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Type of events to listen to\n\n                                                        \n                                                \n                                                \n                                                        handler\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current event handler, that will be executed each times the event is triggered\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventsList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyEventHandler\n                        \n                        \n                    \n                \n            \n            \n                \napplyEventHandler(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:33\n                \n            \n\n\n            \n                \n                    Triggers the event listener function with the specified data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Data to send to the event listener function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventType\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventType()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:25\n                \n            \n\n\n            \n                \n                    Get the current listener event it is waiting for\n\n\n                    \n                    \n                    \n                        Returns :         TcsEventsList\n\n                    \n                    \n                        Current event type name\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventListener {\n\tprivate eventType: TcsEventsList;\n\tprivate handler: Function;\n\n\t/**\n\t * Create a listener that will be called each time the specified event is triggered\n\t * @param eventType Type of events to listen to\n\t * @param handler Current event handler, that will be executed each times the event is triggered\n\t */\n\tconstructor(eventType: TcsEventsList, handler: Function) {\n\t\tthis.eventType = eventType;\n\t\tthis.handler = handler;\n\t}\n\n\t/**\n\t *\tGet the current listener event it is waiting for\n\t * @returns Current event type name\n\t */\n\tgetEventType() {\n\t\treturn this.eventType;\n\t}\n\n\t/**\n\t * Triggers the event listener function with the specified data\n\t * @param data Data to send to the event listener function\n\t */\n\tapplyEventHandler(data: Object = {}) {\n\t\tthis.handler(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventManager.html":{"url":"classes/TcsEventManager.html","title":"class - TcsEventManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEventHandler\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                sendEvent\n                            \n                            \n                                    Private\n                                waitingEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an event manager. It handles all the incoming events and outcoming events.\nShould only be used by the core.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEventHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:61\n                            \n                        \n\n                \n                    \n                        Add an event handler that will be triggered each time the specified event will be triggered\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        handler\n                                                        \n                                                                Handler to add\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventListener[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:53\n                            \n                        \n\n                \n                    \n                        Send the specified event and triggers it for the target\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        event\n                                                        \n                                                                Event to send\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            waitingEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventManager {\n\tprivate waitingEvents: TcsEvent[];\n\tprivate listeners: TcsEventListener[];\n\n\t/**\n\t * Creates an event manager. It handles all the incoming events and outcoming events.\n\t * Should only be used by the core.\n\t */\n\tconstructor() {\n\t\tthis.waitingEvents = [];\n\t\tthis.listeners = [];\n\n\t\tonNet('tcs:handleEvent', (event: TcsEvent) => {\n\t\t\tif (event.target === TcsEventTarget.SERVER) {\n\t\t\t\tif (TCS.isServerSided) event.target = TcsEventTarget.LOCAL;\n\t\t\t\telse event.target = TcsEventTarget.CLIENT;\n\t\t\t}\n\t\t\tif (event.target === TcsEventTarget.CLIENT && !TCS.isServerSided) {\n\t\t\t\tevent.target = TcsEventTarget.LOCAL;\n\t\t\t}\n\t\t\tthis.sendEvent(event);\n\t\t});\n\n\t\tsetTick(() => {\n\t\t\tthis.waitingEvents.forEach((event, index) => {\n\t\t\t\tif (event.target == TcsEventTarget.LOCAL) {\n\t\t\t\t\tthis.listeners\n\t\t\t\t\t\t.filter((listener) => listener.getEventType() == event.eventType)\n\t\t\t\t\t\t.forEach((listener) => listener.applyEventHandler(event.data));\n\t\t\t\t} else {\n\t\t\t\t\tif (!TCS.isServerSided) emitNet('tcs:handleEvent', event);\n\t\t\t\t\telse {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\temitNet('tcs:handleEvent', event.targetId, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.waitingEvents.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send the specified event and triggers it for the target\n\t * @param event Event to send\n\t */\n\tsendEvent = (event: TcsEvent) => {\n\t\tthis.waitingEvents.push(event);\n\t};\n\n\t/**\n\t * Add an event handler that will be triggered each time the specified event will be triggered\n\t * @param handler Handler to add\n\t */\n\taddEventHandler = (handler: TcsEventListener) => {\n\t\tthis.listeners.push(handler);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsInput.html":{"url":"interfaces/TcsInput.html","title":"interface - TcsInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputs.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        inputKey\n                                \n                                \n                                        inputName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inputKey\n                                    \n                                \n                                \n                                    \n                                        inputKey:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputName\n                                    \n                                \n                                \n                                    \n                                        inputName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsInput {\n    inputName: string;\n    inputKey: string | number;\n}\n\ninterface ActionInput {\n    actionName: String;\n    inputKeyboard: String;\n    inputController: number;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsInputManager.html":{"url":"classes/TcsInputManager.html","title":"class - TcsInputManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsInputManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/inputs/mixed_inputsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                actionHandlers\n                            \n                            \n                                    Private\n                                actionInputs\n                            \n                            \n                                bindAction\n                            \n                            \n                                isJustPressed\n                            \n                            \n                                isPressed\n                            \n                            \n                                    Private\n                                keyboardActions\n                            \n                            \n                                onActionJustPressed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/inputs/mixed_inputsManager.ts:10\n                            \n                        \n\n                \n                    \n                            Initialize the inputs manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actionHandlers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            actionInputs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bindAction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:28\n                            \n                        \n\n                \n                    \n                        Create an action from an input\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                name of the action\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                        \n                                                                brief description of the action\n\n                                                        \n                                                \n                                                \n                                                        keyboardKey\n                                                        \n                                                                keyboard's input\n\n                                                        \n                                                \n                                                \n                                                        controllerKey\n                                                        \n                                                                controller's input\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isJustPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:77\n                            \n                        \n\n                \n                    \n                        Returns whether a control was newly pressed since the last check, used only for Controllers\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:93\n                            \n                        \n\n                \n                    \n                        Returns whether a control is currently pressed\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyboardActions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Record\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onActionJustPressed\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/inputs/mixed_inputsManager.ts:68\n                            \n                        \n\n                \n                    \n                        Adds a function to call when the action is executed\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        actionName\n                                                        \n                                                                action's name\n\n                                                        \n                                                \n                                                \n                                                        handler\n                                                        \n                                                                function to call when the action is call\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsInputManager {\n\tprivate actionInputs: Array;\n\tprivate keyboardActions: Record;\n\tprivate actionHandlers: Record;\n\n\t/**\n\t * Initialize the inputs manager\n\t */\n\tconstructor() {\n\t\tthis.actionInputs = [];\n\t\tthis.keyboardActions = {};\n\t\tthis.actionHandlers = {};\n\t}\n\n\t/**\n\t * Create an action from an input\n\t * @param actionName name of the action\n\t * @param description brief description of the action\n\t * @param keyboardKey keyboard's input\n\t * @param controllerKey controller's input\n\t */\n\tbindAction = (\n\t\tactionName: string,\n\t\tdescription: string,\n\t\tkeyboardKey: string,\n\t\tcontrollerKey: number,\n\t) => {\n\t\tconst alreadyCreated = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\t\tif (!alreadyCreated) {\n\t\t\tthis.actionInputs.push({\n\t\t\t\tactionName: actionName,\n\t\t\t\tinputKeyboard: keyboardKey,\n\t\t\t\tinputController: controllerKey,\n\t\t\t});\n\t\t\tRegisterKeyMapping(\n\t\t\t\t`+${actionName}`,\n\t\t\t\tdescription,\n\t\t\t\t'keyboard',\n\t\t\t\tkeyboardKey,\n\t\t\t);\n\n\t\t\tthis.actionHandlers[actionName] = [];\n\t\t\tRegisterCommand(\n\t\t\t\t`+${actionName}`,\n\t\t\t\t() => {\n\t\t\t\t\tthis.actionHandlers[actionName].forEach((fnc) => fnc());\n\t\t\t\t},\n\t\t\t\tfalse,\n\t\t\t);\n\t\t} else {\n\t\t\tTCS.error(`actionName: ${actionName} already exist !`);\n\t\t}\n\t};\n\n\t/**\n\t * Adds a function to call when the action is executed\n\t * @param actionName action's name\n\t * @param handler function to call when the action is call\n\t */\n\tonActionJustPressed = (actionName: string, handler: Function) => {\n\t\tthis.actionHandlers[actionName].push(handler);\n\t};\n\n\t/**\n\t * Returns whether a control was newly pressed since the last check, used only for Controllers\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisJustPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\t\tif (!actionData) return false;\n\t\treturn (\n\t\t\tthis.keyboardActions[actionName] ||\n\t\t\tIsControlJustPressed(0, actionData.inputController)\n\t\t);\n\t};\n\n\t/**\n\t * Returns whether a control is currently pressed\n\t * @param actionName action's name\n\t * @returns boolean\n\t */\n\tisPressed = (actionName: string) => {\n\t\tconst actionData = this.actionInputs.find(\n\t\t\t(action) => action.actionName == actionName,\n\t\t);\n\n\t\tif (!actionData) return false;\n\n\t\treturn (\n\t\t\tthis.keyboardActions[actionName] ||\n\t\t\tIsControlPressed(0, actionData.inputController)\n\t\t);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsLanguageManager.html":{"url":"classes/TcsLanguageManager.html","title":"class - TcsLanguageManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsLanguageManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/language/mixed_languageManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                get\n                            \n                            \n                                getAndReplace\n                            \n                            \n                                loadModuleLang\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the language manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig(langToAppend: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:98\n                \n            \n\n\n            \n                \n                    Add translations to the current dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    langToAppend\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of keys and their translation in the current configured language\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:28\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Translation in the specified language in the configuration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAndReplace\n                        \n                        \n                    \n                \n            \n            \n                \ngetAndReplace(key: string, replace: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:44\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key and fill it with values\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                                \n                                    replace\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Map of key and their values to find and replace in the translation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        Translation in the specified language in the configuration, filled with specified values\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadModuleLang\n                        \n                        \n                    \n                \n            \n            \n                \nloadModuleLang(module: TcsModule, language: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:67\n                \n            \n\n\n            \n                \n                    Get the translations of the specified module and add it to the dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Module informations to load the lang config from\n\n                                    \n                                \n                                \n                                    language\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'en-EN'\n                                    \n\n                                    \n                                        Name of the current language to load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsLanguageManager {\n\tprivate lang: object;\n\n\t/**\n\t * Initialize the language manager\n\t */\n\tconstructor() {\n\t\tthis.lang =\n\t\t\tJSON.parse(\n\t\t\t\tLoadResourceFile(\n\t\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t\t`src/assets/lang/${TCS_CONFIG.lang}.json`,\n\t\t\t\t),\n\t\t\t) || {};\n\t}\n\n\t/**\n\t * Get the translation of the specified key\n\t * @param key Translation to find\n\t * @returns Translation in the specified language in the configuration\n\t */\n\tget(key: string): String {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\treturn this.lang[key] || '';\n\t}\n\n\t/**\n\t * Get the translation of the specified key and fill it with values\n\t * @param key Translation to find\n\t * @param replace Map of key and their values to find and replace in the translation\n\t * @returns Translation in the specified language in the configuration, filled with specified values\n\t */\n\tgetAndReplace(key: string, replace: Object): string {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.error(`${key} is not defined for config ${TCS_CONFIG.lang}.`);\n\t\t}\n\n\t\t//@ts-ignore\n\t\tlet result = this.lang[key] || '';\n\n\t\tfor (let objKey in replace) {\n\t\t\t//@ts-ignore\n\t\t\tconst replaceTo = replace[objKey];\n\t\t\tresult = result.replace(`{${objKey}}`, replaceTo);\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Get the translations of the specified module and add it to the dictionnary\n\t * @param module Module informations to load the lang config from\n\t * @param language Name of the current language to load\n\t */\n\tloadModuleLang(module: TcsModule, language: String = 'en-EN') {\n\t\tconst id = module.getId();\n\n\t\tconst dict = JSON.parse(\n\t\t\tLoadResourceFile(\n\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t`src/assets/lang/${id}/${language}.json`,\n\t\t\t),\n\t\t);\n\n\t\tif (!dict) {\n\t\t\tif (language !== 'en-EN') {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}. Trying to load language 'en-EN'...`,\n\t\t\t\t);\n\t\t\t\tthis.loadModuleLang(module);\n\t\t\t} else {\n\t\t\t\tTCS.warning(\n\t\t\t\t\t`${language} language file doesn't exist for module ${id}.`,\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tthis.addConfig(dict);\n\t}\n\n\t/**\n\t * Add translations to the current dictionnary\n\t * @param langToAppend List of keys and their translation in the current configured language\n\t */\n\taddConfig(langToAppend: Object) {\n\t\tthis.lang = { ...this.lang, ...langToAppend };\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModule.html":{"url":"classes/TcsModule.html","title":"class - TcsModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_module.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyMethod\n                            \n                            \n                                    Private\n                                launchMethod\n                            \n                            \n                                    Private\n                                moduleInfos\n                            \n                            \n                                moduleLaunched\n                            \n                            \n                                shouldLaunch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkVersion\n                            \n                            \n                                destroyModule\n                            \n                            \n                                getDependencies\n                            \n                            \n                                getId\n                            \n                            \n                                initModule\n                            \n                            \n                                    Private\n                                isVersionSuperior\n                            \n                            \n                                printDebug\n                            \n                            \n                                setDestroyModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n                \n                    \n                            Create a new Tcs module instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleInfos\n                                                  \n                                                        \n                                                                        TcsModuleInfos | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        launchMethod\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Method to launch when the module is ready\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            launchMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleLaunched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldLaunch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            checkVersion\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    checkVersion()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:115\n                \n            \n\n\n            \n                \n                    Check with github the last version of the module to know if the current module is up to date.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyModule\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:71\n                \n            \n\n\n            \n                \n                    Stop the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ngetDependencies()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:56\n                \n            \n\n\n            \n                \n                    Get the list of the current module dependencies\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        list of current module dependencies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:48\n                \n            \n\n\n            \n                \n                    Get the id of the current module\n\n\n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        id of the current module\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initModule\n                        \n                        \n                    \n                \n            \n            \n                \ninitModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:95\n                \n            \n\n\n            \n                \n                    Starts the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isVersionSuperior\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isVersionSuperior(current: String, compare: String, currentStep: number)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:160\n                \n            \n\n\n            \n                \n                    Check if the current version is superior at the compared one\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    current\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Latest version number of the module\n\n                                    \n                                \n                                \n                                    compare\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Version to compare to\n\n                                    \n                                \n                                \n                                    currentStep\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                    \n                                        Step on the string version of the module (splitted by dot)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        Returns true if the current version is superior to the compared version. Returns false if not.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printDebug\n                        \n                        \n                    \n                \n            \n            \n                \nprintDebug(message: String, messageColor: ConsoleColors)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:181\n                \n            \n\n\n            \n                \n                    Print a debug message to the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to print in the console, a prefix is concatened to it (category/name)\n\n                                    \n                                \n                                \n                                    messageColor\n                                    \n                                                ConsoleColors\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ConsoleColors.YELLOW\n                                    \n\n                                    \n                                        Color of the current message in the console, yellow by default\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDestroyModule\n                        \n                        \n                    \n                \n            \n            \n                \nsetDestroyModule(destroyMethod: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:64\n                \n            \n\n\n            \n                \n                    Set the method that will be called when the module has to be stopped\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    destroyMethod\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method that will be called when the module is stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModule {\n\t//@ts-ignore\n\tprivate moduleInfos: TcsModuleInfos;\n\tprivate launchMethod: Function;\n\tprivate destroyMethod: Function;\n\n\tmoduleLaunched: Boolean;\n\tshouldLaunch: Boolean;\n\n\t/**\n\t * Create a new Tcs module instance\n\t * @param moduleType Type of the current module\n\t * @param moduleName Name of the current module, as if it was a ressource\n\t * @param launchMethod Method to launch when the module is ready\n\t * @param moduleDependencies List of modules ids this module depends on\n\t */\n\tconstructor(moduleInfos: TcsModuleInfos | null, launchMethod: Function) {\n\t\tthis.shouldLaunch = true;\n\n\t\tif (moduleInfos != null) {\n\t\t\tthis.moduleInfos = moduleInfos;\n\n\t\t\tif (\n\t\t\t\tTCS_CONFIG.versionningCheck &&\n\t\t\t\tTCS.isServerSided &&\n\t\t\t\tthis.moduleInfos.git\n\t\t\t) {\n\t\t\t\tthis.checkVersion();\n\t\t\t}\n\t\t} else {\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t\tthis.launchMethod = launchMethod;\n\t\tthis.destroyMethod = () => {};\n\t\tthis.moduleLaunched = false;\n\t}\n\n\t/**\n\t * Get the id of the current module\n\t * @returns id of the current module\n\t */\n\tgetId(): String {\n\t\treturn `${this.moduleInfos.moduleType}/${this.moduleInfos.moduleName}`;\n\t}\n\n\t/**\n\t * Get the list of the current module dependencies\n\t * @returns list of current module dependencies\n\t */\n\tgetDependencies(): Array {\n\t\treturn this.moduleInfos.dependencies || [];\n\t}\n\n\t/**\n\t * Set the method that will be called when the module has to be stopped\n\t * @param destroyMethod Method that will be called when the module is stopped\n\t */\n\tsetDestroyModule(destroyMethod: Function) {\n\t\tthis.destroyMethod = destroyMethod;\n\t}\n\n\t/**\n\t * Stop the module\n\t */\n\tdestroyModule() {\n\t\tthis.printDebug('Shutting down module !', ConsoleColors.RED);\n\t\ttry {\n\t\t\tTCS.threads.removeThreadByModule(this);\n\t\t\tthis.moduleLaunched = false;\n\t\t\tthis.shouldLaunch = false;\n\t\t\tthis.destroyMethod();\n\t\t\tthis.printDebug(\n\t\t\t\t'Module has been stopped correctly !',\n\t\t\t\tConsoleColors.GREEN,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while shutting down the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Starts the module\n\t */\n\tinitModule() {\n\t\tthis.printDebug('Starting module !');\n\t\ttry {\n\t\t\tthis.launchMethod(this);\n\t\t\tTCS.lang.loadModuleLang(this, TCS_CONFIG.lang);\n\t\t\tthis.moduleLaunched = true;\n\t\t\tthis.printDebug('Module has been started !', ConsoleColors.GREEN);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while starting the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Check with github the last version of the module to know if the current module is up to date.\n\t */\n\tprivate checkVersion() {\n\t\tconst https = require('https');\n\t\tconst options = {\n\t\t\thostname: 'raw.githubusercontent.com',\n\t\t\tport: 443,\n\t\t\tpath: `/${this.moduleInfos.git}/main/.tcs.json`,\n\t\t\tmethod: 'GET',\n\t\t};\n\n\t\tconst req = https.request(options, (res: any) => {\n\t\t\tres.on('data', (d: any) => {\n\t\t\t\tconst buf = Buffer.from(d);\n\t\t\t\tconst json = JSON.parse(buf.toString('utf-8'));\n\n\t\t\t\tif (!json.version) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (this.isVersionSuperior(json.version, this.moduleInfos.version)) {\n\t\t\t\t\tTCS.warning(\n\t\t\t\t\t\t`Module ${this.getId()} has a new version (current: ${\n\t\t\t\t\t\t\tthis.moduleInfos.version\n\t\t\t\t\t\t} | new version : ${json.version}) ! \\n${\n\t\t\t\t\t\t\tConsoleColors.YELLOW\n\t\t\t\t\t\t}You can download it at : ${this.moduleInfos.git}${\n\t\t\t\t\t\t\tConsoleColors.RESET\n\t\t\t\t\t\t}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treq.on('error', (error: any) => {\n\t\t\tconsole.error(error);\n\t\t});\n\n\t\treq.end();\n\t}\n\n\t/**\n\t * Check if the current version is superior at the compared one\n\t * @param current Latest version number of the module\n\t * @param compare Version to compare to\n\t * @param currentStep Step on the string version of the module (splitted by dot)\n\t * @returns Returns true if the current version is superior to the compared version. Returns false if not.\n\t */\n\tprivate isVersionSuperior(\n\t\tcurrent: String,\n\t\tcompare: String,\n\t\tcurrentStep: number = 0,\n\t): boolean {\n\t\tconst currentNumber = parseInt(current.split('.')[currentStep]);\n\t\tconst compareNumber = parseInt(compare.split('.')[currentStep]);\n\n\t\tif (currentNumber == compareNumber) {\n\t\t\tif (currentStep == 2) return false;\n\t\t\treturn this.isVersionSuperior(current, compare, currentStep + 1);\n\t\t} else {\n\t\t\treturn currentNumber > compareNumber;\n\t\t}\n\t}\n\n\t/**\n\t * Print a debug message to the console\n\t * @param message Message to print in the console, a prefix is concatened to it (category/name)\n\t * @param messageColor Color of the current message in the console, yellow by default\n\t */\n\tprintDebug(\n\t\tmessage: String,\n\t\tmessageColor: ConsoleColors = ConsoleColors.YELLOW,\n\t) {\n\t\tif (TCS_CONFIG.debugMode)\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE} [${this.getId()}] ${messageColor}`,\n\t\t\t\tmessage,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsModuleInfos.html":{"url":"interfaces/TcsModuleInfos.html","title":"interface - TcsModuleInfos","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsModuleInfos\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/modules/mixed_moduleInfos.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        dependencies\n                                \n                                \n                                            Optional\n                                        git\n                                \n                                \n                                        moduleName\n                                \n                                \n                                        moduleType\n                                \n                                \n                                        version\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dependencies\n                                    \n                                \n                                \n                                    \n                                        dependencies:     String[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     String[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git\n                                    \n                                \n                                \n                                    \n                                        git:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleName\n                                    \n                                \n                                \n                                    \n                                        moduleName:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        moduleType\n                                    \n                                \n                                \n                                    \n                                        moduleType:         TcsModuleTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsModuleTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                    \n                                \n                                \n                                    \n                                        version:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsModuleInfos {\n\tmoduleType: TcsModuleTypes;\n\tmoduleName: String;\n\tversion: String;\n\n\tgit?: String;\n\tdependencies?: String[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModuleManager.html":{"url":"classes/TcsModuleManager.html","title":"class - TcsModuleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModuleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_modulesManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findModuleById\n                            \n                            \n                                    Private\n                                gameModules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addModuleToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the module manager.\nShould only be called by the core !\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findModuleById\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:66\n                            \n                        \n\n                \n                    \n                        Get a loaded module by it's id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        id\n                                                        \n                                                                Id of the module to find\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToGame\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToGame(newModule: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:50\n                \n            \n\n\n            \n                \n                    Add a module to the current game and loads it when it is ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newModule\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module to add and load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModuleManager {\n\tprivate gameModules: Array;\n\n\t/**\n\t * Initialize the module manager.\n\t * Should only be called by the core !\n\t */\n\tconstructor() {\n\t\tthis.gameModules = [];\n\t\tsetTick(() =>\n\t\t\tthis.gameModules\n\t\t\t\t.filter((module) => !module.moduleLaunched)\n\t\t\t\t.forEach((module) => {\n\t\t\t\t\tconst remainingDependenciesToStart = module\n\t\t\t\t\t\t.getDependencies()\n\t\t\t\t\t\t.filter((mod) => {\n\t\t\t\t\t\t\tconst foundModule = this.findModuleById(mod);\n\n\t\t\t\t\t\t\tif (!foundModule) {\n\t\t\t\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t\t\t\t`Can't start module ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + module.getId() + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} because dependency ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + mod + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} isn't installed.`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn !foundModule.moduleLaunched;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (remainingDependenciesToStart.length == 0 && module.shouldLaunch)\n\t\t\t\t\t\tmodule.initModule();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Add a module to the current game and loads it when it is ready\n\t * @param newModule Module to add and load\n\t */\n\taddModuleToGame(newModule: TcsModule) {\n\t\tif (!this.findModuleById(newModule.getId()))\n\t\t\tthis.gameModules.push(newModule);\n\t\telse\n\t\t\tTCS.error(\n\t\t\t\t`Can't add module ${ConsoleColors.YELLOW}${newModule.getId()}${\n\t\t\t\t\tConsoleColors.RED\n\t\t\t\t} because a module with the same id already exists !`,\n\t\t\t);\n\t}\n\n\t/**\n\t * Get a loaded module by it's id\n\t * @param id Id of the module to find\n\t * @returns The module if found, undefined if it doesn't exist\n\t */\n\tfindModuleById = (id: String): TcsModule | undefined =>\n\t\tthis.gameModules.find((mod) => mod.getId() === id);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThread.html":{"url":"classes/TcsThread.html","title":"class - TcsThread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threads.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugExec\n                            \n                            \n                                delay\n                            \n                            \n                                    Private\n                                execs\n                            \n                            \n                                isThreadFull\n                            \n                            \n                                    Private\n                                threadId\n                            \n                            \n                                    Private\n                                tick\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendThread\n                            \n                            \n                                containsThreadById\n                            \n                            \n                                getThreadTimer\n                            \n                            \n                                removeModuleThreads\n                            \n                            \n                                removeThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timer: number)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n                \n                    \n                            Create a new thread with the specified delay\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timer\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Delay between each executions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debugExec\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:57\n                            \n                        \n\n                \n                    \n                        Execute a thread function in debug mode\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        thread\n                                                        \n                                                                Thread to execute\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:74\n                            \n                        \n\n                \n                    \n                        Wait the specified time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        time\n                                                        \n                                                                Time of the delay\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isThreadFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendThread\n                        \n                        \n                    \n                \n            \n            \n                \nappendThread(module: TcsModule, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:83\n                \n            \n\n\n            \n                \n                    Append a function to execute after the delay in the current thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module the thread comes from\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsThreadById\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsThreadById(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:132\n                \n            \n\n\n            \n                \n                    Get if a thread is actually contained in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the thread is contained, false else\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThreadTimer\n                        \n                        \n                    \n                \n            \n            \n                \ngetThreadTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:49\n                \n            \n\n\n            \n                \n                    Get current thread delay between each executions\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Thread delay\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeModuleThreads\n                        \n                        \n                    \n                \n            \n            \n                \nremoveModuleThreads(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:115\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads have to be stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:100\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThread {\n\tprivate threadId: number;\n\tprivate execs: Array;\n\tprivate timer: number;\n\tprivate tick: number;\n\n\tisThreadFull: boolean;\n\n\t/**\n\t * Create a new thread with the specified delay\n\t * @param timer Delay between each executions\n\t */\n\tconstructor(timer: number) {\n\t\tthis.execs = [];\n\t\tthis.timer = timer;\n\t\tthis.isThreadFull = false;\n\t\tthis.threadId = +new Date();\n\n\t\tthis.tick = setTick(async () => {\n\t\t\tawait this.delay(this.timer);\n\n\t\t\tconst benchmark = new TcsBenchmark();\n\t\t\tthis.execs.forEach((thread) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (TCS_CONFIG.debugMode) this.debugExec(thread);\n\t\t\t\t\telse thread.exec();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tTCS.error(\n\t\t\t\t\t\t`Error encountered in thread ${ConsoleColors.YELLOW}${thread.id}${ConsoleColors.RED}: \\n${e}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst time = benchmark.stop();\n\n\t\t\tif (time > TCS_CONFIG.maxExecTimePerThread) this.isThreadFull = true;\n\t\t});\n\t}\n\n\t/**\n\t * Get current thread delay between each executions\n\t * @returns Thread delay\n\t */\n\tgetThreadTimer(): number {\n\t\treturn this.timer;\n\t}\n\n\t/**\n\t * Execute a thread function in debug mode\n\t * @param thread Thread to execute\n\t */\n\tdebugExec = (thread: TcsThreadExec) => {\n\t\tconst benchmark = new TcsBenchmark();\n\t\tthread.exec();\n\t\tconst time = benchmark.stop();\n\n\t\tif (time >= 1) {\n\t\t\tTCS.warning(\n\t\t\t\t`Thread ${thread.id.split('-')[1]} took ${time} ms to execute !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Wait the specified time\n\t * @param time Time of the delay\n\t * @returns Promise that is resolved after the delay\n\t */\n\tdelay = (time: number): Promise =>\n\t\tnew Promise((resolve, _) => setTimeout(resolve, time));\n\n\t/**\n\t * Append a function to execute after the delay in the current thread\n\t * @param module Module the thread comes from\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tappendThread(module: TcsModule, exec: Function): String {\n\t\tconst threadId = `${this.threadId}-${module.getId()}-${this.execs.length}`;\n\t\tconst thread: TcsThreadExec = {\n\t\t\tid: threadId,\n\t\t\texec: exec,\n\t\t};\n\n\t\tthis.execs.push(thread);\n\n\t\treturn threadId;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param id Id of the thread to remove\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveThread(id: String): boolean {\n\t\tthis.execs = this.execs.filter((thread) => thread.id !== id);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param module Module from which the threads have to be stopped\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveModuleThreads(module: TcsModule): boolean {\n\t\tthis.execs = this.execs.filter(\n\t\t\t(thread) => thread.id.split('-')[1] !== module.getId(),\n\t\t);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get if a thread is actually contained in\n\t * @param id Id to search for\n\t * @returns True if the thread is contained, false else\n\t */\n\tcontainsThreadById(id: String): boolean {\n\t\treturn this.execs.find((thread) => thread.id === id) != null;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsThreadExec.html":{"url":"interfaces/TcsThreadExec.html","title":"interface - TcsThreadExec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsThreadExec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/threads/mixed_threadInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exec\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsThreadExec {\n\tid: String;\n\texec: Function;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThreadsManager.html":{"url":"classes/TcsThreadsManager.html","title":"class - TcsThreadsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThreadsManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threadsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                threadsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createThread\n                            \n                            \n                                removeThread\n                            \n                            \n                                removeThreadByModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the threads manager\nShould only be called by the core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThread[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createThread\n                        \n                        \n                    \n                \n            \n            \n                \ncreateThread(module: TcsModule, timer: number, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:25\n                \n            \n\n\n            \n                \n                    Create a new thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module that creates the thread\n\n                                    \n                                \n                                \n                                    timer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Delay between each executions\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:46\n                \n            \n\n\n            \n                \n                    Stop and deletes a thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThreadByModule\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThreadByModule(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:64\n                \n            \n\n\n            \n                \n                    Stop all the threads that come from the specified module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads to stop come from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThreadsManager {\n\tprivate threadsList: TcsThread[];\n\n\t/**\n\t * Initialize the threads manager\n\t * Should only be called by the core\n\t */\n\tconstructor() {\n\t\tthis.threadsList = [];\n\t}\n\n\t/**\n\t * Create a new thread\n\t * @param module Module that creates the thread\n\t * @param timer Delay between each executions\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tcreateThread(module: TcsModule, timer: number, exec: Function): String {\n\t\tlet found = false;\n\t\tconst currentThread =\n\t\t\tthis.threadsList.find((thread) => {\n\t\t\t\tif (thread.getThreadTimer() == timer && !thread.isThreadFull) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}) || new TcsThread(timer);\n\t\tif (!found) {\n\t\t\tthis.threadsList.push(currentThread);\n\t\t}\n\n\t\treturn currentThread.appendThread(module, exec);\n\t}\n\n\t/**\n\t * Stop and deletes a thread\n\t * @param id Id of the thread to delete\n\t */\n\tremoveThread(id: String) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tif (thread.containsThreadById(id)) {\n\t\t\t\tconst shouldDeleteThread = thread.removeThread(id);\n\n\t\t\t\tif (shouldDeleteThread) {\n\t\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stop all the threads that come from the specified module\n\t * @param module Module from which the threads to stop come from\n\t */\n\tremoveThreadByModule(module: TcsModule) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tconst shouldDeleteThread = thread.removeModuleThreads(module);\n\n\t\t\tif (shouldDeleteThread) {\n\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\treturn this.removeThreadByModule(module);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContribution\nHere are the contribution guidelines. Please, read it before contributing.\nDocumentation\n\nPull requests for docs update, if needed\nCode-level documentation expectations\n100% documentation coverage for pull requests\nUpdate readme if needed\nUpdate doc if needed\n\n\n\nEnvironment setup\nTCS is using Prettier to format the code. You must use our format style in your push requests.\nCompiling\nYou must compile your TS file with these actions before sending a pull request. The build will appear in the build folder.\nnpm run precompileRender the documentation\nTCS uses compodoc to render the documentation automatically. If you need to update the documentation due to code changes, please follow these steps :\nnpm install -g @compodoc/compodoc\n\nnpm run docDependencies\nThe current project depends on :\n\n@citizenfx/client\n@citizenfx/server\nprettier\ntslint\ntypescript\nfs-extra\nmerge-files\n\nExecute the following command to install them :\nnpm i\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/assets/mixed_config.ts\n            \n            variable\n            TCS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/assets/srv_databaseConfig.ts\n            \n            variable\n            DATABASE_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/librairies/benchmark/mixed_benchmark.ts\n            \n            class\n            TcsBenchmark\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/core/librairies/callbacks/mixed_callbackManager.ts\n            \n            class\n            TcsCallbackManager\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/core/librairies/database/mongo/srv_Mongo.ts\n            \n            class\n            MongoDatabase\n            \n                44 %\n                (4/9)\n            \n        \n        \n            \n                \n                src/core/librairies/database/sql/srv_Mysql.ts\n            \n            class\n            MysqlDatabase\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_MakeRequest.ts\n            \n            class\n            MakeRequest\n            \n                40 %\n                (4/10)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_MakeRequest.ts\n            \n            class\n            MakeRequestMongo\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_MakeRequest.ts\n            \n            class\n            MakeRequestSQL\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/core/librairies/database/srv_database.ts\n            \n            class\n            TcsDatabaseManager\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventListenerClass.ts\n            \n            class\n            TcsEventListener\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventManager.ts\n            \n            class\n            TcsEventManager\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            ActionInput\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputs.ts\n            \n            interface\n            TcsInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/core/librairies/inputs/mixed_inputsManager.ts\n            \n            class\n            TcsInputManager\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/core/librairies/language/mixed_languageManager.ts\n            \n            class\n            TcsLanguageManager\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_module.ts\n            \n            class\n            TcsModule\n            \n                60 %\n                (9/15)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_modulesManager.ts\n            \n            class\n            TcsModuleManager\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threads.ts\n            \n            class\n            TcsThread\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threadsManager.ts\n            \n            class\n            TcsThreadsManager\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/core/mixed_tcs.ts\n            \n            class\n            TcsCore\n            \n                30 %\n                (4/13)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            loadTcsModuleInfosFunction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoaded\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            onTcsLoadedFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            TCS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            deathThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_death.ts\n            \n            function\n            GetPlayerByEntityID\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_vehicle.ts\n            \n            function\n            vehicleThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            isWeaponInArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/client/cli_weapon.ts\n            \n            function\n            weaponThreadChecker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/core/events/mixed_moduleInfos.ts\n            \n            variable\n            eventsModulesInfos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/database/srv_database.ts\n            \n            interface\n            database\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/types/database/srv_sqlColumn.ts\n            \n            interface\n            sqlColumn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsClientEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/modules/mixed_moduleInfos.ts\n            \n            interface\n            TcsModuleInfos\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/types/threads/mixed_threadInterface.ts\n            \n            interface\n            TcsThreadExec\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/database.html":{"url":"interfaces/database.html","title":"interface - database","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  database\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/database/srv_database.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    delete\n                                \n                                \n                                    ensureColumns\n                                \n                                \n                                    get\n                                \n                                \n                                    insert\n                                \n                                \n                                    update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \ndelete(table: string, query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:40\n                \n            \n\n\n            \n                \n                    Delete rows / documents from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to delete the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current query to select the rows / documents to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ensureColumns\n                        \n                        \n                    \n                \n            \n            \n                \nensureColumns(table: string, columns: sqlColumn[])\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:7\n                \n            \n\n\n            \n                \n                    Will create the table with the specified columns if they don't exist\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to create the columns in\n\n                                    \n                                \n                                \n                                    columns\n                                    \n                                                sqlColumn[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of the columns, specified by their name and values type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(tables: string[], query: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:14\n                \n            \n\n\n            \n                \n                    Get the values from the specified query and tables\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    tables\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tables to get the values from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current query to fetch the values\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MakeRequest\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            insert\n                        \n                        \n                    \n                \n            \n            \n                \ninsert(table: string, object: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:33\n                \n            \n\n\n            \n                \n                    Insert the object in the specified table\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to insert the value from\n\n                                    \n                                \n                                \n                                    object\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Document to insert to the specified table\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(table: string, query: Record, newValues: Record)\n                \n            \n\n\n            \n                \n                    Defined in src/types/database/srv_database.ts:22\n                \n            \n\n\n            \n                \n                    Update rows / documents from the database\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    table\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Table to update the value from\n\n                                    \n                                \n                                \n                                    query\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Current query to select the rows / documents to update\n\n                                    \n                                \n                                \n                                    newValues\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        New values to set from the selected rows / documents\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        interface database {\n\t/**\n\t * Will create the table with the specified columns if they don't exist\n\t * @param table Table to create the columns in\n\t * @param columns List of the columns, specified by their name and values type\n\t */\n\tensureColumns(table: string, columns: sqlColumn[]): void;\n\n\t/**\n\t * Get the values from the specified query and tables\n\t * @param tables Tables to get the values from\n\t * @param query Current query to fetch the values\n\t */\n\tget(tables: string[], query: Record): MakeRequest;\n\n\t/**\n\t * Update rows / documents from the database\n\t * @param table Table to update the value from\n\t * @param query Current query to select the rows / documents to update\n\t * @param newValues New values to set from the selected rows / documents\n\t */\n\tupdate(\n\t\ttable: string,\n\t\tquery: Record,\n\t\tnewValues: Record,\n\t): Promise;\n\n\t/**\n\t * Insert the object in the specified table\n\t * @param table Table to insert the value from\n\t * @param object Document to insert to the specified table\n\t */\n\tinsert(table: string, object: Record): Promise;\n\n\t/**\n\t * Delete rows / documents from the database\n\t * @param table Table to delete the values from\n\t * @param query Current query to select the rows / documents to delete\n\t */\n\tdelete(table: string, query: Record): Promise;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            mongodb : ^3.6.6\n        \n            mysql2 : ^2.2.5\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            deathThreadChecker   (src/.../cli_death.ts)\n                        \n                        \n                            GetPlayerByEntityID   (src/.../cli_death.ts)\n                        \n                        \n                            isWeaponInArray   (src/.../cli_weapon.ts)\n                        \n                        \n                            vehicleThreadChecker   (src/.../cli_vehicle.ts)\n                        \n                        \n                            weaponThreadChecker   (src/.../cli_weapon.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/core/events/client/cli_death.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            deathThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \ndeathThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            GetPlayerByEntityID\n                        \n                        \n                    \n                \n            \n            \n                \nGetPlayerByEntityID(id)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_weapon.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            isWeaponInArray\n                        \n                        \n                    \n                \n            \n            \n                \nisWeaponInArray(weaponArray, weaponHash)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weaponArray\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    weaponHash\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            weaponThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nweaponThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/modules/core/events/client/cli_vehicle.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            vehicleThreadChecker\n                        \n                        \n                    \n                \n            \n            \n                \nvehicleThreadChecker(module)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    module\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTCS Core\n\n    \nPresentation\nTCS is an open source FiveM framework developped with TypeScript language.\nYou can download the last version, ready to start on FiveM resources at the releases page.\nFind out how to contribute by reading the contributing guide.\nDon't forget to read the Code of Conduct.\n\nFor any question about the core, you can directly ask it into the \"discution\" section of this repository\n\n\nIMPORTANT As TCS is a gametype, you need a resource that declares the map spawn points to be able to connect. Please download the tcs_map resource\n\nBasic modules\nYou can learn more about the basic modules (such as the database management) here.\nGit sources\nTo download the latest sources of TCS, execute this command :\ngit clone https://github.com/FiveMTCS/Core.git\nIssues\nIt is possible that you experience some issues while using TCS, especially with the first versions of it. Please, first verify that you are using the latest version and then report the issue by clicking here.\nGet started\nIt is very simple to use TCS :\n\nDownload the latest version of tcs_map\n\nDownload the latest release here\n\nDrag and drop the folder to your FiveM server resources folder\n\nAdd the next command to your server.cfg\n\n\n\nensure tcs_map\nensure tcs\nDeveloper tools\nTo develop a new TCS module, follow these steps :\n\nCreate a folder that will contain the sources of your module\n\nExecute these commands :\n\n\nnpm init\nnpm i -D @citizenfx/client\nnpm i -D @citizenfx/server\nnpm i -D @fivemtcs/types\n\nExport the sources and place them into the modules/ folder inside the TCS Core resource.\n\n\nYou can find more informations by looking at the Demo project\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 FiveMTCS\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    17 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    8 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/sqlColumn.html":{"url":"interfaces/sqlColumn.html","title":"interface - sqlColumn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  sqlColumn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/database/srv_sqlColumn.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        column\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        column\n                                    \n                                \n                                \n                                    \n                                        column:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         sqlTypes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         sqlTypes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum sqlTypes {\n\t// string data types\n\tCHAR = 'CHAR(255)',\n\tVARCHAR = 'VARCHAR(255)',\n\tTINYTEXT = 'TINYTEXT(255)',\n\tTEXT = 'TEXT(65535)',\n\tMEDIUMTEXT = 'MEDIUMTEXT(16777215)',\n\tLONGTEXT = 'LONGTEXT(4294967295)',\n\tBINARY = 'BINARY(255)',\n\tVARBINARY = 'VARBINARY(255)',\n\n\tINT = 'INT',\n\tDECIMAL = 'DECIMAL(10, 3)',\n\n\tDATE = 'DATE',\n\tDATETIME = 'DATETIME',\n\tTIMESTAMP = 'TIMESTAMP ',\n}\n\ninterface sqlColumn {\n\tcolumn: String;\n\ttype: sqlTypes;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DATABASE_CONFIG   (src/.../srv_databaseConfig.ts)\n                        \n                        \n                            eventsModulesInfos   (src/.../mixed_moduleInfos.ts)\n                        \n                        \n                            loadTcsModuleInfos   (src/.../mixed_main.ts)\n                        \n                        \n                            loadTcsModuleInfosFunction   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoaded   (src/.../mixed_main.ts)\n                        \n                        \n                            onTcsLoadedFunctions   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS_CONFIG   (src/.../mixed_config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/assets/srv_databaseConfig.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DATABASE_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tnosql: true,\n\taddress: 'localhost',\n\tport: 3307, // Mongo : 27707, MariaDb :3307\n\tusername: 'root',\n\tpassword: '',\n\tdatabaseName: 'tcs',\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/core/events/mixed_moduleInfos.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            eventsModulesInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleInfos | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n\n\n            \n        \n\n    src/mixed_main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfos\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tloadTcsModuleInfosFunction.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadTcsModuleInfosFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoaded\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (fnc: Function) => {\n\tif (TCS != null) {\n\t\tfnc();\n\t\treturn;\n\t}\n\tonTcsLoadedFunctions.push(fnc);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onTcsLoadedFunctions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Function[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TCS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCore\n\n                        \n                    \n\n\n            \n        \n\n    src/assets/mixed_config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TCS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tlang: 'fr-FR', // Current lang the scripts should be on\n\n\tdebugMode: true, // If set to true, debug informations are going to be printed in the console\n\n\tmaxExecTimePerThread: 10, // Maximum amount of time (in ms) a thread should take to execute in a tick\n\n\tshowErrorsAnyCase: true, // Should print errors in console even if debug mode isn't activated ?\n\n\tshowWarningsAnyCase: true, // Should print warnings in console even if debug mode isn't activated ?\n\n\tversionningCheck: true, // Check if modules are at their latest version\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
