var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/TcsBenchmark.html",[0,0.127,1,1.672]],["body/classes/TcsBenchmark.html",[0,0.14,1,2.417,2,0.861,3,0.658,4,0.569,5,0.486,6,2.533,7,0.978,8,0.408,9,0.861,10,1.614,11,3.434,12,1.448,13,3.142,14,1.425,15,1.425,16,4.09,17,3.312,18,3.309,19,3.914,20,0.486,21,0.048,22,2.353,23,3.128,24,1.448,25,4.09,26,3.309,27,5.146,28,2.8,29,1.448,30,2.111,31,4.09,32,4.09,33,1.848,34,1.108,35,0.027,36,0.035,37,0.027]],["title/interfaces/TcsClientEvent.html",[38,1.134,39,1.672]],["body/interfaces/TcsClientEvent.html",[3,0.769,4,0.664,5,0.567,8,0.476,9,0.95,20,0.567,21,0.048,22,2.529,35,0.031,36,0.039,37,0.031,38,1.809,39,2.668,40,2.158,41,2.158,42,3.656,43,2.529,44,4.145,45,2.958,46,3.09,47,3.09,48,3.09,49,2.33,50,2.5,51,2.158,52,2.5,53,2.5,54,1.885]],["title/classes/TcsCore.html",[0,0.127,55,1.672]],["body/classes/TcsCore.html",[0,0.113,2,0.694,3,0.53,4,0.458,5,0.391,7,0.788,8,0.329,9,0.744,12,1.251,14,1.276,15,1.55,20,0.749,21,0.049,29,0.892,35,0.022,36,0.03,37,0.022,49,1.823,55,2.087,56,2.04,57,4.079,58,4.079,59,2.792,60,2.41,61,2.792,62,2.613,63,3.532,64,2.087,65,1.604,66,1.823,67,2.41,68,2.519,69,2.418,70,2.41,71,2.519,72,2.41,73,2.519,74,2.41,75,2.519,76,3.532,77,1.635,78,2.519,79,3.532,80,1.604,81,4.013,82,2.86,83,0.892,84,0.892,85,1.01,86,0.892,87,3.532,88,2.418,89,1.144,90,2.519,91,3.303,92,3.532,93,2.519,94,2.519,95,2.282,96,2.519,97,2.04,98,2.519,99,1.724,100,1.489,101,1.724,102,3.532,103,2.519,104,2.04,105,1.724,106,1.724,107,1.3,108,2.519,109,2.519,110,0.892,111,1.724,112,2.519,113,2.04]],["title/interfaces/TcsEvent.html",[38,1.134,43,1.461]],["body/interfaces/TcsEvent.html",[3,0.737,4,0.637,5,0.544,8,0.457,9,0.926,20,0.746,21,0.048,22,1.808,35,0.03,36,0.038,37,0.03,38,1.762,39,2.07,40,2.07,41,2.07,42,2.836,43,2.482,44,2.836,45,2.836,46,3.452,47,3.01,48,3.01,49,2.27,50,3.452,51,2.841,52,3.452,53,3.452,54,2.482]],["title/classes/TcsEventListener.html",[0,0.127,114,1.672]],["body/classes/TcsEventListener.html",[0,0.106,2,0.648,3,0.495,4,0.428,5,0.365,7,0.735,8,0.307,9,0.708,10,1.671,12,1.191,14,0.735,15,1.418,20,0.771,21,0.048,24,1.671,29,1.391,30,1.736,34,0.833,35,0.02,36,0.029,37,0.02,50,3.23,51,2.68,53,3.23,54,2.028,80,1.946,83,1.191,84,1.518,85,1.348,86,1.191,89,1.068,110,1.391,114,1.988,115,1.904,116,4.156,117,3.364,118,4.287,119,3.364,120,2.611,121,3.364,122,1.988,123,4.969,124,1.988,125,2.533,126,3.151,127,3.472,128,2.724,129,3.364,130,3.364,131,3.364,132,2.351,133,3.364,134,2.351,135,2.724,136,1.068,137,0.942,138,2.724,139,2.351,140,3.364,141,3.364,142,2.351,143,2.351]],["title/classes/TcsEventManager.html",[0,0.127,67,1.672]],["body/classes/TcsEventManager.html",[0,0.098,2,0.603,3,0.461,4,0.398,5,0.34,7,0.685,8,0.417,9,0.673,10,1.631,14,1.18,15,1.379,20,0.496,21,0.049,30,1.65,34,0.776,35,0.019,36,0.027,37,0.019,43,2.141,52,2.188,66,1.65,67,1.889,80,1.883,83,1.132,84,1.132,86,1.132,100,1.294,101,1.499,110,1.132,114,2.23,116,3.851,125,1.889,126,3.156,127,3.359,128,3.359,135,2.588,136,1.451,137,1.281,138,3.359,144,1.774,145,3.773,146,3.773,147,3.773,148,3.773,149,3.196,150,2.588,151,1.889,152,3.196,153,3.196,154,3.196,155,3.196,156,2.19,157,2.451,158,2.19,159,2.19,160,2.19,161,3.196,162,2.19,163,4.605,164,2.19,165,3.773,166,3.773,167,3.196,168,2.19,169,1.774,170,2.19,171,2.19,172,2.19,173,2.19,174,2.19,175,2.19,176,3.196,177,2.19,178,2.19,179,1.294,180,2.19,181,2.19]],["title/classes/TcsLanguageManager.html",[0,0.127,70,1.672]],["body/classes/TcsLanguageManager.html",[0,0.115,2,0.703,3,0.537,4,0.464,5,0.396,7,0.798,8,0.333,9,0.75,10,1.454,12,1.262,14,1.284,15,1.462,20,0.637,21,0.049,24,1.574,29,1.454,34,0.903,35,0.022,36,0.031,37,0.022,54,2.414,59,2.811,64,2.106,70,2.106,77,1.874,80,2.018,83,1.262,84,1.262,85,1.428,86,1.262,89,1.158,97,3.325,100,2.106,101,2.439,110,1.262,151,2.106,157,2.106,182,2.066,183,3.563,184,3.563,185,3.924,186,3.563,187,2.551,188,3.563,189,3.563,190,4.106,191,2.885,192,3.563,193,5.073,194,3.563,195,3.563,196,2.551,197,4.445,198,2.439,199,3.563,200,2.551,201,2.551,202,2.551,203,2.551,204,3.563,205,1.746,206,2.551,207,2.551,208,2.551]],["title/classes/TcsModule.html",[0,0.127,209,1.285]],["body/classes/TcsModule.html",[0,0.061,2,0.375,3,0.287,4,0.248,5,0.211,7,0.426,8,0.178,9,0.466,10,1.711,12,0.784,13,1.308,14,0.692,15,1.492,17,1.793,20,0.718,21,0.049,24,1.689,29,1.476,34,0.784,35,0.012,36,0.019,37,0.012,60,1.308,62,1.308,65,1.005,69,2.205,77,1.775,81,3.587,83,0.99,84,1.255,85,1.121,86,0.99,88,2.599,89,1.462,91,1.103,95,1.143,99,1.515,105,1.515,106,1.515,107,1.829,110,1.417,111,0.932,113,2.265,120,2.287,122,1.308,124,1.903,136,1.27,137,0.546,191,3.074,209,1.005,210,1.103,211,3.797,212,4.169,213,4.169,214,2.797,215,4.169,216,4.001,217,2.797,218,3.221,219,2.608,220,3.221,221,3.221,222,2.797,223,2.214,224,1.362,225,2.869,226,2.739,227,2.214,228,3.152,229,2.214,230,2.214,231,3.797,232,2.214,233,1.515,234,2.214,235,1.793,236,1.362,237,1.362,238,1.362,239,1.362,240,1.362,241,1.362,242,1.362,243,1.362,244,2.205,245,1.362,246,1.663,247,1.362,248,1.362,249,3.543,250,2.265,251,1.362,252,3.221,253,2.214,254,2.214,255,2.214,256,1.515,257,2.214,258,1.793,259,2.214,260,1.362,261,1.793,262,2.869,263,1.362,264,1.362,265,1.362,266,2.797,267,2.797,268,3.221,269,1.308,270,2.214,271,1.362,272,1.362,273,2.214,274,1.914,275,1.362,276,2.797,277,1.362,278,2.214,279,2.608,280,2.214,281,1.362,282,2.214,283,1.362,284,1.362,285,1.362,286,0.703,287,1.362,288,1.362,289,1.362]],["title/classes/TcsModuleManager.html",[0,0.127,72,1.672]],["body/classes/TcsModuleManager.html",[0,0.099,2,0.606,3,0.463,4,0.4,5,0.341,7,0.688,8,0.287,9,0.675,10,1.339,11,1.506,12,1.135,14,1.183,15,1.3,20,0.498,21,0.049,24,1.135,29,1.135,33,1.894,34,1.135,35,0.019,36,0.027,37,0.019,64,1.894,66,1.655,72,1.894,77,0.881,83,1.135,84,1.135,85,0.881,86,1.135,89,0.999,104,2.596,106,1.506,107,1.136,110,1.135,124,1.894,136,0.999,137,0.881,151,1.894,157,2.611,169,1.781,198,2.194,205,2.194,209,1.887,219,1.781,226,2.194,228,3.139,233,2.194,246,2.569,256,2.589,274,2.845,290,1.781,291,3.783,292,3.783,293,3.206,294,3.206,295,2.2,296,3.206,297,3.206,298,3.206,299,2.2,300,3.206,301,3.206,302,3.206,303,3.206,304,3.206,305,2.2,306,2.2,307,2.2,308,2.2,309,2.2,310,3.206,311,2.2,312,2.2,313,1.781,314,2.2,315,2.2,316,2.2,317,2.2,318,2.2,319,2.2,320,1.3,321,2.2,322,2.2,323,2.2,324,2.2,325,2.2,326,2.2,327,2.2,328,2.2,329,2.2,330,1.781,331,2.2,332,2.2,333,2.2,334,2.2]],["title/classes/TcsThread.html",[0,0.127,335,1.672]],["body/classes/TcsThread.html",[0,0.054,1,1.187,2,0.333,3,0.255,4,0.22,5,0.188,7,0.379,8,0.158,9,0.423,10,1.581,12,0.712,13,1.772,14,0.379,15,1.423,18,2.456,19,1.627,20,0.661,21,0.049,22,2.305,24,1.409,26,0.829,28,2.053,29,1.547,30,2.349,33,2.12,34,1.346,35,0.01,36,0.017,37,0.01,61,1.376,62,1.187,69,2.723,77,1.594,80,1.806,82,1.627,83,1.346,84,1.346,85,1.333,86,1.346,95,1.852,99,0.829,105,0.829,107,2.131,110,1.409,111,0.829,120,2.131,122,1.187,125,1.772,136,0.912,137,0.805,179,1.522,205,1.376,209,1.629,226,1.376,228,2.351,246,2.349,256,0.829,262,1.627,269,2.44,274,0.829,279,0.98,313,1.627,320,1.187,335,1.187,336,0.98,337,2.576,338,3.851,339,2.576,340,2.576,341,3.588,342,2.086,343,2.01,344,2.01,345,2.999,346,2.01,347,1.627,348,2.01,349,2.01,350,3.651,351,2.429,352,1.211,353,2.131,354,1.211,355,2.01,356,1.211,357,1.211,358,1.211,359,1.211,360,2.01,361,2.456,362,1.211,363,2.01,364,2.01,365,1.627,366,2.01,367,1.211,368,2.01,369,2.999,370,2.01,371,1.211,372,2.01,373,1.211,374,3.588,375,2.999,376,1.627,377,1.211,378,2.576,379,2.01,380,2.01,381,2.01,382,1.211,383,1.211,384,1.211,385,1.211,386,1.211,387,1.211,388,1.211,389,2.01,390,2.576,391,1.211,392,1.211,393,1.211,394,2.01,395,1.211,396,1.187,397,1.211,398,1.211,399,1.211,400,2.01,401,1.211,402,1.211,403,1.211,404,1.211,405,2.576,406,1.211,407,1.211,408,2.01,409,1.211,410,1.211,411,1.211,412,1.211]],["title/interfaces/TcsThreadExec.html",[38,1.134,396,1.672]],["body/interfaces/TcsThreadExec.html",[3,0.822,4,0.71,5,0.606,8,0.509,9,0.99,20,0.73,21,0.047,35,0.033,36,0.04,37,0.033,38,1.564,40,2.307,77,2.021,120,2.604,246,2.703,361,3.584,396,2.778,413,3.161]],["title/classes/TcsThreadsManager.html",[0,0.127,74,1.672]],["body/classes/TcsThreadsManager.html",[0,0.09,2,0.549,3,0.42,4,0.363,5,0.31,7,0.623,8,0.466,9,0.628,10,1.265,12,1.056,13,2.631,14,1.117,15,1.327,18,2.904,20,0.615,21,0.049,22,1.844,28,2.041,29,1.403,33,2.11,34,1.502,35,0.017,36,0.026,37,0.017,61,3.047,64,1.762,66,1.539,74,1.762,77,1.7,80,1.354,83,1.265,84,1.265,85,1.431,86,1.265,89,1.354,95,1.844,107,1.539,110,1.502,120,2.19,122,1.762,124,1.762,125,1.762,150,2.415,151,1.762,179,1.762,209,2.021,228,2.918,246,2.298,269,1.762,330,2.892,335,1.762,338,2.415,347,2.415,350,3.381,351,2.415,353,1.539,361,2.904,365,2.415,376,2.415,414,1.615,415,3.571,416,2.982,417,2.982,418,2.982,419,2.982,420,1.994,421,1.994,422,2.982,423,2.982,424,2.982,425,1.994,426,3.963,427,1.994,428,1.994,429,1.994,430,1.994,431,1.994,432,1.994,433,1.994,434,1.994,435,2.982,436,1.994,437,3.963,438,1.994,439,2.982,440,1.994,441,1.994]],["title/contributing.html",[286,1.229,442,1.63,443,1.63]],["body/contributing.html",[5,0.531,21,0.043,24,1.211,35,0.029,36,0.037,37,0.029,65,1.553,100,2.021,235,2.77,353,1.766,443,2.341,444,4.333,445,2.77,446,3.42,447,2.77,448,2.77,449,4.333,450,3.255,451,4.755,452,4.755,453,3.42,454,4.333,455,4.333,456,3.509,457,3.42,458,3.42,459,3.42,460,2.341,461,3.42,462,3.42,463,3.42,464,2.77,465,4.333,466,4.333,467,2.341,468,3.42,469,3.42,470,3.42,471,3.42,472,3.42,473,3.42,474,3.42,475,4.333,476,3.42,477,2.77,478,4.333,479,3.42,480,3.42,481,3.42,482,3.42,483,3.42,484,2.77,485,2.77,486,2.77,487,3.42]],["title/coverage.html",[460,2.62]],["body/coverage.html",[0,0.242,1,1.865,5,0.49,6,2.556,20,0.49,21,0.048,35,0.027,36,0.035,37,0.027,38,1.834,39,1.865,41,2.432,43,1.629,55,1.865,56,2.556,65,1.433,67,1.865,70,1.865,72,1.865,74,1.865,95,1.629,114,1.865,115,2.556,144,2.556,182,2.556,209,1.433,210,2.556,290,2.556,320,2.973,335,1.865,336,2.556,396,1.865,413,2.556,414,2.556,450,2.161,460,2.161,488,3.157,489,3.157,490,2.556,491,4.115,492,2.556,493,4.115,494,4.578,495,3.157,496,4.115,497,4.115,498,4.115,499,3.157,500,3.157,501,3.157,502,3.157,503,3.157,504,3.157,505,3.157,506,3.157,507,2.556,508,3.157,509,3.157,510,3.157,511,3.157,512,3.157]],["title/dependencies.html",[244,2.323,513,2.381]],["body/dependencies.html",[21,0.043,35,0.038,36,0.043,37,0.038,244,3.017]],["title/miscellaneous/enumerations.html",[514,1.407,515,2.749]],["body/miscellaneous/enumerations.html",[8,0.436,21,0.048,35,0.029,36,0.037,37,0.029,41,1.975,46,2.922,47,2.922,48,2.922,49,2.204,51,2.523,126,2.523,137,2.244,179,1.975,225,3.457,250,3.457,258,2.707,320,1.975,514,1.975,515,2.707,516,3.342,517,3.342,518,3.342,519,3.342,520,3.342,521,3.342,522,3.342,523,3.342,524,3.342,525,2.707,526,3.342,527,3.342,528,3.342,529,4.269,530,3.342,531,4.269,532,3.342,533,3.342,534,4.269,535,4.269]],["title/index.html",[8,0.311,286,1.229,442,1.63]],["body/index.html",[4,0.579,11,2.181,21,0.042,35,0.027,36,0.035,37,0.027,49,1.645,65,2.348,66,2.137,157,1.883,185,2.58,198,2.181,233,2.181,286,1.645,353,1.645,443,2.181,445,3.352,447,2.58,448,2.58,456,2.58,464,3.352,467,2.181,477,3.352,484,2.58,486,3.352,536,3.186,537,3.186,538,4.599,539,3.186,540,3.186,541,4.599,542,3.186,543,4.14,544,4.14,545,3.186,546,3.186,547,2.58,548,3.186,549,3.186,550,3.186,551,3.186,552,3.186,553,3.186,554,3.186,555,3.186,556,3.186,557,3.186,558,3.186,559,3.186,560,4.14,561,4.14,562,4.599,563,3.186,564,3.186,565,3.186,566,3.186,567,3.186,568,3.186,569,4.14,570,3.186,571,3.186,572,3.186,573,3.186,574,3.186,575,3.186,576,3.186,577,3.186,578,3.186,579,3.186,580,3.186,581,3.186]],["title/license.html",[286,1.229,442,1.63,582,1.928]],["body/license.html",[21,0.035,35,0.027,36,0.035,37,0.027,126,1.871,450,2.167,467,2.822,485,2.564,547,2.564,582,2.564,583,3.166,584,4.585,585,3.166,586,3.166,587,3.166,588,4.123,589,3.166,590,3.166,591,3.166,592,3.166,593,3.166,594,3.166,595,4.123,596,5.39,597,3.166,598,3.166,599,3.166,600,4.585,601,3.166,602,4.123,603,3.166,604,3.166,605,3.166,606,3.166,607,3.166,608,3.166,609,3.166,610,3.166,611,3.166,612,4.123,613,3.166,614,3.166,615,3.166,616,3.166,617,3.166,618,3.166,619,4.123,620,4.123,621,3.166,622,3.166,623,3.166,624,3.166,625,3.166,626,3.166,627,3.166,628,3.166,629,3.166,630,3.166,631,3.166,632,3.166,633,3.166,634,3.166,635,3.166,636,3.166,637,3.166,638,3.166,639,3.166,640,3.166,641,3.166,642,3.166,643,3.166,644,3.166,645,3.166,646,3.166,647,3.166,648,3.166,649,3.166]],["title/modules.html",[60,2.262]],["body/modules.html",[21,0.043,35,0.038,36,0.043,37,0.038,60,2.605]],["title/overview.html",[650,3.099]],["body/overview.html",[2,1.193,21,0.043,35,0.037,36,0.043,37,0.037,40,2.561,525,3.509,650,3.509,651,4.333]],["title/miscellaneous/variables.html",[514,1.407,652,2.749]],["body/miscellaneous/variables.html",[8,0.475,20,0.699,21,0.048,24,1.289,26,2.491,30,1.879,35,0.031,36,0.039,37,0.031,54,1.879,55,2.151,59,3.083,62,2.151,65,2.045,88,2.491,136,1.652,137,1.458,261,2.947,269,2.662,342,2.947,350,2.491,353,1.879,490,2.947,492,3.648,507,2.947,514,2.151,652,2.947,653,3.64,654,3.64,655,4.504,656,3.64,657,3.64,658,3.64,659,3.64,660,3.64,661,3.64,662,3.64,663,3.64,664,3.64,665,3.64]]],"invertedIndex":[["",{"_index":21,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":320,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0/1",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":508,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":179,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/enumerations.html":{}}}],["10",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["100",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["2",{"_index":524,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["2/4",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":586,"title":{},"body":{"license.html":{}}}],["25",{"_index":505,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":525,"title":{},"body":{"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3/5",{"_index":498,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":527,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["4/6",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["7/15",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["8/14",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":651,"title":{},"body":{"overview.html":{}}}],["_",{"_index":403,"title":{},"body":{"classes/TcsThread.html":{}}}],["above",{"_index":618,"title":{},"body":{"license.html":{}}}],["action",{"_index":643,"title":{},"body":{"license.html":{}}}],["actions",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["actually",{"_index":368,"title":{},"body":{"classes/TcsThread.html":{}}}],["add",{"_index":157,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["addconfig",{"_index":183,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addconfig(langtoappend",{"_index":186,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["addeventhandler",{"_index":145,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["addmoduletogame",{"_index":293,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["addmoduletogame(newmodule",{"_index":298,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["already",{"_index":328,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["amount",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["and/or",{"_index":610,"title":{},"body":{"license.html":{}}}],["appear",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":363,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread",{"_index":343,"title":{},"body":{"classes/TcsThread.html":{}}}],["appendthread(module",{"_index":360,"title":{},"body":{"classes/TcsThread.html":{}}}],["applyeventhandler",{"_index":117,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["applyeventhandler(data",{"_index":133,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["arising",{"_index":647,"title":{},"body":{"license.html":{}}}],["array",{"_index":226,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["ask",{"_index":556,"title":{},"body":{"index.html":{}}}],["associated",{"_index":597,"title":{},"body":{"license.html":{}}}],["authors",{"_index":636,"title":{},"body":{"license.html":{}}}],["await",{"_index":385,"title":{},"body":{"classes/TcsThread.html":{}}}],["before",{"_index":449,"title":{},"body":{"contributing.html":{}}}],["benchmark",{"_index":19,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{}}}],["benchmark.stop",{"_index":394,"title":{},"body":{"classes/TcsThread.html":{}}}],["between",{"_index":28,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["blue",{"_index":526,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["boolean",{"_index":69,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["build",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["c",{"_index":585,"title":{},"body":{"license.html":{}}}],["called",{"_index":124,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["can't",{"_index":325,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["catch",{"_index":105,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["category/name",{"_index":255,"title":{},"body":{"classes/TcsModule.html":{}}}],["charge",{"_index":592,"title":{},"body":{"license.html":{}}}],["citizenfx/client",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["citizenfx/server",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["claim",{"_index":639,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"overview.html":{}}}],["cleartick(this.tick",{"_index":408,"title":{},"body":{"classes/TcsThread.html":{}}}],["clicking",{"_index":574,"title":{},"body":{"index.html":{}}}],["client",{"_index":48,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{}}}],["clone",{"_index":563,"title":{},"body":{"index.html":{}}}],["code",{"_index":456,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["color",{"_index":257,"title":{},"body":{"classes/TcsModule.html":{}}}],["come",{"_index":426,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["comes",{"_index":364,"title":{},"body":{"classes/TcsThread.html":{}}}],["command",{"_index":486,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["compile",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["compiling",{"_index":470,"title":{},"body":{"contributing.html":{}}}],["concatened",{"_index":254,"title":{},"body":{"classes/TcsModule.html":{}}}],["conditions",{"_index":617,"title":{},"body":{"license.html":{}}}],["conduct",{"_index":553,"title":{},"body":{"index.html":{}}}],["config",{"_index":207,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configuration",{"_index":199,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["configured",{"_index":194,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["connection",{"_index":648,"title":{},"body":{"license.html":{}}}],["console",{"_index":88,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["console.log",{"_index":91,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["console.log(consolecolors.red",{"_index":282,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors",{"_index":250,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/enumerations.html":{}}}],["consolecolors.blue",{"_index":288,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.blue}[tcs",{"_index":92,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.green",{"_index":278,"title":{},"body":{"classes/TcsModule.html":{}}}],["consolecolors.green}ready",{"_index":108,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.red",{"_index":274,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["consolecolors.red}${key",{"_index":206,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["consolecolors.red}can't",{"_index":312,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["consolecolors.red}error",{"_index":391,"title":{},"body":{"classes/TcsThread.html":{}}}],["consolecolors.reset",{"_index":113,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["consolecolors.yellow",{"_index":256,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["consolecolors.yellow}[${thread.id.split",{"_index":397,"title":{},"body":{"classes/TcsThread.html":{}}}],["consolecolors.yellow}[debug",{"_index":112,"title":{},"body":{"classes/TcsCore.html":{}}}],["consolecolors.yellow}initializing",{"_index":93,"title":{},"body":{"classes/TcsCore.html":{}}}],["const",{"_index":33,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor",{"_index":14,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["constructor(eventtype",{"_index":119,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["constructor(moduletype",{"_index":224,"title":{},"body":{"classes/TcsModule.html":{}}}],["constructor(timer",{"_index":348,"title":{},"body":{"classes/TcsThread.html":{}}}],["contained",{"_index":369,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid",{"_index":344,"title":{},"body":{"classes/TcsThread.html":{}}}],["containsthreadbyid(id",{"_index":366,"title":{},"body":{"classes/TcsThread.html":{}}}],["contract",{"_index":644,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":548,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":443,"title":{"contributing.html":{}},"body":{"contributing.html":{},"index.html":{}}}],["contribution",{"_index":444,"title":{},"body":{"contributing.html":{}}}],["copies",{"_index":612,"title":{},"body":{"license.html":{}}}],["copy",{"_index":595,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":584,"title":{},"body":{"license.html":{}}}],["core",{"_index":66,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["correctly",{"_index":277,"title":{},"body":{"classes/TcsModule.html":{}}}],["coverage",{"_index":460,"title":{"coverage.html":{}},"body":{"contributing.html":{},"coverage.html":{}}}],["create",{"_index":122,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["created",{"_index":365,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["creates",{"_index":150,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsThreadsManager.html":{}}}],["createthread",{"_index":416,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["createthread(module",{"_index":419,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["current",{"_index":24,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["currentthread",{"_index":428,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["currentthread.appendthread(module",{"_index":434,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["damages",{"_index":640,"title":{},"body":{"license.html":{}}}],["data",{"_index":53,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["date",{"_index":382,"title":{},"body":{"classes/TcsThread.html":{}}}],["deal",{"_index":599,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":649,"title":{},"body":{"license.html":{}}}],["debug",{"_index":62,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":76,"title":{},"body":{"classes/TcsCore.html":{}}}],["debugexec",{"_index":337,"title":{},"body":{"classes/TcsThread.html":{}}}],["debugmode",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default",{"_index":136,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delay",{"_index":338,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["delete",{"_index":423,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["deleted",{"_index":375,"title":{},"body":{"classes/TcsThread.html":{}}}],["deletes",{"_index":422,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["dependencies",{"_index":244,"title":{"dependencies.html":{}},"body":{"classes/TcsModule.html":{},"dependencies.html":{}}}],["dependency",{"_index":314,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["depends",{"_index":235,"title":{},"body":{"classes/TcsModule.html":{},"contributing.html":{}}}],["description",{"_index":86,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["destroymethod",{"_index":211,"title":{},"body":{"classes/TcsModule.html":{}}}],["destroymodule",{"_index":218,"title":{},"body":{"classes/TcsModule.html":{}}}],["developped",{"_index":540,"title":{},"body":{"index.html":{}}}],["dictionnary",{"_index":189,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["difference",{"_index":27,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["directly",{"_index":555,"title":{},"body":{"index.html":{}}}],["discution",{"_index":557,"title":{},"body":{"index.html":{}}}],["display",{"_index":79,"title":{},"body":{"classes/TcsCore.html":{}}}],["distribute",{"_index":608,"title":{},"body":{"license.html":{}}}],["docs",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["documentation",{"_index":450,"title":{},"body":{"contributing.html":{},"coverage.html":{},"license.html":{}}}],["doesn't",{"_index":331,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["don't",{"_index":551,"title":{},"body":{"index.html":{}}}],["down",{"_index":273,"title":{},"body":{"classes/TcsModule.html":{}}}],["download",{"_index":541,"title":{},"body":{"index.html":{}}}],["drag",{"_index":578,"title":{},"body":{"index.html":{}}}],["draw",{"_index":87,"title":{},"body":{"classes/TcsCore.html":{}}}],["drop",{"_index":579,"title":{},"body":{"index.html":{}}}],["e",{"_index":279,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["each",{"_index":125,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["emitnet('tcs:handleevent",{"_index":176,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["encountered",{"_index":392,"title":{},"body":{"classes/TcsThread.html":{}}}],["enum",{"_index":45,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["enumerations",{"_index":515,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":462,"title":{},"body":{"contributing.html":{}}}],["error",{"_index":106,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["especially",{"_index":568,"title":{},"body":{"index.html":{}}}],["event",{"_index":126,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"miscellaneous/enumerations.html":{},"license.html":{}}}],["event.eventtype",{"_index":173,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.target",{"_index":163,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["event.targetid",{"_index":177,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["eventmanager",{"_index":57,"title":{},"body":{"classes/TcsCore.html":{}}}],["events",{"_index":128,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["eventtype",{"_index":50,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{}}}],["example",{"_index":7,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exec",{"_index":361,"title":{},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["execs",{"_index":339,"title":{},"body":{"classes/TcsThread.html":{}}}],["execute",{"_index":353,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["executecommand('clear",{"_index":90,"title":{},"body":{"classes/TcsCore.html":{}}}],["executed",{"_index":130,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["executions",{"_index":351,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["exist",{"_index":332,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["exists",{"_index":329,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["expectations",{"_index":458,"title":{},"body":{"contributing.html":{}}}],["experience",{"_index":566,"title":{},"body":{"index.html":{}}}],["express",{"_index":627,"title":{},"body":{"license.html":{}}}],["extends",{"_index":42,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["false",{"_index":107,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{}}}],["files",{"_index":598,"title":{},"body":{"license.html":{}}}],["filter((listener",{"_index":171,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["filter((mod",{"_index":309,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["filter((module",{"_index":305,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["find",{"_index":198,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["findmodulebyid",{"_index":291,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["first",{"_index":569,"title":{},"body":{"index.html":{}}}],["fitness",{"_index":632,"title":{},"body":{"license.html":{}}}],["fivem",{"_index":538,"title":{},"body":{"index.html":{}}}],["fivemtcs",{"_index":587,"title":{},"body":{"license.html":{}}}],["folder",{"_index":477,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["following",{"_index":485,"title":{},"body":{"contributing.html":{},"license.html":{}}}],["foreach((listener",{"_index":174,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["foreach((module",{"_index":307,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["forget",{"_index":552,"title":{},"body":{"index.html":{}}}],["format",{"_index":466,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":330,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["foundmodule",{"_index":310,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["foundmodule.modulelaunched",{"_index":318,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["fr",{"_index":655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":539,"title":{},"body":{"index.html":{}}}],["free",{"_index":591,"title":{},"body":{"license.html":{}}}],["function",{"_index":120,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["furnished",{"_index":615,"title":{},"body":{"license.html":{}}}],["game",{"_index":300,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["gamemodules",{"_index":292,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["get(key",{"_index":195,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getcurrentresourcename",{"_index":202,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["getdependencies",{"_index":219,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{}}}],["geteventtype",{"_index":118,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["getgametimer",{"_index":32,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["getid",{"_index":220,"title":{},"body":{"classes/TcsModule.html":{}}}],["getthreadtimer",{"_index":345,"title":{},"body":{"classes/TcsThread.html":{}}}],["getting",{"_index":442,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{}}],["git",{"_index":560,"title":{},"body":{"index.html":{}}}],["go",{"_index":109,"title":{},"body":{"classes/TcsCore.html":{}}}],["going",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["granted",{"_index":590,"title":{},"body":{"license.html":{}}}],["green",{"_index":523,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["guide",{"_index":550,"title":{},"body":{"index.html":{}}}],["guidelines",{"_index":446,"title":{},"body":{"contributing.html":{}}}],["handler",{"_index":116,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["handles",{"_index":152,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["here",{"_index":445,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["hereby",{"_index":589,"title":{},"body":{"license.html":{}}}],["holders",{"_index":637,"title":{},"body":{"license.html":{}}}],["https://github.com/fivemtcs/core.gitissues",{"_index":564,"title":{},"body":{"index.html":{}}}],["id",{"_index":246,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["identifier",{"_index":488,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":234,"title":{},"body":{"classes/TcsModule.html":{}}}],["ignore",{"_index":101,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{}}}],["implied",{"_index":628,"title":{},"body":{"license.html":{}}}],["included",{"_index":621,"title":{},"body":{"license.html":{}}}],["including",{"_index":602,"title":{},"body":{"license.html":{}}}],["incoming",{"_index":153,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["informations",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialize",{"_index":64,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["initmodule",{"_index":221,"title":{},"body":{"classes/TcsModule.html":{}}}],["install",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["installed",{"_index":317,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["instance",{"_index":229,"title":{},"body":{"classes/TcsModule.html":{}}}],["interface",{"_index":38,"title":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsThreadExec.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["interfaces",{"_index":40,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"interfaces/TcsThreadExec.html":{},"overview.html":{}}}],["isn't",{"_index":316,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["isserversided",{"_index":58,"title":{},"body":{"classes/TcsCore.html":{}}}],["issue",{"_index":573,"title":{},"body":{"index.html":{}}}],["issues",{"_index":567,"title":{},"body":{"index.html":{}}}],["isthreadfull",{"_index":340,"title":{},"body":{"classes/TcsThread.html":{}}}],["it's",{"_index":297,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["json.parse",{"_index":200,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["key",{"_index":197,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["keys",{"_index":192,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["kind",{"_index":626,"title":{},"body":{"license.html":{}}}],["lang",{"_index":59,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["langtoappend",{"_index":190,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["language",{"_index":185,"title":{},"body":{"classes/TcsLanguageManager.html":{},"index.html":{}}}],["last",{"_index":542,"title":{},"body":{"index.html":{}}}],["latest",{"_index":562,"title":{},"body":{"index.html":{}}}],["launch",{"_index":232,"title":{},"body":{"classes/TcsModule.html":{}}}],["launchmethod",{"_index":212,"title":{},"body":{"classes/TcsModule.html":{}}}],["level",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["liability",{"_index":641,"title":{},"body":{"license.html":{}}}],["liable",{"_index":638,"title":{},"body":{"license.html":{}}}],["license",{"_index":582,"title":{"license.html":{}},"body":{"license.html":{}}}],["limitation",{"_index":603,"title":{},"body":{"license.html":{}}}],["limited",{"_index":629,"title":{},"body":{"license.html":{}}}],["list",{"_index":191,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{}}}],["listen",{"_index":129,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener",{"_index":123,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["listener.applyeventhandler(event.data",{"_index":175,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listener.geteventtype",{"_index":172,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["listeners",{"_index":146,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["load",{"_index":303,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loaded",{"_index":296,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["loadresourcefile",{"_index":201,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["loads",{"_index":301,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["local",{"_index":47,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{}}}],["manager",{"_index":151,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["matching",{"_index":36,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["maxexectimeperthread",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["maximum",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["merchantability",{"_index":631,"title":{},"body":{"license.html":{}}}],["merge",{"_index":606,"title":{},"body":{"license.html":{}}}],["message",{"_index":81,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{}}}],["messagecolor",{"_index":249,"title":{},"body":{"classes/TcsModule.html":{}}}],["method",{"_index":231,"title":{},"body":{"classes/TcsModule.html":{}}}],["methods",{"_index":12,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["miscellaneous",{"_index":514,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":583,"title":{},"body":{"license.html":{}}}],["mod",{"_index":315,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mod.getid",{"_index":334,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["mode",{"_index":82,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{}}}],["modify",{"_index":605,"title":{},"body":{"license.html":{}}}],["module",{"_index":228,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["module.getid",{"_index":313,"title":{},"body":{"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["module.initmodule",{"_index":322,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.modulelaunched",{"_index":306,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["module.shouldlaunch",{"_index":321,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["moduledependencies",{"_index":213,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulelaunched",{"_index":214,"title":{},"body":{"classes/TcsModule.html":{}}}],["modulename",{"_index":215,"title":{},"body":{"classes/TcsModule.html":{}}}],["modules",{"_index":60,"title":{"modules.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"modules.html":{}}}],["moduletype",{"_index":216,"title":{},"body":{"classes/TcsModule.html":{}}}],["ms",{"_index":26,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["n${e",{"_index":393,"title":{},"body":{"classes/TcsThread.html":{}}}],["name",{"_index":84,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["needed",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":95,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["newmodule",{"_index":302,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["newmodule.getid",{"_index":326,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["next",{"_index":580,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":635,"title":{},"body":{"license.html":{}}}],["notice",{"_index":619,"title":{},"body":{"license.html":{}}}],["npm",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["null",{"_index":412,"title":{},"body":{"classes/TcsThread.html":{}}}],["number",{"_index":22,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["object",{"_index":54,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"miscellaneous/variables.html":{}}}],["obtaining",{"_index":594,"title":{},"body":{"license.html":{}}}],["onnet('tcs:handleevent",{"_index":162,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["open",{"_index":537,"title":{},"body":{"index.html":{}}}],["optional",{"_index":85,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["otherwise",{"_index":646,"title":{},"body":{"license.html":{}}}],["out",{"_index":547,"title":{},"body":{"index.html":{},"license.html":{}}}],["outcoming",{"_index":154,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["overview",{"_index":650,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":513,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":546,"title":{},"body":{"index.html":{}}}],["param",{"_index":110,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["parameters",{"_index":83,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["particular",{"_index":633,"title":{},"body":{"license.html":{}}}],["peds",{"_index":531,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["permission",{"_index":588,"title":{},"body":{"license.html":{}}}],["permit",{"_index":613,"title":{},"body":{"license.html":{}}}],["person",{"_index":593,"title":{},"body":{"license.html":{}}}],["persons",{"_index":614,"title":{},"body":{"license.html":{}}}],["player",{"_index":532,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["player_loaded",{"_index":529,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["players",{"_index":533,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["please",{"_index":447,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["portions",{"_index":623,"title":{},"body":{"license.html":{}}}],["possible",{"_index":565,"title":{},"body":{"index.html":{}}}],["prefix",{"_index":253,"title":{},"body":{"classes/TcsModule.html":{}}}],["presentation",{"_index":536,"title":{},"body":{"index.html":{}}}],["prettier",{"_index":465,"title":{},"body":{"contributing.html":{}}}],["print",{"_index":252,"title":{},"body":{"classes/TcsModule.html":{}}}],["printdebug",{"_index":222,"title":{},"body":{"classes/TcsModule.html":{}}}],["printdebug(message",{"_index":248,"title":{},"body":{"classes/TcsModule.html":{}}}],["printed",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["private",{"_index":10,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["project",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["promise",{"_index":400,"title":{},"body":{"classes/TcsThread.html":{}}}],["promise((resolve",{"_index":402,"title":{},"body":{"classes/TcsThread.html":{}}}],["properties",{"_index":9,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["provided",{"_index":624,"title":{},"body":{"license.html":{}}}],["publish",{"_index":607,"title":{},"body":{"license.html":{}}}],["pull",{"_index":451,"title":{},"body":{"contributing.html":{}}}],["purpose",{"_index":634,"title":{},"body":{"license.html":{}}}],["push",{"_index":469,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":554,"title":{},"body":{"index.html":{}}}],["read",{"_index":448,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["reading",{"_index":549,"title":{},"body":{"index.html":{}}}],["readme",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["ready",{"_index":233,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["red",{"_index":522,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["release",{"_index":577,"title":{},"body":{"index.html":{}}}],["releases",{"_index":545,"title":{},"body":{"index.html":{}}}],["remainingdependenciestostart",{"_index":308,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remainingdependenciestostart.length",{"_index":319,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["remove",{"_index":374,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads",{"_index":346,"title":{},"body":{"classes/TcsThread.html":{}}}],["removemodulethreads(module",{"_index":372,"title":{},"body":{"classes/TcsThread.html":{}}}],["removethread",{"_index":347,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethread(id",{"_index":376,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule",{"_index":417,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["removethreadbymodule(module",{"_index":424,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["report",{"_index":572,"title":{},"body":{"index.html":{}}}],["repository",{"_index":559,"title":{},"body":{"index.html":{}}}],["request",{"_index":474,"title":{},"body":{"contributing.html":{}}}],["requests",{"_index":452,"title":{},"body":{"contributing.html":{}}}],["reset",{"_index":521,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["resolved",{"_index":401,"title":{},"body":{"classes/TcsThread.html":{}}}],["resources",{"_index":544,"title":{},"body":{"index.html":{}}}],["ressource",{"_index":230,"title":{},"body":{"classes/TcsModule.html":{}}}],["restriction",{"_index":601,"title":{},"body":{"license.html":{}}}],["result",{"_index":35,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":37,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":34,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["rights",{"_index":604,"title":{},"body":{"license.html":{}}}],["same",{"_index":327,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["scheduleresourcetick",{"_index":103,"title":{},"body":{"classes/TcsCore.html":{}}}],["scripts",{"_index":656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["search",{"_index":370,"title":{},"body":{"classes/TcsThread.html":{}}}],["section",{"_index":558,"title":{},"body":{"index.html":{}}}],["sell",{"_index":611,"title":{},"body":{"license.html":{}}}],["send",{"_index":138,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["sendevent",{"_index":147,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["sending",{"_index":473,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":49,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["server.cfgensure",{"_index":581,"title":{},"body":{"index.html":{}}}],["set",{"_index":261,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/variables.html":{}}}],["setdestroymodule",{"_index":223,"title":{},"body":{"classes/TcsModule.html":{}}}],["setdestroymodule(destroymethod",{"_index":259,"title":{},"body":{"classes/TcsModule.html":{}}}],["settick",{"_index":169,"title":{},"body":{"classes/TcsEventManager.html":{},"classes/TcsModuleManager.html":{}}}],["settick(async",{"_index":384,"title":{},"body":{"classes/TcsThread.html":{}}}],["settimeout(resolve",{"_index":404,"title":{},"body":{"classes/TcsThread.html":{}}}],["setup",{"_index":463,"title":{},"body":{"contributing.html":{}}}],["shall",{"_index":620,"title":{},"body":{"license.html":{}}}],["shoulddeletethread",{"_index":437,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["shouldlaunch",{"_index":217,"title":{},"body":{"classes/TcsModule.html":{}}}],["shutting",{"_index":281,"title":{},"body":{"classes/TcsModule.html":{}}}],["simple",{"_index":576,"title":{},"body":{"index.html":{}}}],["software",{"_index":596,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"index.html":{}}}],["sources",{"_index":561,"title":{},"body":{"index.html":{}}}],["specified",{"_index":80,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["src/.../mixed_config.ts",{"_index":654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_consolecolors.ts",{"_index":516,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mixed_events.ts",{"_index":518,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mixed_eventslist.ts",{"_index":517,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../mixed_main.ts",{"_index":653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../mixed_moduletypes.ts",{"_index":519,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/assets/lang/${tcs_config.lang}.json",{"_index":203,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/assets/mixed_config.ts",{"_index":490,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts",{"_index":6,"title":{},"body":{"classes/TcsBenchmark.html":{},"coverage.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:21",{"_index":23,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/benchmark/mixed_benchmark.ts:8",{"_index":16,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts",{"_index":115,"title":{},"body":{"classes/TcsEventListener.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:25",{"_index":139,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:33",{"_index":134,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:8",{"_index":132,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventlistenerclass.ts:9",{"_index":121,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts",{"_index":144,"title":{},"body":{"classes/TcsEventManager.html":{},"coverage.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:53",{"_index":158,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:61",{"_index":156,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:8",{"_index":159,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/events/mixed_eventmanager.ts:9",{"_index":149,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts",{"_index":182,"title":{},"body":{"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:28",{"_index":196,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:44",{"_index":187,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/language/mixed_languagemanager.ts:8",{"_index":184,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["src/core/librairies/modules/mixed_module.ts",{"_index":210,"title":{},"body":{"classes/TcsModule.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_module.ts:10",{"_index":238,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:11",{"_index":237,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:112",{"_index":251,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:12",{"_index":236,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:14",{"_index":239,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:15",{"_index":227,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:44",{"_index":245,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:52",{"_index":243,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:60",{"_index":260,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:67",{"_index":242,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:8",{"_index":241,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:9",{"_index":240,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_module.ts:91",{"_index":247,"title":{},"body":{"classes/TcsModule.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts",{"_index":290,"title":{},"body":{"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:50",{"_index":299,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:68",{"_index":295,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/modules/mixed_modulesmanager.ts:8",{"_index":294,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["src/core/librairies/threads/mixed_threads.ts",{"_index":336,"title":{},"body":{"classes/TcsThread.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:10",{"_index":359,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:102",{"_index":377,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:11",{"_index":358,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:117",{"_index":373,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:13",{"_index":349,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:134",{"_index":367,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:49",{"_index":371,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:57",{"_index":352,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:76",{"_index":354,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:8",{"_index":357,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:85",{"_index":362,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threads.ts:9",{"_index":356,"title":{},"body":{"classes/TcsThread.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts",{"_index":414,"title":{},"body":{"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:25",{"_index":420,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:46",{"_index":421,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:64",{"_index":425,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/librairies/threads/mixed_threadsmanager.ts:8",{"_index":418,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["src/core/mixed_tcs.ts",{"_index":56,"title":{},"body":{"classes/TcsCore.html":{},"coverage.html":{}}}],["src/core/mixed_tcs.ts:10",{"_index":71,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:11",{"_index":75,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:12",{"_index":63,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:43",{"_index":78,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:8",{"_index":68,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/core/mixed_tcs.ts:9",{"_index":73,"title":{},"body":{"classes/TcsCore.html":{}}}],["src/mixed_main.ts",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/types/events/mixed_events.ts",{"_index":41,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/types/events/mixed_eventslist.ts",{"_index":528,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/mixed_consolecolors.ts",{"_index":520,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/mixed_moduletypes.ts",{"_index":530,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/types/threads/mixed_threadinterface.ts",{"_index":413,"title":{},"body":{"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["start",{"_index":11,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModuleManager.html":{},"index.html":{}}}],["startdependencies",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["started",{"_index":286,"title":{"contributing.html":{},"index.html":{},"license.html":{}},"body":{"classes/TcsModule.html":{},"index.html":{}}}],["starting",{"_index":287,"title":{},"body":{"classes/TcsModule.html":{}}}],["starts",{"_index":17,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{}}}],["statements",{"_index":489,"title":{},"body":{"coverage.html":{}}}],["stop",{"_index":13,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["stopped",{"_index":262,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["string",{"_index":77,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{}}}],["style",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":616,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":609,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":622,"title":{},"body":{"license.html":{}}}],["system",{"_index":535,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["table",{"_index":512,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":511,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":52,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{}}}],["targetid",{"_index":44,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{}}}],["tcs",{"_index":65,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"contributing.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["tcs.debug",{"_index":205,"title":{},"body":{"classes/TcsLanguageManager.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{}}}],["tcs.isserversided",{"_index":165,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcs.threads.removethreadbymodule(this",{"_index":275,"title":{},"body":{"classes/TcsModule.html":{}}}],["tcs_config",{"_index":492,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcs_config.debugmode",{"_index":111,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["tcs_config.lang",{"_index":208,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["tcs_config.maxexectimeperthread",{"_index":395,"title":{},"body":{"classes/TcsThread.html":{}}}],["tcsbenchmark",{"_index":1,"title":{"classes/TcsBenchmark.html":{}},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"coverage.html":{}}}],["tcsclientevent",{"_index":39,"title":{"interfaces/TcsClientEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"coverage.html":{}}}],["tcscore",{"_index":55,"title":{"classes/TcsCore.html":{}},"body":{"classes/TcsCore.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tcsevent",{"_index":43,"title":{"interfaces/TcsEvent.html":{}},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventlistener",{"_index":114,"title":{"classes/TcsEventListener.html":{}},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventmanager",{"_index":67,"title":{"classes/TcsEventManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"coverage.html":{}}}],["tcseventslist",{"_index":51,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"miscellaneous/enumerations.html":{}}}],["tcseventtarget",{"_index":46,"title":{},"body":{"interfaces/TcsClientEvent.html":{},"interfaces/TcsEvent.html":{},"miscellaneous/enumerations.html":{}}}],["tcseventtarget.client",{"_index":167,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.local",{"_index":166,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcseventtarget.server",{"_index":164,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["tcslanguagemanager",{"_index":70,"title":{"classes/TcsLanguageManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{},"coverage.html":{}}}],["tcsmodule",{"_index":209,"title":{"classes/TcsModule.html":{}},"body":{"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsmodulemanager",{"_index":72,"title":{"classes/TcsModuleManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{},"coverage.html":{}}}],["tcsmoduletypes",{"_index":225,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/enumerations.html":{}}}],["tcsthread",{"_index":335,"title":{"classes/TcsThread.html":{}},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tcsthread(timer",{"_index":432,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["tcsthreadexec",{"_index":396,"title":{"interfaces/TcsThreadExec.html":{}},"body":{"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"coverage.html":{}}}],["tcsthreadsmanager",{"_index":74,"title":{"classes/TcsThreadsManager.html":{}},"body":{"classes/TcsCore.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{}}}],["tells",{"_index":25,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.debugexec(thread",{"_index":388,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.delay(this.timer",{"_index":386,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.destroymethod",{"_index":266,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.eventmanager",{"_index":94,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.eventtype",{"_index":141,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.execs",{"_index":378,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter",{"_index":409,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.filter((thread",{"_index":407,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.find((thread",{"_index":411,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.foreach((thread",{"_index":387,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.length",{"_index":405,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.execs.push(thread",{"_index":406,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.findmodulebyid(mod",{"_index":311,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.findmodulebyid(newmodule.getid",{"_index":323,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules",{"_index":304,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.find((mod",{"_index":333,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.gamemodules.push(newmodule",{"_index":324,"title":{},"body":{"classes/TcsModuleManager.html":{}}}],["this.getid",{"_index":289,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.handler",{"_index":142,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.handler(data",{"_index":143,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["this.isserversided",{"_index":102,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.isthreadfull",{"_index":380,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.lang",{"_index":97,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsLanguageManager.html":{}}}],["this.lang[key",{"_index":204,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["this.launchmethod",{"_index":265,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.launchmethod(this",{"_index":284,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.listeners",{"_index":161,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.listeners.push(handler",{"_index":181,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.moduledependencies",{"_index":270,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modulelaunched",{"_index":267,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modulename",{"_index":264,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.modules",{"_index":96,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.moduletype",{"_index":263,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.moduletype}/${this.modulename",{"_index":271,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug",{"_index":276,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('module",{"_index":285,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('shutting",{"_index":272,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.printdebug('starting",{"_index":283,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.removethreadbymodule(module",{"_index":441,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.sendevent(event",{"_index":168,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.shouldlaunch",{"_index":268,"title":{},"body":{"classes/TcsModule.html":{}}}],["this.start",{"_index":31,"title":{},"body":{"classes/TcsBenchmark.html":{}}}],["this.threadid",{"_index":381,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.threads",{"_index":98,"title":{},"body":{"classes/TcsCore.html":{}}}],["this.threadslist",{"_index":427,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.find((thread",{"_index":429,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.foreach((thread",{"_index":435,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.push(currentthread",{"_index":433,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.threadslist.splice(index",{"_index":439,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["this.tick",{"_index":383,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.timer",{"_index":379,"title":{},"body":{"classes/TcsThread.html":{}}}],["this.waitingevents",{"_index":160,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.foreach((event",{"_index":170,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.push(event",{"_index":180,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["this.waitingevents.splice(index",{"_index":178,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["thread",{"_index":350,"title":{},"body":{"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["thread.containsthreadbyid(id",{"_index":436,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.exec",{"_index":389,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.getthreadtimer",{"_index":430,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.id",{"_index":390,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.id.split",{"_index":410,"title":{},"body":{"classes/TcsThread.html":{}}}],["thread.isthreadfull",{"_index":431,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removemodulethreads(module",{"_index":440,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thread.removethread(id",{"_index":438,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["threadid",{"_index":341,"title":{},"body":{"classes/TcsThread.html":{}}}],["threads",{"_index":61,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["threadslist",{"_index":415,"title":{},"body":{"classes/TcsThreadsManager.html":{}}}],["thrown",{"_index":280,"title":{},"body":{"classes/TcsModule.html":{}}}],["tick",{"_index":342,"title":{},"body":{"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["time",{"_index":30,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsThread.html":{},"miscellaneous/variables.html":{}}}],["timer",{"_index":18,"title":{},"body":{"classes/TcsBenchmark.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{}}}],["times",{"_index":131,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["took",{"_index":399,"title":{},"body":{"classes/TcsThread.html":{}}}],["tort",{"_index":645,"title":{},"body":{"license.html":{}}}],["translation",{"_index":193,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["translations",{"_index":188,"title":{},"body":{"classes/TcsLanguageManager.html":{}}}],["triggered",{"_index":127,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["triggers",{"_index":135,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{}}}],["true",{"_index":269,"title":{},"body":{"classes/TcsModule.html":{},"classes/TcsThread.html":{},"classes/TcsThreadsManager.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":99,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModule.html":{},"classes/TcsThread.html":{}}}],["ts",{"_index":100,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"contributing.html":{}}}],["tslint",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/TcsBenchmark.html":{},"interfaces/TcsClientEvent.html":{},"classes/TcsCore.html":{},"interfaces/TcsEvent.html":{},"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"interfaces/TcsThreadExec.html":{},"classes/TcsThreadsManager.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":484,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["ui",{"_index":534,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["undefined",{"_index":104,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsModuleManager.html":{}}}],["update",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["use",{"_index":467,"title":{},"body":{"contributing.html":{},"index.html":{},"license.html":{}}}],["used",{"_index":155,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["using",{"_index":464,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["value",{"_index":137,"title":{},"body":{"classes/TcsEventListener.html":{},"classes/TcsEventManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThread.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":652,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verify",{"_index":571,"title":{},"body":{"index.html":{}}}],["version",{"_index":543,"title":{},"body":{"index.html":{}}}],["versions",{"_index":570,"title":{},"body":{"index.html":{}}}],["very",{"_index":575,"title":{},"body":{"index.html":{}}}],["void",{"_index":89,"title":{},"body":{"classes/TcsCore.html":{},"classes/TcsEventListener.html":{},"classes/TcsLanguageManager.html":{},"classes/TcsModule.html":{},"classes/TcsModuleManager.html":{},"classes/TcsThreadsManager.html":{}}}],["wait",{"_index":355,"title":{},"body":{"classes/TcsThread.html":{}}}],["waiting",{"_index":140,"title":{},"body":{"classes/TcsEventListener.html":{}}}],["waitingevents",{"_index":148,"title":{},"body":{"classes/TcsEventManager.html":{}}}],["warning",{"_index":398,"title":{},"body":{"classes/TcsThread.html":{}}}],["warranties",{"_index":630,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":625,"title":{},"body":{"license.html":{}}}],["whether",{"_index":642,"title":{},"body":{"license.html":{}}}],["without",{"_index":600,"title":{},"body":{"license.html":{}}}],["yellow",{"_index":258,"title":{},"body":{"classes/TcsModule.html":{},"miscellaneous/enumerations.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/TcsBenchmark.html":{"url":"classes/TcsBenchmark.html","title":"class - TcsBenchmark","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsBenchmark\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/benchmark/mixed_benchmark.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                start\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                stop\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n                \n                    \n                            Starts the timer for the benchmark\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            start\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            stop\n                        \n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/benchmark/mixed_benchmark.ts:21\n                \n            \n\n\n            \n                \n                    Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The time difference in ms\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsBenchmark {\n\tprivate start: number;\n\n\t/**\n\t * Starts the timer for the benchmark\n\t */\n\tconstructor() {\n\t\tthis.start = GetGameTimer();\n\t}\n\n\t/**\n\t * Stop the timer of the current benchmark and tells the ms difference between the start and the stop\n\t * @returns The time difference in ms\n\t */\n\tstop() {\n\t\tconst difference = GetGameTimer() - this.start;\n\t\treturn difference;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsClientEvent.html":{"url":"interfaces/TcsClientEvent.html","title":"interface - TcsClientEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsClientEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n            \n                Extends\n            \n            \n                        TcsEvent\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        targetId\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        targetId\n                                    \n                                \n                                \n                                    \n                                        targetId:         Number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsCore.html":{"url":"classes/TcsCore.html","title":"class - TcsCore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsCore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/mixed_tcs.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventManager\n                            \n                            \n                                isServerSided\n                            \n                            \n                                lang\n                            \n                            \n                                modules\n                            \n                            \n                                threads\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n                \n                    \n                            Initialize the TCS core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isServerSided\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsLanguageManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            modules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            threads\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThreadsManager\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/mixed_tcs.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            debug\n                        \n                        \n                    \n                \n            \n            \n                \ndebug(message: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/mixed_tcs.ts:43\n                \n            \n\n\n            \n                \n                    Display the specified message if the server is in debug mode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Message to draw in the console\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsCore {\n\teventManager: TcsEventManager;\n\tmodules: TcsModuleManager;\n\tlang: TcsLanguageManager;\n\tthreads: TcsThreadsManager;\n\tisServerSided: boolean;\n\n\t/**\n\t * Initialize the TCS core\n\t */\n\tconstructor() {\n\t\tExecuteCommand('clear ');\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.YELLOW}Initializing...`,\n\t\t);\n\t\tthis.eventManager = new TcsEventManager();\n\t\tthis.modules = new TcsModuleManager();\n\t\tthis.lang = new TcsLanguageManager();\n\t\tthis.threads = new TcsThreadsManager();\n\n\t\ttry {\n\t\t\t//@ts-ignore\n\t\t\tthis.isServerSided = ScheduleResourceTick != undefined;\n\t\t} catch (error) {\n\t\t\tthis.isServerSided = false;\n\t\t}\n\n\t\tconsole.log(\n\t\t\t`${ConsoleColors.BLUE}[TCS] ${ConsoleColors.GREEN}Ready to go !`,\n\t\t);\n\t}\n\n\t/**\n\t * Display the specified message if the server is in debug mode\n\t * @param message Message to draw in the console\n\t */\n\tdebug(message: String) {\n\t\tif (TCS_CONFIG.debugMode) {\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.YELLOW}[debug] ${message}`,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsEvent.html":{"url":"interfaces/TcsEvent.html","title":"interface - TcsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/events/mixed_events.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        eventType\n                                \n                                \n                                        target\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:         Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventType\n                                    \n                                \n                                \n                                    \n                                        eventType:         TcsEventsList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventsList\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                    \n                                \n                                \n                                    \n                                        target:         TcsEventTarget\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TcsEventTarget\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        enum TcsEventTarget {\n\tLOCAL = 'local',\n\tCLIENT = 'client',\n\tSERVER = 'server',\n}\n\ninterface TcsEvent {\n\teventType: TcsEventsList;\n\ttarget: TcsEventTarget;\n\tdata: Object;\n}\n\ninterface TcsClientEvent extends TcsEvent {\n\ttargetId: Number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventListener.html":{"url":"classes/TcsEventListener.html","title":"class - TcsEventListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventListenerClass.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                eventType\n                            \n                            \n                                    Private\n                                handler\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyEventHandler\n                            \n                            \n                                getEventType\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventType: TcsEventsList, handler: Function)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n                \n                    \n                            Create a listener that will be called each time the specified event is triggered\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        eventType\n                                                  \n                                                        \n                                                                        TcsEventsList\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Type of events to listen to\n\n                                                        \n                                                \n                                                \n                                                        handler\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Current event handler, that will be executed each times the event is triggered\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            eventType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventsList\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handler\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            applyEventHandler\n                        \n                        \n                    \n                \n            \n            \n                \napplyEventHandler(data: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:33\n                \n            \n\n\n            \n                \n                    Triggers the event listener function with the specified data\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        {}\n                                    \n\n                                    \n                                        Data to send to the event listener function\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventType\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventType()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/events/mixed_eventListenerClass.ts:25\n                \n            \n\n\n            \n                \n                    Get the current listener event it is waiting for\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Current event type name\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventListener {\n\tprivate eventType: TcsEventsList;\n\tprivate handler: Function;\n\n\t/**\n\t * Create a listener that will be called each time the specified event is triggered\n\t * @param eventType Type of events to listen to\n\t * @param handler Current event handler, that will be executed each times the event is triggered\n\t */\n\tconstructor(eventType: TcsEventsList, handler: Function) {\n\t\tthis.eventType = eventType;\n\t\tthis.handler = handler;\n\t}\n\n\t/**\n\t *\tGet the current listener event it is waiting for\n\t * @returns Current event type name\n\t */\n\tgetEventType() {\n\t\treturn this.eventType;\n\t}\n\n\t/**\n\t * Triggers the event listener function with the specified data\n\t * @param data Data to send to the event listener function\n\t */\n\tapplyEventHandler(data: Object = {}) {\n\t\tthis.handler(data);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsEventManager.html":{"url":"classes/TcsEventManager.html","title":"class - TcsEventManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsEventManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/events/mixed_eventManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                addEventHandler\n                            \n                            \n                                    Private\n                                listeners\n                            \n                            \n                                sendEvent\n                            \n                            \n                                    Private\n                                waitingEvents\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an event manager. It handles all the incoming events and outcoming events.\nShould only be used by the core.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addEventHandler\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:61\n                            \n                        \n\n                \n                    \n                        Add an event handler that will be triggered each time the specified event will be triggered\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        handler\n                                                        \n                                                                Handler to add\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listeners\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEventListener[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sendEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:53\n                            \n                        \n\n                \n                    \n                        Send the specified event and triggers it for the target\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        event\n                                                        \n                                                                Event to send\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            waitingEvents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsEvent[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/events/mixed_eventManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        class TcsEventManager {\n\tprivate waitingEvents: TcsEvent[];\n\tprivate listeners: TcsEventListener[];\n\n\t/**\n\t * Creates an event manager. It handles all the incoming events and outcoming events.\n\t * Should only be used by the core.\n\t */\n\tconstructor() {\n\t\tthis.waitingEvents = [];\n\t\tthis.listeners = [];\n\n\t\tonNet('tcs:handleEvent', (event: TcsEvent) => {\n\t\t\tif (event.target === TcsEventTarget.SERVER) {\n\t\t\t\tif (TCS.isServerSided) event.target = TcsEventTarget.LOCAL;\n\t\t\t\telse event.target = TcsEventTarget.CLIENT;\n\t\t\t}\n\t\t\tif (event.target === TcsEventTarget.CLIENT && !TCS.isServerSided) {\n\t\t\t\tevent.target = TcsEventTarget.LOCAL;\n\t\t\t}\n\t\t\tthis.sendEvent(event);\n\t\t});\n\n\t\tsetTick(() => {\n\t\t\tthis.waitingEvents.forEach((event, index) => {\n\t\t\t\tif (event.target == TcsEventTarget.LOCAL) {\n\t\t\t\t\tthis.listeners\n\t\t\t\t\t\t.filter((listener) => listener.getEventType() == event.eventType)\n\t\t\t\t\t\t.forEach((listener) => listener.applyEventHandler(event.data));\n\t\t\t\t} else {\n\t\t\t\t\tif (!TCS.isServerSided) emitNet('tcs:handleEvent', event);\n\t\t\t\t\telse {\n\t\t\t\t\t\t//@ts-ignore\n\t\t\t\t\t\temitNet('tcs:handleEvent', event.targetId, event);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.waitingEvents.splice(index, 1);\n\t\t\t\treturn;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Send the specified event and triggers it for the target\n\t * @param event Event to send\n\t */\n\tsendEvent = (event: TcsEvent) => {\n\t\tthis.waitingEvents.push(event);\n\t};\n\n\t/**\n\t * Add an event handler that will be triggered each time the specified event will be triggered\n\t * @param handler Handler to add\n\t */\n\taddEventHandler = (handler: TcsEventListener) => {\n\t\tthis.listeners.push(handler);\n\t};\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsLanguageManager.html":{"url":"classes/TcsLanguageManager.html","title":"class - TcsLanguageManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsLanguageManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/language/mixed_languageManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                lang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addConfig\n                            \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the language manager\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lang\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/language/mixed_languageManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addConfig\n                        \n                        \n                    \n                \n            \n            \n                \naddConfig(langToAppend: Object)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:44\n                \n            \n\n\n            \n                \n                    Add translations to the current dictionnary\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    langToAppend\n                                    \n                                                Object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        List of keys and their translation in the current configured language\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            get\n                        \n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/language/mixed_languageManager.ts:28\n                \n            \n\n\n            \n                \n                    Get the translation of the specified key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Translation to find\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Translation in the specified language in the configuration\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsLanguageManager {\n\tprivate lang: object;\n\n\t/**\n\t * Initialize the language manager\n\t */\n\tconstructor() {\n\t\tthis.lang =\n\t\t\tJSON.parse(\n\t\t\t\tLoadResourceFile(\n\t\t\t\t\tGetCurrentResourceName(),\n\t\t\t\t\t`src/assets/lang/${TCS_CONFIG.lang}.json`,\n\t\t\t\t),\n\t\t\t) || {};\n\t}\n\n\t/**\n\t * Get the translation of the specified key\n\t * @param key Translation to find\n\t * @returns Translation in the specified language in the configuration\n\t */\n\tget(key: string): String {\n\t\t//@ts-ignore\n\t\tif (!this.lang[key]) {\n\t\t\tTCS.debug(\n\t\t\t\t`${ConsoleColors.RED}${key} is not defined for config ${TCS_CONFIG.lang}.`,\n\t\t\t);\n\t\t}\n\n\t\t//@ts-ignore\n\t\treturn this.lang[key] || '';\n\t}\n\n\t/**\n\t * Add translations to the current dictionnary\n\t * @param langToAppend List of keys and their translation in the current configured language\n\t */\n\taddConfig(langToAppend: Object) {\n\t\tthis.lang = { ...this.lang, ...langToAppend };\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModule.html":{"url":"classes/TcsModule.html","title":"class - TcsModule","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModule\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_module.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyMethod\n                            \n                            \n                                    Private\n                                launchMethod\n                            \n                            \n                                    Private\n                                moduleDependencies\n                            \n                            \n                                moduleLaunched\n                            \n                            \n                                    Private\n                                moduleName\n                            \n                            \n                                    Private\n                                moduleType\n                            \n                            \n                                shouldLaunch\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                destroyModule\n                            \n                            \n                                getDependencies\n                            \n                            \n                                getId\n                            \n                            \n                                initModule\n                            \n                            \n                                printDebug\n                            \n                            \n                                setDestroyModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleType: TcsModuleTypes, moduleName: String, launchMethod: Function, moduleDependencies: Array)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_module.ts:15\n                            \n                        \n\n                \n                    \n                            Create a new Tcs module instance\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        moduleType\n                                                  \n                                                        \n                                                                        TcsModuleTypes\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Type of the current module\n\n                                                        \n                                                \n                                                \n                                                        moduleName\n                                                  \n                                                        \n                                                                        String\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Name of the current module, as if it was a ressource\n\n                                                        \n                                                \n                                                \n                                                        launchMethod\n                                                  \n                                                        \n                                                                        Function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Method to launch when the module is ready\n\n                                                        \n                                                \n                                                \n                                                        moduleDependencies\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                List of modules ids this module depends on\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            launchMethod\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleDependencies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            moduleLaunched\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            moduleType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsModuleTypes\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shouldLaunch\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_module.ts:15\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            destroyModule\n                        \n                        \n                    \n                \n            \n            \n                \ndestroyModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:67\n                \n            \n\n\n            \n                \n                    Stop the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getDependencies\n                        \n                        \n                    \n                \n            \n            \n                \ngetDependencies()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:52\n                \n            \n\n\n            \n                \n                    Get the list of the current module dependencies\n\n\n                    \n                    \n                    \n                        Returns :     Array\n\n                    \n                    \n                        list of current module dependencies\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getId\n                        \n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:44\n                \n            \n\n\n            \n                \n                    Get the id of the current module\n\n\n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        id of the current module\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            initModule\n                        \n                        \n                    \n                \n            \n            \n                \ninitModule()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:91\n                \n            \n\n\n            \n                \n                    Starts the module\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            printDebug\n                        \n                        \n                    \n                \n            \n            \n                \nprintDebug(message: String, messageColor: ConsoleColors)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:112\n                \n            \n\n\n            \n                \n                    Print a debug message to the console\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        Message to print in the console, a prefix is concatened to it (category/name)\n\n                                    \n                                \n                                \n                                    messageColor\n                                    \n                                                ConsoleColors\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ConsoleColors.YELLOW\n                                    \n\n                                    \n                                        Color of the current message in the console, yellow by default\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDestroyModule\n                        \n                        \n                    \n                \n            \n            \n                \nsetDestroyModule(destroyMethod: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_module.ts:60\n                \n            \n\n\n            \n                \n                    Set the method that will be called when the module has to be stopped\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    destroyMethod\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Method that will be called when the module is stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModule {\n\tprivate moduleType: TcsModuleTypes;\n\tprivate moduleName: String;\n\tprivate moduleDependencies: Array;\n\tprivate launchMethod: Function;\n\tprivate destroyMethod: Function;\n\n\tmoduleLaunched: Boolean;\n\tshouldLaunch: Boolean;\n\n\t/**\n\t * Create a new Tcs module instance\n\t * @param moduleType Type of the current module\n\t * @param moduleName Name of the current module, as if it was a ressource\n\t * @param launchMethod Method to launch when the module is ready\n\t * @param moduleDependencies List of modules ids this module depends on\n\t */\n\tconstructor(\n\t\tmoduleType: TcsModuleTypes,\n\t\tmoduleName: String,\n\t\tlaunchMethod: Function,\n\t\tmoduleDependencies: Array = [],\n\t) {\n\t\tthis.moduleType = moduleType;\n\t\tthis.moduleName = moduleName;\n\t\tthis.launchMethod = launchMethod;\n\t\tthis.destroyMethod = () => {};\n\t\tthis.moduleLaunched = false;\n\t\tthis.shouldLaunch = true;\n\n\t\tthis.moduleDependencies = moduleDependencies;\n\t}\n\n\t/**\n\t * Get the id of the current module\n\t * @returns id of the current module\n\t */\n\tgetId(): String {\n\t\treturn `${this.moduleType}/${this.moduleName}`;\n\t}\n\n\t/**\n\t * Get the list of the current module dependencies\n\t * @returns list of current module dependencies\n\t */\n\tgetDependencies(): Array {\n\t\treturn this.moduleDependencies;\n\t}\n\n\t/**\n\t * Set the method that will be called when the module has to be stopped\n\t * @param destroyMethod Method that will be called when the module is stopped\n\t */\n\tsetDestroyModule(destroyMethod: Function) {\n\t\tthis.destroyMethod = destroyMethod;\n\t}\n\n\t/**\n\t * Stop the module\n\t */\n\tdestroyModule() {\n\t\tthis.printDebug('Shutting down module !', ConsoleColors.RED);\n\t\ttry {\n\t\t\tTCS.threads.removeThreadByModule(this);\n\t\t\tthis.moduleLaunched = false;\n\t\t\tthis.shouldLaunch = false;\n\t\t\tthis.destroyMethod();\n\t\t\tthis.printDebug(\n\t\t\t\t'Module has been stopped correctly !',\n\t\t\t\tConsoleColors.GREEN,\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while shutting down the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Starts the module\n\t */\n\tinitModule() {\n\t\tthis.printDebug('Starting module !');\n\t\ttry {\n\t\t\tthis.launchMethod(this);\n\t\t\tthis.moduleLaunched = true;\n\t\t\tthis.printDebug('Module has been started !', ConsoleColors.GREEN);\n\t\t} catch (e) {\n\t\t\tthis.printDebug(\n\t\t\t\t'An error has been thrown while starting the module !',\n\t\t\t\tConsoleColors.RED,\n\t\t\t);\n\t\t\tconsole.log(ConsoleColors.RED, e, ConsoleColors.RESET);\n\t\t\tthis.shouldLaunch = false;\n\t\t}\n\t}\n\n\t/**\n\t * Print a debug message to the console\n\t * @param message Message to print in the console, a prefix is concatened to it (category/name)\n\t * @param messageColor Color of the current message in the console, yellow by default\n\t */\n\tprintDebug(\n\t\tmessage: String,\n\t\tmessageColor: ConsoleColors = ConsoleColors.YELLOW,\n\t) {\n\t\tif (TCS_CONFIG.debugMode)\n\t\t\tconsole.log(\n\t\t\t\t`${ConsoleColors.BLUE} [${this.getId()}] ${messageColor}`,\n\t\t\t\tmessage,\n\t\t\t\tConsoleColors.RESET,\n\t\t\t);\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsModuleManager.html":{"url":"classes/TcsModuleManager.html","title":"class - TcsModuleManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsModuleManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/modules/mixed_modulesManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                findModuleById\n                            \n                            \n                                    Private\n                                gameModules\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addModuleToGame\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the module manager.\nShould only be called by the core !\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            findModuleById\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:68\n                            \n                        \n\n                \n                    \n                        Get a loaded module by it's id\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        id\n                                                        \n                                                                Id of the module to find\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            gameModules\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addModuleToGame\n                        \n                        \n                    \n                \n            \n            \n                \naddModuleToGame(newModule: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/modules/mixed_modulesManager.ts:50\n                \n            \n\n\n            \n                \n                    Add a module to the current game and loads it when it is ready\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newModule\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module to add and load\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsModuleManager {\n\tprivate gameModules: Array;\n\n\t/**\n\t * Initialize the module manager.\n\t * Should only be called by the core !\n\t */\n\tconstructor() {\n\t\tthis.gameModules = [];\n\t\tsetTick(() =>\n\t\t\tthis.gameModules\n\t\t\t\t.filter((module) => !module.moduleLaunched)\n\t\t\t\t.forEach((module) => {\n\t\t\t\t\tconst remainingDependenciesToStart = module\n\t\t\t\t\t\t.getDependencies()\n\t\t\t\t\t\t.filter((mod) => {\n\t\t\t\t\t\t\tconst foundModule = this.findModuleById(mod);\n\n\t\t\t\t\t\t\tif (!foundModule) {\n\t\t\t\t\t\t\t\tTCS.debug(\n\t\t\t\t\t\t\t\t\t`${ConsoleColors.RED}Can't start module ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + module.getId() + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} because dependency ${\n\t\t\t\t\t\t\t\t\t\tConsoleColors.YELLOW + mod + ConsoleColors.RED\n\t\t\t\t\t\t\t\t\t} isn't installed.`,\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn !foundModule.moduleLaunched;\n\t\t\t\t\t\t});\n\n\t\t\t\t\tif (remainingDependenciesToStart.length == 0 && module.shouldLaunch)\n\t\t\t\t\t\tmodule.initModule();\n\t\t\t\t}),\n\t\t);\n\t}\n\n\t/**\n\t * Add a module to the current game and loads it when it is ready\n\t * @param newModule Module to add and load\n\t */\n\taddModuleToGame(newModule: TcsModule) {\n\t\tif (!this.findModuleById(newModule.getId()))\n\t\t\tthis.gameModules.push(newModule);\n\t\telse\n\t\t\tTCS.debug(\n\t\t\t\t`${ConsoleColors.RED} ERROR : Can't add module ${\n\t\t\t\t\tConsoleColors.YELLOW\n\t\t\t\t}${newModule.getId()}${\n\t\t\t\t\tConsoleColors.RED\n\t\t\t\t} because a module with the same id already exists !`,\n\t\t\t);\n\t}\n\n\t/**\n\t * Get a loaded module by it's id\n\t * @param id Id of the module to find\n\t * @returns The module if found, undefined if it doesn't exist\n\t */\n\tfindModuleById = (id: String): TcsModule | undefined =>\n\t\tthis.gameModules.find((mod) => mod.getId() === id);\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThread.html":{"url":"classes/TcsThread.html","title":"class - TcsThread","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThread\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threads.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugExec\n                            \n                            \n                                delay\n                            \n                            \n                                    Private\n                                execs\n                            \n                            \n                                isThreadFull\n                            \n                            \n                                    Private\n                                threadId\n                            \n                            \n                                    Private\n                                tick\n                            \n                            \n                                    Private\n                                timer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                appendThread\n                            \n                            \n                                containsThreadById\n                            \n                            \n                                getThreadTimer\n                            \n                            \n                                removeModuleThreads\n                            \n                            \n                                removeThread\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timer: number)\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n                \n                    \n                            Create a new thread with the specified delay\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timer\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Delay between each executions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            debugExec\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:57\n                            \n                        \n\n                \n                    \n                        Execute a thread function in debug mode\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        thread\n                                                        \n                                                                Thread to execute\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            delay\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:76\n                            \n                        \n\n                \n                    \n                        Wait the specified time\n\n                    \n                \n\n                    \n                        \n                          \n                                  Parameters :\n                                  \n                                      \n                                          \n                                                Name\n                                                    Description\n                                          \n                                      \n                                      \n                                                \n                                                        time\n                                                        \n                                                                Time of the delay\n\n                                                        \n                                                \n                                      \n                                  \n                          \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            execs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isThreadFull\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            tick\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threads.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            appendThread\n                        \n                        \n                    \n                \n            \n            \n                \nappendThread(module: TcsModule, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:85\n                \n            \n\n\n            \n                \n                    Append a function to execute after the delay in the current thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module the thread comes from\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            containsThreadById\n                        \n                        \n                    \n                \n            \n            \n                \ncontainsThreadById(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:134\n                \n            \n\n\n            \n                \n                    Get if a thread is actually contained in\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id to search for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the thread is contained, false else\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThreadTimer\n                        \n                        \n                    \n                \n            \n            \n                \ngetThreadTimer()\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:49\n                \n            \n\n\n            \n                \n                    Get current thread delay between each executions\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        Thread delay\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeModuleThreads\n                        \n                        \n                    \n                \n            \n            \n                \nremoveModuleThreads(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:117\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads have to be stopped\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threads.ts:102\n                \n            \n\n\n            \n                \n                    Stop and remove the specified thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the current thread has to be deleted, false if not\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThread {\n\tprivate threadId: number;\n\tprivate execs: Array;\n\tprivate timer: number;\n\tprivate tick: number;\n\n\tisThreadFull: boolean;\n\n\t/**\n\t * Create a new thread with the specified delay\n\t * @param timer Delay between each executions\n\t */\n\tconstructor(timer: number) {\n\t\tthis.execs = [];\n\t\tthis.timer = timer;\n\t\tthis.isThreadFull = false;\n\t\tthis.threadId = +new Date();\n\n\t\tthis.tick = setTick(async () => {\n\t\t\tawait this.delay(this.timer);\n\n\t\t\tconst benchmark = new TcsBenchmark();\n\t\t\tthis.execs.forEach((thread) => {\n\t\t\t\ttry {\n\t\t\t\t\tif (TCS_CONFIG.debugMode) this.debugExec(thread);\n\t\t\t\t\telse thread.exec();\n\t\t\t\t} catch (e) {\n\t\t\t\t\tTCS.debug(\n\t\t\t\t\t\t`${ConsoleColors.YELLOW} [${thread.id}] ${ConsoleColors.RED}Error encountered in thread : \\n${e}`,\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t\tconst time = benchmark.stop();\n\n\t\t\tif (time > TCS_CONFIG.maxExecTimePerThread) this.isThreadFull = true;\n\t\t});\n\t}\n\n\t/**\n\t * Get current thread delay between each executions\n\t * @returns Thread delay\n\t */\n\tgetThreadTimer(): number {\n\t\treturn this.timer;\n\t}\n\n\t/**\n\t * Execute a thread function in debug mode\n\t * @param thread Thread to execute\n\t */\n\tdebugExec = (thread: TcsThreadExec) => {\n\t\tconst benchmark = new TcsBenchmark();\n\t\tthread.exec();\n\t\tconst time = benchmark.stop();\n\n\t\tif (time >= 1) {\n\t\t\tTCS.debug(\n\t\t\t\t`${ConsoleColors.YELLOW}[${thread.id.split('-')[1]}] WARNING : ${\n\t\t\t\t\tConsoleColors.RED\n\t\t\t\t}Took ${time} ms to execute !`,\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * Wait the specified time\n\t * @param time Time of the delay\n\t * @returns Promise that is resolved after the delay\n\t */\n\tdelay = (time: number): Promise =>\n\t\tnew Promise((resolve, _) => setTimeout(resolve, time));\n\n\t/**\n\t * Append a function to execute after the delay in the current thread\n\t * @param module Module the thread comes from\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tappendThread(module: TcsModule, exec: Function): String {\n\t\tconst threadId = `${this.threadId}-${module.getId()}-${this.execs.length}`;\n\t\tconst thread: TcsThreadExec = {\n\t\t\tid: threadId,\n\t\t\texec: exec,\n\t\t};\n\n\t\tthis.execs.push(thread);\n\n\t\treturn threadId;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param id Id of the thread to remove\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveThread(id: String): boolean {\n\t\tthis.execs = this.execs.filter((thread) => thread.id !== id);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Stop and remove the specified thread\n\t * @param module Module from which the threads have to be stopped\n\t * @returns True if the current thread has to be deleted, false if not\n\t */\n\tremoveModuleThreads(module: TcsModule): boolean {\n\t\tthis.execs = this.execs.filter(\n\t\t\t(thread) => thread.id.split('-')[1] !== module.getId(),\n\t\t);\n\t\tif (this.execs.length == 0) {\n\t\t\tclearTick(this.tick);\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Get if a thread is actually contained in\n\t * @param id Id to search for\n\t * @returns True if the thread is contained, false else\n\t */\n\tcontainsThreadById(id: String): boolean {\n\t\treturn this.execs.find((thread) => thread.id === id) != null;\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TcsThreadExec.html":{"url":"interfaces/TcsThreadExec.html","title":"interface - TcsThreadExec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TcsThreadExec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/types/threads/mixed_threadInterface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        exec\n                                \n                                \n                                        id\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        exec\n                                    \n                                \n                                \n                                    \n                                        exec:         Function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         String\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         String\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface TcsThreadExec {\n\tid: String;\n\texec: Function;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TcsThreadsManager.html":{"url":"classes/TcsThreadsManager.html","title":"class - TcsThreadsManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TcsThreadsManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/core/librairies/threads/mixed_threadsManager.ts\n        \n\n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                threadsList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createThread\n                            \n                            \n                                removeThread\n                            \n                            \n                                removeThreadByModule\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n                \n                    \n                            Initialize the threads manager\nShould only be called by the core\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            threadsList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsThread[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createThread\n                        \n                        \n                    \n                \n            \n            \n                \ncreateThread(module: TcsModule, timer: number, exec: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:25\n                \n            \n\n\n            \n                \n                    Create a new thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module that creates the thread\n\n                                    \n                                \n                                \n                                    timer\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Delay between each executions\n\n                                    \n                                \n                                \n                                    exec\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Function to execute\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         String\n\n                    \n                    \n                        Created thread id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThread\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThread(id: String)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:46\n                \n            \n\n\n            \n                \n                    Stop and deletes a thread\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Id of the thread to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeThreadByModule\n                        \n                        \n                    \n                \n            \n            \n                \nremoveThreadByModule(module: TcsModule)\n                \n            \n\n\n            \n                \n                    Defined in src/core/librairies/threads/mixed_threadsManager.ts:64\n                \n            \n\n\n            \n                \n                    Stop all the threads that come from the specified module\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    module\n                                    \n                                                TcsModule\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Module from which the threads to stop come from\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        class TcsThreadsManager {\n\tprivate threadsList: TcsThread[];\n\n\t/**\n\t * Initialize the threads manager\n\t * Should only be called by the core\n\t */\n\tconstructor() {\n\t\tthis.threadsList = [];\n\t}\n\n\t/**\n\t * Create a new thread\n\t * @param module Module that creates the thread\n\t * @param timer Delay between each executions\n\t * @param exec Function to execute\n\t * @returns Created thread id\n\t */\n\tcreateThread(module: TcsModule, timer: number, exec: Function): String {\n\t\tlet found = false;\n\t\tconst currentThread =\n\t\t\tthis.threadsList.find((thread) => {\n\t\t\t\tif (thread.getThreadTimer() == timer && !thread.isThreadFull) {\n\t\t\t\t\tfound = true;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}) || new TcsThread(timer);\n\t\tif (!found) {\n\t\t\tthis.threadsList.push(currentThread);\n\t\t}\n\n\t\treturn currentThread.appendThread(module, exec);\n\t}\n\n\t/**\n\t * Stop and deletes a thread\n\t * @param id Id of the thread to delete\n\t */\n\tremoveThread(id: String) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tif (thread.containsThreadById(id)) {\n\t\t\t\tconst shouldDeleteThread = thread.removeThread(id);\n\n\t\t\t\tif (shouldDeleteThread) {\n\t\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Stop all the threads that come from the specified module\n\t * @param module Module from which the threads to stop come from\n\t */\n\tremoveThreadByModule(module: TcsModule) {\n\t\tthis.threadsList.forEach((thread, index) => {\n\t\t\tconst shouldDeleteThread = thread.removeModuleThreads(module);\n\n\t\t\tif (shouldDeleteThread) {\n\t\t\t\tthis.threadsList.splice(index, 1);\n\t\t\t\treturn this.removeThreadByModule(module);\n\t\t\t}\n\t\t});\n\t}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContribution\nHere are the contribution guidelines. Please, read it before contributing.\nDocumentation\n\nPull requests for docs update, if needed\nCode-level documentation expectations\n100% documentation coverage for pull requests\nUpdate readme if needed\n\n\n\nEnvironment setup\nTCS is using Prettier to format the code. You must use our format style in your push requests.\nCompiling\nYou must compile your TS file with these actions before sending a pull request. The build will appear in the build folder.\nnpm startDependencies\nThe current project depends on :\n\n@citizenfx/client\n@citizenfx/server\nprettier\ntslint\ntypescript\n\nExecute the following command to install them :\nnpm i\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/assets/mixed_config.ts\n            \n            variable\n            TCS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/core/librairies/benchmark/mixed_benchmark.ts\n            \n            class\n            TcsBenchmark\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventListenerClass.ts\n            \n            class\n            TcsEventListener\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/events/mixed_eventManager.ts\n            \n            class\n            TcsEventManager\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/core/librairies/language/mixed_languageManager.ts\n            \n            class\n            TcsLanguageManager\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_module.ts\n            \n            class\n            TcsModule\n            \n                46 %\n                (7/15)\n            \n        \n        \n            \n                \n                src/core/librairies/modules/mixed_modulesManager.ts\n            \n            class\n            TcsModuleManager\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threads.ts\n            \n            class\n            TcsThread\n            \n                57 %\n                (8/14)\n            \n        \n        \n            \n                \n                src/core/librairies/threads/mixed_threadsManager.ts\n            \n            class\n            TcsThreadsManager\n            \n                66 %\n                (4/6)\n            \n        \n        \n            \n                \n                src/core/mixed_tcs.ts\n            \n            class\n            TcsCore\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/mixed_main.ts\n            \n            variable\n            TCS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsClientEvent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/types/events/mixed_events.ts\n            \n            interface\n            TcsEvent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/types/threads/mixed_threadInterface.ts\n            \n            interface\n            TcsThreadExec\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ConsoleColors   (src/.../mixed_consoleColors.ts)\n                        \n                        \n                            TcsEventsList   (src/.../mixed_eventsList.ts)\n                        \n                        \n                            TcsEventTarget   (src/.../mixed_events.ts)\n                        \n                        \n                            TcsModuleTypes   (src/.../mixed_moduleTypes.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/types/mixed_consoleColors.ts\n    \n        \n            \n                \n                    \n                        \n                        ConsoleColors\n                    \n                \n                        \n                            \n                                 RESET\n                            \n                        \n                        \n                            \n                                Value : ^0\n                            \n                        \n                        \n                            \n                                 RED\n                            \n                        \n                        \n                            \n                                Value : ^1\n                            \n                        \n                        \n                            \n                                 GREEN\n                            \n                        \n                        \n                            \n                                Value : ^2\n                            \n                        \n                        \n                            \n                                 YELLOW\n                            \n                        \n                        \n                            \n                                Value : ^3\n                            \n                        \n                        \n                            \n                                 BLUE\n                            \n                        \n                        \n                            \n                                Value : ^4\n                            \n                        \n            \n        \n\n    src/types/events/mixed_eventsList.ts\n    \n        \n            \n                \n                    \n                        \n                        TcsEventsList\n                    \n                \n                        \n                            \n                                 PLAYER_LOADED\n                            \n                        \n                        \n                            \n                                Value : player_loaded\n                            \n                        \n            \n        \n\n    src/types/events/mixed_events.ts\n    \n        \n            \n                \n                    \n                        \n                        TcsEventTarget\n                    \n                \n                        \n                            \n                                 LOCAL\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 CLIENT\n                            \n                        \n                        \n                            \n                                Value : client\n                            \n                        \n                        \n                            \n                                 SERVER\n                            \n                        \n                        \n                            \n                                Value : server\n                            \n                        \n            \n        \n\n    src/types/mixed_moduleTypes.ts\n    \n        \n            \n                \n                    \n                        \n                        TcsModuleTypes\n                    \n                \n                        \n                            \n                                 PEDS\n                            \n                        \n                        \n                            \n                                Value : peds\n                            \n                        \n                        \n                            \n                                 PLAYER\n                            \n                        \n                        \n                            \n                                Value : players\n                            \n                        \n                        \n                            \n                                 UI\n                            \n                        \n                        \n                            \n                                Value : ui\n                            \n                        \n                        \n                            \n                                 SYSTEM\n                            \n                        \n                        \n                            \n                                Value : system\n                            \n                        \n                        \n                            \n                                 EVENT\n                            \n                        \n                        \n                            \n                                Value : event\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTCS Core\n    \nPresentation\nTCS is an open source FiveM framework developped with TypeScript language.\nYou can download the last version, ready to start on FiveM resources at the releases page.\nFind out how to contribute by reading the contributing guide.\nDon't forget to read the Code of Conduct.\n\nFor any question about the core, you can directly ask it into the \"discution\" section of this repository\n\nGit sources\nTo download the latest sources of TCS, execute this command :\ngit clone https://github.com/FiveMTCS/Core.gitIssues\nIt is possible that you experience some issues while using TCS, especially with the first versions of it. Please, first verify that you are using the latest version and then report the issue by clicking here.\nGet started\nIt is very simple to use TCS :\n\nDownload the latest release here\nDrag and drop the folder to your FiveM server resources folder\nAdd the next command to your server.cfgensure tcs\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2021 FiveMTCS\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    9 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            TCS   (src/.../mixed_main.ts)\n                        \n                        \n                            TCS_CONFIG   (src/.../mixed_config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/mixed_main.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TCS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         TcsCore\n\n                        \n                    \n\n\n            \n        \n\n    src/assets/mixed_config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TCS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n\tlang: 'fr-FR', // Current lang the scripts should be on\n\n\tdebugMode: true, // If set to true, debug informations are going to be printed in the console\n\n\tmaxExecTimePerThread: 10, // Maximum amount of time (in ms) a thread should take to execute in a tick\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
